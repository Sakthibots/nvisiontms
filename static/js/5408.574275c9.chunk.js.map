{"version":3,"file":"static/js/5408.574275c9.chunk.js","mappings":"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","sources":["contants/common.js","contants/Fields.js","utilz/utilz.js","views/screens/Print/components/PDFCheckBoxImg.jsx","views/screens/Print/components/CommonPdfComponents.jsx","contants/ShipmentEnums.js","utilz/dates.js","utilz/shipmentDataManupulation.js","views/screens/Print/Shipment/components/CMRPrintDocument.jsx","views/screens/Print/Shipment/components/workers/CMRWorker/PDF.jsx","views/screens/Print/Shipment/components/workers/CMRWorker/pdf.worker.js","views/screens/Print/Shipment/components/CIPrintDocument.jsx","views/screens/Print/Shipment/components/workers/CIWorker/PDF.jsx","views/screens/Print/Shipment/components/workers/CIWorker/pdf.worker.js","views/screens/Print/Shipment/components/PLPrintDocument.jsx","views/screens/Print/Shipment/components/workers/PLWorker/PDF.jsx","views/screens/Print/Shipment/components/workers/PLWorker/pdf.worker.js","views/screens/Print/Shipment/components/BolPrintDocument.jsx","views/screens/Print/Shipment/components/workers/BOLWorker/PDF.jsx","views/screens/Print/Shipment/components/workers/BOLWorker/pdf.worker.js","views/screens/Print/Shipment/components/ImoPrintDocument.jsx","views/screens/Print/Shipment/components/workers/IMOWorker/PDF.jsx","views/screens/Print/Shipment/components/workers/IMOWorker/pdf.worker.js","views/screens/Print/Shipment/components/SedPrintDocument.jsx","views/screens/Print/Shipment/components/workers/SEDWorker/PDF.jsx","workers/worker.js","views/screens/Print/Shipment/components/workers/SEDWorker/pdf.worker.js","views/screens/Shipment/components/Tabs/RateShopDetails/worker/constructForRateEngine.worker.js"],"sourcesContent":["import { Trans } from \"react-i18next\";\n\nexport const DEFAULT_STORE_OBJECT = {\n  progressing: false,\n  success: false,\n  error: false,\n  data: false,\n  message: false,\n};\n\nexport const PRINTED_BOL_FLAG_TYPES = { NO: \"No\", YES: \"yes\", Y: \"yes\" };\n\nexport const DEFAULT_LANGUAGE = \"en\";\n\nexport const DEFAULT_DATE_FORMAT = \"MM/DD/YYYY\";\n\nexport const PURCHASE_ORDER_DATE_FORMAT = \"YYYY-MM-DD\";\n\nexport const NVISION_USER_TYPES = {\n  VEND: \"VEND\",\n  CUST: \"CUST\",\n};\n\nexport const USER_TYPES_LABEL = {\n  VEND: <Trans i18nKey=\"translation:default.fields.vendor\" />,\n  CUST: <Trans i18nKey=\"translation:default.fields.customer.label\" />,\n  CARR: <Trans i18nKey=\"translation:default.fields.carrier\" />,\n};\n\nexport const WEEKS_DAYS = [\n  {\n    value: \"Sunday\",\n    label: <Trans i18nKey=\"translation:default.weekDays.sun\" />,\n  },\n  {\n    value: \"Monday\",\n    label: <Trans i18nKey=\"translation:default.weekDays.mon\" />,\n  },\n  {\n    value: \"Tuesday\",\n    label: <Trans i18nKey=\"translation:default.weekDays.tue\" />,\n  },\n  {\n    value: \"Wednesday\",\n    label: <Trans i18nKey=\"translation:default.weekDays.wed\" />,\n  },\n  {\n    value: \"Thursday\",\n    label: <Trans i18nKey=\"translation:default.weekDays.thu\" />,\n  },\n  {\n    value: \"Friday\",\n    label: <Trans i18nKey=\"translation:default.weekDays.fri\" />,\n  },\n  {\n    value: \"Saturday\",\n    label: <Trans i18nKey=\"translation:default.weekDays.sat\" />,\n  },\n];\n\nexport const NOTIFICATION_TYPES = {\n  SUCCESS: \"success\",\n  ERROR: \"error\",\n};\n\nexport const SORTING_ORDERS = {\n  ASC: \"ASC\",\n  DESC: \"DESC\",\n};\n\nexport const SORTING_ORDERS_ROUTING_GUIDE = {\n  ASC: \"true\",\n  DESC: \"false\",\n};\n\nexport const SORTING_FIELDS_PO_VENDOR = [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderNumber\" />,\n    value: \"PoNumber\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.poStatus.label\" />,\n    value: \"PovStatus\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.customerName.label\" />,\n    value: \"CustomerName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperName.label\" />,\n    value: \"OriginName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperCity.label\" />,\n    value: \"OriginCity\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperZip\" />,\n    value: \"OriginZip\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperState\" />,\n    value: \"OriginState\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperCountry.label\" />,\n    value: \"OriginCountry\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeName.label\" />,\n    value: \"ConsigneeName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeCity.label\" />,\n    value: \"Consignee City\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeZip\" />,\n    value: \"ConsigneeZip\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.conStateState\" />,\n    value: \"ConsigneeState\",\n  },\n  {\n    label: (\n      <Trans i18nKey=\"translation:default.fields.consigneeCountry.label\" />\n    ),\n    value: \"ConsigneeCountry\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderShipDate\" />,\n    value: \"OrderShipDate\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderDeliveryDate\" />,\n    value: \"OrderDeliveryDate\",\n  },\n];\n\nexport const SORTING_FIELDS_PO = () => [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderNumber\" />,\n    value: \"PoNumber\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.povStatus\" />,\n    value: \"PovStatus\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.customerName.label\" />,\n    value: \"CustomerName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperName.label\" />,\n    value: \"OriginName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperCity.label\" />,\n    value: \"OriginCity\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperZip\" />,\n    value: \"OriginZip\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperState\" />,\n    value: \"OriginState\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperCity.label\" />,\n    value: \"OriginCountry\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeName.label\" />,\n    value: \"ConsigneeName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeCity.label\" />,\n    value: \"Consignee City\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeZip\" />,\n    value: \"ConsigneeZip\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.conStateState\" />,\n    value: \"ConsigneeState\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeCity.label\" />,\n    value: \"ConsigneeCountry\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderShipDate\" />,\n    value: \"OrderShipDate\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderDeliveryDate\" />,\n    value: \"OrderDeliveryDate\",\n  },\n];\n\nexport const SORTING_FIELDS_PO_DETAIL = () => [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderNumber\" />,\n    value: \"poNumber\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.lineNumber.label\" />,\n    value: \"lineNum\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.partNumber\" />,\n    value: \"productCode\",\n  },\n  // {\n  //   label: <Trans i18nKey=\"translation:default.fields.paymentTerms\" />,\n  //   value: \"poPaymentTerm\",\n  // },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.orderShipDate\" />,\n    value: \"orderShipDate\",\n  },\n  // {\n  //   label: <Trans i18nKey=\"translation:default.fields.productDesc.label\" />,\n  //   value: \"productDesc\",\n  // },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.deliveryDate.label\" />,\n    value: \"OrderDeliveryDate\",\n  },\n];\n\nexport const MODULES_ID = {\n  SHIPMENT: 1,\n  VISIBILITY: 7,\n};\n\nexport const INCLUSIVE_EXCLUSIVE_OPTION = [\n  {\n    label: \"Inclusive\",\n    value: \"I\",\n  },\n  {\n    label: \"Exclusive\",\n    value: \"E\",\n  },\n];\n\nexport const SPOT_BID_TYPES_OPTION = [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.allSpotBids\" />,\n    value: \"A\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.openSpotBids\" />,\n    value: \"O\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.spotBidHistory\" />,\n    value: \"H\",\n  },\n];\n\nexport const SORTING_FILEDS_SPOT_BID = [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipmentNumber.label\" />,\n    value: \"shipmentNo\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.bidStatus\" />,\n    value: \"bidStatus\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.customerName.label\" />,\n    value: \"customerName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperName.label\" />,\n    value: \"shipperName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperAddress\" />,\n    value: \"originAddress\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperCity.label\" />,\n    value: \"originCity\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperZip\" />,\n    value: \"originZip\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperState\" />,\n    value: \"originState\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipperCountry.label\" />,\n    value: \"originCountry\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeName.label\" />,\n    value: \"consigneeName\",\n  },\n  {\n    label: (\n      <Trans i18nKey=\"translation:default.fields.consigneeAddress.label\" />\n    ),\n    value: \"destinationAddress\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeCity.label\" />,\n    value: \"destinationCity\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeZip\" />,\n    value: \"destinationZip\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.conStateState\" />,\n    value: \"destinationCity\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.consigneeCountry\" />,\n    value: \"destinationCountry\",\n  },\n];\n\nexport const YES_NO_OPTIONS = [\n  { label: <Trans i18nKey=\"translation:default.options.yes\" />, value: \"Y\" },\n  { label: <Trans i18nKey=\"translation:default.options.no\" />, value: \"N\" },\n];\nexport const YES_NO_SELECT_OPTIONS_EMPTY = [\n  { label: <Trans i18nKey=\"translation:default.buttons.select\" />, value: \"\" },\n  { label: <Trans i18nKey=\"translation:default.options.yes\" />, value: \"Yes\" },\n  { label: <Trans i18nKey=\"translation:default.options.no\" />, value: \"No\" },\n];\n\nexport const TRUE_FALSE_SELECT_OPTIONS_EMPTY = [\n  { label: <Trans i18nKey=\"translation:default.buttons.select\" />, value: \"\" },\n  { label: <Trans i18nKey=\"translation:default.options.yes\" />, value: true },\n  { label: <Trans i18nKey=\"translation:default.options.no\" />, value: false },\n];\n\nexport const STATUS_OPTIONS = [\n  { label: <Trans i18nKey=\"translation:default.buttons.select\" />, value: \"\" },\n  { label: \"Active\", value: \"Active\" },\n  { label: \"InActive\", value: \"Inactive\" },\n];\n\nexport const NXP_STATUS_OPTIONS = [\n  { label: <Trans i18nKey=\"translation:default.buttons.select\" />, value: \"\" },\n  { label: \"Active\", value: \"A\" },\n  { label: \"InActive\", value: \"I\" },\n];\n\nexport const YES_NO_SELECT_OPTIONS = [\n  {\n    label: <Trans i18nKey=\"translation:default.buttons.select\" />,\n    value: null,\n  },\n  { label: <Trans i18nKey=\"translation:default.options.yes\" />, value: \"Y\" },\n  { label: <Trans i18nKey=\"translation:default.options.no\" />, value: \"N\" },\n];\n\nexport const PRICING_TYPES_OPTIONS = [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.actualCarrierRate\" />,\n    value: \"PACT\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.comparativeRate\" />,\n    value: \"PINV\",\n  },\n];\n\nexport const LINER_CODES_OPTIONS = [\n  {\n    label: <Trans i18nKey=\"translation:default.options.cargo\" />,\n    value: \"CRGO\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.options.passenger\" />,\n    value: \"PAX\",\n  },\n];\n\nexport const TMS_SETTINGS_SPOT_BID_OPTIONS = [\n  { label: <Trans i18nKey=\"translation:default.options.new\" />, value: \"New\" },\n  {\n    label: <Trans i18nKey=\"translation:default.options.spotBidEnd\" />,\n    value: \"SpotBidEnd\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.options.spotBid\" />,\n    value: \"SpotBid\",\n  },\n];\n\nexport const TMS_SETTINGS_AUCTION_TYPE_OPTIONS = [\n  { label: <Trans i18nKey=\"translation:default.options.blind\" />, value: \"N\" },\n  {\n    label: <Trans i18nKey=\"translation:default.options.reverseBlind\" />,\n    value: \"Y\",\n  },\n];\n\nexport const TMS_SETTINGS_POV_DESTINATION_OPTIONS = [\n  {\n    label: <Trans i18nKey=\"translation:default.options.purchaseOrder\" />,\n    value: \"PO\",\n  },\n  { label: <Trans i18nKey=\"translation:default.fields.branch\" />, value: \"BR\" },\n];\n\nexport const TMS_SETTINGS_POV_ROUTING_METHOD_OPTIONS = [\n  { label: <Trans i18nKey=\"translation:default.options.na\" />, value: \"NA\" },\n  {\n    label: <Trans i18nKey=\"translation:default.options.routingGuide\" />,\n    value: \"RG\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.buttons.rateShop\" />,\n    value: \"RS\",\n  },\n];\n\nexport const RECALCULATE_TYPE = [\n  { label: \"Delivery\", value: \"DEL\" },\n  { label: \"None\", value: \"NONE\" },\n  { label: \"Shipment\", value: \"SHI\" },\n];\n\nexport const TMS_SETTINGS_FIELDS = {\n  customerKey: null,\n  statusInTMS: \"N\",\n  brokerageCustomer: null,\n  nextID: null,\n  shipmentApprovalRequired: null,\n  enableMasterOrders: null,\n  isCategoryToValidate: null,\n  pricingType: null,\n  isWeightCalculation: null,\n  isvisiablePaidBy: null,\n  isDefaultRatingPreference: null,\n  defaultBranchKey: null,\n  defaultIncoTerm: null,\n  defaultHazmat: null,\n  defaultRatingPreferencevalue: null,\n  defaultShipmentTerms: null,\n  defaultFreightClass: null,\n  defaultProductCode: null,\n  defaultProdDesc: null,\n  defaultLen: null,\n  defaultWidth: null,\n  defaultHeight: null,\n  showCurrentBid: null,\n  defaultSpotBidEndStatus: null,\n  adminEmail: null,\n  shipmentSupportMail: null,\n  emailFrom: null,\n  qtyTolerancePercentage: 10,\n  autoRate: null,\n  autoTender: null,\n  autoTenderAmount: null,\n  shipmentApprovalCount: null,\n  isRequiredApprovalNumber: null,\n  isHideShipmentNumber: null,\n  defaultEquipmentType: null,\n  defaultCargoType: null,\n  isReverseAuction: null,\n  maxBidHours: null,\n  poValidationFlag: null,\n  routingMethod: null,\n  shipmentIdAlphaPrefix: null,\n  povDestinationMethod: null,\n  shipmentTermsAllowed: null,\n  numberOfRoutingCarrierReturned: null,\n  shipmentIdStartingInteger: null,\n  defaultUom: null,\n  defaultPackageUom: null,\n  isEquipment: null,\n  isCargo: null,\n  defaultPaymentTerms: null,\n  defaultShipmentType: null,\n  defaultClass: null,\n  defaultFobCode: null,\n  minimumDays: null,\n  minimumDaysErrorMsg: null,\n  maximumDays: null,\n  maximumDaysErrorMsg: null,\n  isDefaultSelected: null,\n  recalculateFreightClass: null,\n  routingGuideMatch: null,\n  allowDraftShipments: null,\n  povItemDistribution: null,\n  displayPO_SOOnShipmentLevel: null,\n  disableExpiredBids: null,\n  bidExpiryNoOfDays: null,\n  shipmentEmailAttachment: null,\n  autoTenderCargoType: null,\n  isShowRatingDetails: null,\n  defaultBusinessJustification: null,\n  createdBy: null,\n  createdOn: null,\n  modifiedBy: null,\n  modifiedOn: null,\n};\n\nexport const SHIPMENT_TRACK_OPTIONS = {\n  CONTAINER_TRACKING: 1,\n  TRACKING_NUMBER: 2,\n  ITRACK: 3,\n};\n\nexport const ENABLE_DISABLE_OPTIONS = [\n  {\n    value: true,\n    label: <Trans i18nKey=\"translation:default.options.enable\" />,\n  },\n  {\n    value: false,\n    label: <Trans i18nKey=\"translation:default.options.disable\" />,\n  },\n];\n\nexport const REGEX_EMAIL_LIST_BY_COMMA =\n  /^[\\W]*([\\w+\\-.%]+@[\\w\\-.]+\\.[A-Za-z]{2,4}[\\W]*,{1}[\\W]*)*([\\w+\\-.%]+@[\\w\\-.]+\\.[A-Za-z]{2,4})[\\W]*$/g;\n\nexport const PO_SCREEN_TYPE = {\n  DRAFT: \"draftSearch\",\n  MAIN: \"purchaseOrder\",\n  VENDOR: \"vendorSearch\",\n};\n\nexport const DRAFT_SEARCH_TYPES_OPTION = [\n  {\n    label: <Trans i18nKey=\"translation:default.options.draftShipment\" />,\n    value: \"Draft\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.options.finalShipment\" />,\n    value: \"Final\",\n  },\n];\n\nexport const SORTING_FIELDS_DRAFT_ORDER = [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipmentNumber.label\" />,\n    value: \"shipmentNo\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.bolNumber\" />,\n    value: \"BolNumber\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.origin\" />,\n    value: \"origin\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.destination\" />,\n    value: \"destination\",\n  },\n  {\n    label: (\n      <Trans i18nKey=\"translation:default.fields.transportationProvider.label\" />\n    ),\n    value: \"CarrierName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.cargoType.label\" />,\n    value: \"cargoType\",\n  },\n  {\n    label: (\n      <Trans i18nKey=\"translation:default.fields.expectedShipDate.label\" />\n    ),\n    value: \"ExpShipDate\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.expectedDeliveryDate\" />,\n    value: \"ExpDeliveryDate\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.weight\" />,\n    value: \"weight\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.cube.label\" />,\n    value: \"cube\",\n  },\n];\n\nexport const SORTING_FIELDS_SHIPMENT_ORDER = [\n  {\n    label: <Trans i18nKey=\"translation:default.fields.shipmentNumber.label\" />,\n    value: \"shipmentNo\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.bolNumber\" />,\n    value: \"BolNumber\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.origin\" />,\n    value: \"origin\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.destination\" />,\n    value: \"destination\",\n  },\n  {\n    label: (\n      <Trans i18nKey=\"translation:default.fields.transportationProvider.label\" />\n    ),\n    value: \"CarrierName\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.cargoType.label\" />,\n    value: \"cargoType\",\n  },\n  {\n    label: (\n      <Trans i18nKey=\"translation:default.fields.expectedShipDate.label\" />\n    ),\n    value: \"ExpShipDate\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.expectedDeliveryDate\" />,\n    value: \"ExpDeliveryDate\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.weight\" />,\n    value: \"weight\",\n  },\n  {\n    label: <Trans i18nKey=\"translation:default.fields.cube.label\" />,\n    value: \"cube\",\n  },\n];\n\nexport const RATE_SHOP_TYPES = [\n  {\n    value: \"C\",\n    label: <Trans i18nKey=\"translation:default.options.сurrent\" />,\n  },\n  {\n    value: \"H\",\n    label: <Trans i18nKey=\"translation:default.options.historical\" />,\n  },\n];\n\nexport const THEME_FONT_FAMILY_LIST = [\n  { value: \"'Open Sans', Helvetica\", label: \"Open Sans\" },\n  { value: \"Helvetica Neue\", label: \"Helvetica Neue\" },\n];\n\nexport const ORIGIN_TYPE = [\n  { value: \"Zone\", label: \"Zone\" },\n  { value: \"Location\", label: \"Location\" },\n];\n\nexport const LANGUAGE_LIST = [\n  { value: \"en\", label: \"English\" },\n  { value: \"es\", label: \"Española\" },\n  { value: \"es-cr\", label: \"Española (Castellana)\" },\n  { value: \"es-mx\", label: \"Española (mexicana)\" },\n  { value: \"it\", label: \"Italiano\" },\n  { value: \"ch\", label: \"中國人\" },\n  { value: \"zh-tw\", label: \"中国传统的\" },\n  { value: \"fr\", label: \"Français\" },\n  { value: \"nl\", label: \"Nederlands\" },\n  { value: \"pt\", label: \"Português\" },\n  { value: \"pt-br\", label: \"Português (Brasileiro)\" },\n  { value: \"de\", label: \"Deutsch\" },\n  { value: \"pl\", label: \"Polski\" },\n  { value: \"fi\", label: \"Suomalainen\" },\n  { value: \"ko\", label: \"한국인\" },\n  { value: \"ja\", label: \"日本語\" },\n];\n\nexport const DEFAULT_THEME_DATA = {\n  muted: \"#91959b\",\n  \"muted-rgb-6\": \"rgba(145, 149, 155, 0.6)\",\n  dark: \"#131432\",\n  \"dark-1\": \"#00557d\",\n  \"dark-2\": \"#3c4b64\",\n  danger: \"#e9523f\",\n  iconDanger: \"#fd0000\",\n  \"danger-1\": \"#c71b05\",\n  \"danger-2\": \"#ffd2d2\",\n  \"danger-3\": \"#d47a11\",\n  primary: \"#252eff\",\n  info: \"#13d4fe\",\n  warning: \"#f7b74b\",\n  white: \"#ffffff\",\n  light: \"#eff3fa\",\n  success: \"#0aa45a\",\n  iconSuccess: \"#2AFF00\",\n  \"success-1\": \"#c9ffd8\",\n  grey: \"#dce5e9\", // Old #fcf9f9\n  \"grey-1\": \"#bebebf\",\n  \"grey-2\": \"#f7f7f7\",\n  \"grey-3\": \"#f4fdff\",\n  \"grey-4\": \"#e2e0e2\",\n  header: \"#0070a3\",\n  black: \"#000000\",\n  highlight: \"#000000\", // Old #8b0097\n  label: \"#262626\",\n  border: \"#c5c5c5\",\n  disabled: \"#cfcfcf\",\n  \"disabled-text\": \"#747474\",\n  selected: \"#f7f7f7\",\n  \"dark-footer-2\": \"#006697\",\n  \"tab-border\": \"#f0f0f0\",\n  fontSizePercent: \"-10%\",\n  inputsHeight: \"30px\",\n  invalidInput: \"#c71b05\",\n  \"font-family\": \"'Open Sans', Helvetica\",\n  topMenuText: \"#ffffff\",\n  bottomMenuText: \"#ffffff\",\n};\n\nexport const SP_CARRIERS_TYPES = {\n  FEDEX: \"FEDX\",\n  DHL: \"DHLC\",\n  UPS: \"UPSN\",\n};\n\nexport const PARCEL_EXPRESS_WEIGHT_UOM_TYPES = {\n  0: \"LB\",\n  1: \"KG\",\n};\n\nexport const DATE_FORMATS = {\n  \"MM/DD/YYYY\": \"MM/DD/YYYY\",\n  \"DD/MM/YYYY\": \"DD/MM/YYYY\",\n};\n\nexport const DATE_FORMAT_OPTIONS = [\n  { label: DATE_FORMATS[\"MM/DD/YYYY\"], value: DATE_FORMATS[\"MM/DD/YYYY\"] },\n  { label: DATE_FORMATS[\"DD/MM/YYYY\"], value: DATE_FORMATS[\"DD/MM/YYYY\"] },\n];\n\nexport const USER_PREFERENCES = {\n  HEADER_COLOR: \"header\",\n  TOP_MENU_TEXT_COLOR: \"topMenuTextColor\",\n  FONT_FAMILY: \"fontFamily\",\n  BOTTOM_MENU_COLOR: \"bottomMenuColor\",\n  BOTTOM_MENU_TEXT_COLOR: \"bottomMenuTextColor\",\n  FONT_SIZE: \"fontSize\",\n  PREFERRED_LANGUAGE: \"preferedLanguage\",\n  DEFAULT_DATE_FORMAT: \"defaultDateFormat\",\n  SHIPMENT_VIEW_TYPE: \"shipmentViewType\",\n  SHIPMENT_PRODUCT_VIEW_TYPE: \"shipmentProductViewType\",\n};\n\nexport const SHIPMENT_NO_HIDE_STATUSES = [\n  \"NEW\",\n  \"RATED\",\n  \"UNAPPROVED\",\n  \"PARTIAL\",\n  \"SPOT BID\",\n  \"SPOTBIDEND\",\n];\n\nexport const SHIPMENT_CARRIERS_CHANGE_ELIGIBLE_STATUSES = [\n  \"NEW\",\n  \"RATED\",\n  \"AUTO-RATED\",\n  \"SPOT BID\",\n  \"SPOTBIDEND\",\n  \"ROUTED\",\n  \"AUTO-ROUTE\",\n];\n\nexport const SHIPMENT_RATE_ENTRY_BUTTON_STATUSES = [\n  \"New\",\n  \"Rated\",\n  \"Auto-Rated\",\n  \"Auto-Route\",\n  \"Rate Error\",\n];\n\nexport const SHIPMENT_RATE_ENTRY_BUTTON_REMOVE_STATUSES = [\n  \"New\",\n  \"Rated\",\n  \"Auto-Rated\",\n  \"Auto-Route\",\n  \"Rate Error\",\n];\n\nexport const SHIPMENT_APPROVE_BUTTON_VISIBLE_STATUSES = [\n  \"Rated\",\n  \"Auto-Rated\",\n  \"Tender\",\n  \"Auto-Tendered\",\n  \"In-Transit\",\n  \"Approved\",\n  \"Unapproved\",\n];\n\nexport const OVERCHARGE_CLAIMS_EXPORT_FIELDS = [\n  {\n    columnName: \"ClaimNumber\",\n    label: <Trans i18nKey=\"translation:default.fields.claimNumber\" />,\n    value: \"customerClaimNo\",\n  },\n  {\n    columnName: \"TransportationProvider\",\n    label: (\n      <Trans i18nKey=\"translation:default.fields.transportationProvider.label\" />\n    ),\n    value: \"carrierName\",\n  },\n  {\n    columnName: \"PackageNumber\",\n    label: <Trans i18nKey=\"translation:default.fields.packageNumber\" />,\n    value: \"packageNumber\",\n  },\n  {\n    columnName: \"InvoiceNumber\",\n    label: <Trans i18nKey=\"translation:default.fields.invoiceNumber\" />,\n    value: \"invoiceNumber\",\n  },\n  {\n    columnName: \"OverchargeAmount\",\n    label: <Trans i18nKey=\"translation:default.fields.overchargeAmount\" />,\n    value: \"overchargeAmount\",\n  },\n  {\n    columnName: \"RecoveryAmount\",\n    label: <Trans i18nKey=\"translation:default.fields.recoveryAmount\" />,\n    value: \"recoveryAmount\",\n  },\n  {\n    columnName: \"AuditedBy\",\n    label: <Trans i18nKey=\"translation:default.fields.auditedBy\" />,\n    value: \"auditedBy\",\n  },\n  {\n    columnName: \"PreparedBy\",\n    label: <Trans i18nKey=\"translation:default.fields.preparedBy\" />,\n    value: \"preparedBy\",\n  },\n  {\n    columnName: \"SubmittedBy\",\n    label: <Trans i18nKey=\"translation:default.fields.submittedBy\" />,\n    value: \"submittedBy\",\n  },\n  {\n    columnName: \"SubmittedDate\",\n    label: <Trans i18nKey=\"translation:default.fields.submittedDate\" />,\n    value: \"dateSubmitted\",\n  },\n  {\n    columnName: \"AmendmentDate\",\n    label: <Trans i18nKey=\"translation:default.fields.amendmentDate\" />,\n    value: \"ammendmentDate\",\n  },\n  {\n    columnName: \"Reason\",\n    label: <Trans i18nKey=\"translation:default.fields.reason.label\" />,\n    value: \"reasonCodeDesc\",\n  },\n  {\n    columnName: \"ClaimStatus\",\n    label: <Trans i18nKey=\"translation:default.fields.claimStatus\" />,\n    value: \"claimStatusDescription\",\n  },\n  {\n    columnName: \"ClaimType\",\n    label: <Trans i18nKey=\"translation:default.fields.claimType\" />,\n    value: \"claimTypeDesc\",\n  },\n  {\n    columnName: \"ClosedDate\",\n    label: <Trans i18nKey=\"translation:default.fields.closedDate\" />,\n    value: \"closedDate\",\n  },\n];\n\nexport const PARCEL_EXPRESS_CHART_TYPES = {\n  TOTAL_SPEND: \"totalSpend\",\n  TOTAL_SPEND_BY_CARRIERS: \"totalSpendByCarriers\",\n  BY_MONTHS: \"byMonths\",\n};\n\nexport const PARCEL_EXPRESS_CHART_TYPES_API = {\n  [PARCEL_EXPRESS_CHART_TYPES.TOTAL_SPEND]: \"TotalSpend\",\n  [PARCEL_EXPRESS_CHART_TYPES.TOTAL_SPEND_BY_CARRIERS]:\n    \"TransportationProvider\",\n  [PARCEL_EXPRESS_CHART_TYPES.BY_MONTHS]: \"Month\",\n};\n\nexport const SP_CARRIERS_TYPES_TO_LABELS = {\n  [SP_CARRIERS_TYPES.FEDEX]: \"FEDEX\",\n  [SP_CARRIERS_TYPES.DHL]: \"DHL\",\n  [SP_CARRIERS_TYPES.UPS]: \"UPS\",\n};\n\nexport const SP_CARRIERS_COLORS = {\n  [SP_CARRIERS_TYPES.FEDEX]: \"#4D148C\",\n  [SP_CARRIERS_TYPES.UPS]: \"#964B00\",\n  [SP_CARRIERS_TYPES.DHL]: \"#FFCC00\",\n};\n\nexport const SHIPMENT_SEARCH_VIEW_TYPES = {\n  CARD: \"CARD\",\n  TABLE: \"TABLE\",\n};\n\nexport const MESSAGE_CENTER_EMAIL_FILTER_OPTIONS = [\n  \"All\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"K\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nexport const MESSAGE_COMPOSE_TYPES = {\n  NEW: \"NEW\",\n  REPLY: \"REPLY\",\n  FORWARD: \"FORWARD\",\n};\n\nexport const SORTING_FIELDS_ROUTING_GUIDE_ORDER = [\n  {\n    label: \"Routing Guide Id\",\n    value: \"RoutingGuideId\",\n  },\n  {\n    label: \"Routing Name\",\n    value: \"RoutingName\",\n  },\n  {\n    label: \"Shipment Type\",\n    value: \"ShipmentType\",\n  },\n  {\n    label: \"Branch\",\n    value: \"BranchDesc\",\n  },\n  {\n    label: \"Vendor Name\",\n    value: \"VendorName\",\n  },\n  {\n    label: \"Created By\",\n    value: \"CreatedByName\",\n  },\n  {\n    label: \"Modified By\",\n    value: \"ModifiedByName\",\n  },\n  {\n    label: \"Created On\",\n    value: \"CreatedOn\",\n  },\n  {\n    label: \"Modified On\",\n    value: \"ModifiedOn\",\n  },\n];\n\nexport const NXP_SORTING_FIELDS_ROUTING_GUIDE_ORDER = [\n  {\n    label: \"Transportation Provider\",\n    value: \"FirstCarrierName\",\n  },\n  {\n    label: \"Transportation Provider Service\",\n    value: \"FirstCarrierServiceDesc\",\n  },\n  {\n    label: \"Client Code\",\n    value: \"ClientCodeDesc\",\n  },\n  {\n    label: \"Account Number\",\n    value: \"AccountNumber\",\n  },\n  {\n    label: \"Comment\",\n    value: \"Comment\",\n  },\n  {\n    label: \"Contact Name\",\n    value: \"CarrierContactName\",\n  },\n  {\n    label: \"Phone Number\",\n    value: \"CarrierPhoneNumber\",\n  },\n  {\n    label: \"Email\",\n    value: \"CarrierEmail\",\n  },\n  {\n    label: \"CCEmail\",\n    value: \"CarrierCCEmail\",\n  },\n];\n\nexport const NXP_SORTING_FIELDS_ROUTING_GUIDE_USER_ORDER = [\n  {\n    label: \"User Id\",\n    value: \"UserId\",\n  },\n  {\n    label: \"First Name\",\n    value: \"FirstName\",\n  },\n  {\n    label: \"Last Name\",\n    value: \"LastName\",\n  },\n  {\n    label: \"User Name\",\n    value: \"UserName\",\n  },\n  {\n    label: \"Email\",\n    value: \"Email\",\n  },\n  {\n    label: \"Company Name\",\n    value: \"CompanyName\",\n  },\n  {\n    label: \"Client Code\",\n    value: \"ClientCodeDesc\",\n  },\n  {\n    label: \"User Type\",\n    value: \"UserTypeDesc\",\n  },\n  {\n    label: \"Country Name\",\n    value: \"CountryName\",\n  },\n  {\n    label: \"State Name\",\n    value: \"StateName\",\n  },\n  {\n    label: \"City\",\n    value: \"City\",\n  },\n  {\n    label: \"Postal Code\",\n    value: \"Postal\",\n  },\n  { label: \"Created By Name\", value: \"CreatedByName\" },\n  {\n    label: \"Created On\",\n    value: \"CreatedOn\",\n  },\n];\n\nexport const TIME_FORMATION_LIST = [\n  { value: \"24\", label: \"24 hrs format\" },\n  { value: \"12\", label: \"12 hrs format\" },\n];\n","import i18n from \"i18next\";\n\nexport const SHIPMENT_TRANSPORTATION_OBJECTS = {\n  PICKUP: \"shipmentOriginDetails\",\n  DROP: \"shipmentDestinationDetails\",\n  TERMINAL: \"shipmentTerminals\",\n};\n\nexport const SHIPMENT_TRANSPORTATION_TYPES = {\n  [SHIPMENT_TRANSPORTATION_OBJECTS.PICKUP]: 1,\n  [SHIPMENT_TRANSPORTATION_OBJECTS.DROP]: 2,\n  [SHIPMENT_TRANSPORTATION_OBJECTS.TERMINAL]: 3,\n};\n\nexport const SHIPMENT_TRANSPORTATION_TYPES_LABELS = {\n  1: i18n.t(\"translation:default.fields.pickUp\"),\n  2: i18n.t(\"translation:default.fields.drop\"),\n  3: i18n.t(\"translation:default.fields.terminal\"),\n};\n\nexport const SHIPMENT_TRANSPORTATION_TYPES_ID = {\n  1: \"PICKUP\",\n  2: \"DROP\",\n  3: \"TERMINAL\",\n};\n\nexport const SHIPMENT_TRANSPORTATION_ADDITIONAL_INFO = {\n  PICKUP: \"originAdditionalInfo\",\n  DROP: \"destinationAdditionalInfo\",\n  TERMINAL: \"Terminal\",\n};\n\nexport const SHIPMENT_TRANSPORTATION_ADDITIONAL_INFO_POST = {\n  PICKUP: \"shipmentOriginInformation\",\n  DROP: \"shipmentDestinationInformation\",\n  TERMINAL: \"Terminal\",\n};\n\nexport const SHIPENT_FILTER_DATES_FIELDS = [\n  \"ExpShipFrom\",\n  \"ExpShipTo\",\n  \"CreatedDateFrom\",\n  \"CreatedDateTo\",\n];\n\nexport const PURCHASE_ORDER_FILTER_DATE_FILEDS = [\n  \"orderCreatedDateFrom\",\n  \"orderCreatedDateTo\",\n  \"orderShipDateFrom\",\n  \"orderShipDateTo\",\n];\n\nexport const SHIPMENT_SEARCH_DATE_FILEDS = [\"fromDate\", \"toDate\"];\n\nexport const AUCTION_DATE_FIELDS = [\n  \"shipmentCreateDateFrom\",\n  \"shipmentCreateDateTo\",\n  \"expectedShipmentDateFrom\",\n  \"expectedShipmentDateTo\",\n];\n\nexport const VISIBILITY_DATE_FIELDS = [\n  \"createdonFromDate\",\n  \"createdonToDate\",\n  \"pickupFromDate\",\n  \"pickupToDate\",\n];\n\nexport const PROCUREMENT_PROJECT_DATE_FIELDS = [\n  \"fromStartDate\",\n  \"endStartDate\",\n  \"fromEndDate\",\n  \"endEndDate\",\n];\nexport const PROCUREMENT_TENDER_DATE_FIELDS = [\n  \"tenderStartFromDate\",\n  \"tenderStartToDate\",\n  \"tenderEndFromDate\",\n  \"tenderEndToDate\",\n];\n\nexport const ROUTING_GUIDE_FILTER_DATES_FIELDS = [\"ShipmentDate\"];\n\nexport const SHIPMENT_SAVE_TYPES = { NEW: \"1\", MODIFY: \"2\" };\nexport const SHIPMENT_STATUS_FOR_REASONS = [\"Cancelled\", \"Hold\"];\nexport const SHIPMENT_STATUS_VALIDATION_FOR_HOLD = [\"Cancelled\", \"In-Transit\"];\nexport const SHIPMENT_STATUS_VALIDATION_FOR_AUTO_ROUTE = [\n  \"Tender\",\n  \"Auto-Tendered\",\n  \"In-Transit\",\n  \"Confirmed\",\n  \"Closed\",\n];\n\nexport const SHIPMENT_STATUS_VALIDATION_FOR_NEW_AND_PLANNING = [\n  \"Tender\",\n  \"Auto-Tendered\",\n  \"In-Transit\",\n  \"Confirmed\",\n];\n\nexport const SHIPMENT_STATUS_VALIDATION_FOR_CANCELLED = [\n  \"Tender\",\n  \"Auto-Tendered\",\n  \"In-Transit\",\n  \"Confirmed\",\n  \"Hold\",\n  \"Planning\",\n];\n\nexport const SHIPMENT_STATUS_VALIDATION_FOR_CLOSED = [\n  \"Tender\",\n  \"Auto-Tendered\",\n  \"In-Transit\",\n  \"Confirmed\",\n];\n\nexport const SHIPMENT_STATUS_ALLOWED_STATUS_FOR_CONFIRMED = [\n  \"Tender\",\n  \"Auto-Tendered\",\n];\n\nexport const SHIPMENT_STATUS_ALLOWED_STATUS_FOR_RATE_ERROR = [\n  \"New\",\n  \"Spot Bid\",\n  \"SpotBidEnd\",\n];\n\nexport const DIM_UOM_TYPES = {\n  CM: \"C\",\n  INCHES: \"N\",\n};\n","import _, { cloneDeep, filter, findIndex, groupBy, sortBy } from \"lodash\";\r\nimport {\r\n  NOTIFICATION_TYPES,\r\n  SHIPMENT_NO_HIDE_STATUSES,\r\n} from \"../contants/common\";\r\nimport { DIM_UOM_TYPES } from \"../contants/Fields\";\r\nimport rgbHex from \"rgb-hex\";\r\n\r\nexport const getErrorMessageFromAPI = ({ response }, customMessage = false) => {\r\n  if (response?.data?.message) {\r\n    return response?.data?.message;\r\n  } else {\r\n    return response?.data?.length < 300\r\n      ? response?.data\r\n      : customMessage\r\n      ? customMessage\r\n      : false;\r\n  }\r\n};\r\n\r\nexport const setUserLocalStorage = ({ token, ...rest }) => {\r\n  localStorage.setItem(\"token\", token);\r\n  localStorage.setItem(\"userInfo\", JSON.stringify(rest));\r\n  return true;\r\n};\r\n\r\nexport const getUserLocalStorage = () => {\r\n  let token = localStorage.getItem(\"token\");\r\n  let userInfo = localStorage.getItem(\"userInfo\");\r\n\r\n  if (token && userInfo) {\r\n    return { token, userInfo: JSON.parse(userInfo) };\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getStyleVariableValue = (key) =>\r\n  window.getComputedStyle(document.documentElement).getPropertyValue(key);\r\n\r\nexport const getPrimaryMenu = (menus) => {\r\n  if (menus && menus.length > 0) {\r\n    let parentMenu = menus.filter(({ parentID }) => !parentID);\r\n    parentMenu = parentMenu.map((row) => ({\r\n      ...row,\r\n      subMenus: menus.filter(({ parentID }) => parentID === row.navigationID),\r\n    }));\r\n    menus = parentMenu;\r\n  } else {\r\n    menus = [];\r\n  }\r\n\r\n  return [\r\n    ...menus,\r\n    {\r\n      navigationID: 60,\r\n      menuName: \"Settings\",\r\n      menuText: \"Settings\",\r\n      parentID: 6,\r\n      subMenus: [\r\n        // {\r\n        //   menuName: \"CompanySettings\",\r\n        //   menuText: \"Company Settings\",\r\n        // },\r\n        {\r\n          menuName: \"TMSSettings\",\r\n          menuText: \"TMS Settings\",\r\n        },\r\n      ],\r\n    },\r\n  ].map((row) => ({ ...row, hasSubMenu: Boolean(row?.subMenus?.length) }));\r\n};\r\n\r\nexport const trimObjectValues = (data) => {\r\n  for (const key in data) {\r\n    data[key] = typeof data[key] == \"string\" ? data[key]?.trim() : data[key];\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const nullToValue = (val) => (val ? val : 0);\r\nexport const valueToNull = (val) => (val ? val : null);\r\nexport const valueToString = (val) => (val ? String(val) : \"\");\r\nexport const defaultPoStatusString = (val) => (val ? String(val) : \"O\");\r\nexport const valueToNumber = (val) => (Number(val) ? Number(val) : 0);\r\nexport const stringToNull = (val) => (val?.trim()?.length > 0 ? val : null);\r\n\r\nexport const triggerNotification = (API = \"\", payload) => {\r\n  const {\r\n    type = NOTIFICATION_TYPES.SUCCESS,\r\n    key = \"mainKey\",\r\n    title = \"Title\",\r\n    placement = \"bottomRight\",\r\n  } = payload;\r\n  if (API)\r\n    API.open({\r\n      key,\r\n      message: title,\r\n      placement,\r\n      closeIcon: <></>,\r\n      icon: <></>,\r\n      duration: 4,\r\n      className: `custom-notification ${type}`,\r\n    });\r\n\r\n  (() => {\r\n    setTimeout(() => {\r\n      if (API)\r\n        API.open({\r\n          key,\r\n          message: title,\r\n          placement,\r\n          closeIcon: <></>,\r\n          icon: <></>,\r\n          duration: 2,\r\n          className: `custom-notification ${type}`,\r\n        });\r\n    }, 1000);\r\n  })();\r\n};\r\n\r\nexport const isRequiredField = (data) =>\r\n  Boolean(_.find(data, { required: true }));\r\n\r\nexport const numberPadding = (num = 0, totalLength = 2, pattern = \"0\") =>\r\n  String(num).padStart(totalLength, pattern);\r\n\r\nexport const hasDuplicates = (a) => {\r\n  return _.uniq(a).length !== a.length;\r\n};\r\n\r\nexport const stringToNumber = (number) => {\r\n  return !isNaN(parseFloat(number)) ? parseFloat(number) : 0.0;\r\n};\r\n\r\nexport const booleanToNumber = (val) => (val ? 1 : 0);\r\n\r\nexport const getFormHasError = async (formInstance) => {\r\n  try {\r\n    await formInstance.validateFields();\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const calculateCube = (length, width, height, qty, unit) => {\r\n  length = stringToNumber(length);\r\n  width = stringToNumber(width);\r\n  height = stringToNumber(height);\r\n  qty = stringToNumber(qty);\r\n  let cube = length * width * height;\r\n  if (cube == 0) {\r\n    return cube.toString();\r\n  }\r\n  if (unit === DIM_UOM_TYPES.CM || unit === \"CM\") {\r\n    let n = +cube / 1000000;\r\n    n = (Math.round(n * 1000) / 1000).toString();\r\n    if (n == 0) {\r\n      return (Math.round(0.001 * qty * 1000) / 1000).toString();\r\n    }\r\n    return (Math.round(n * qty * 1000) / 1000).toString();\r\n  } else if (unit === DIM_UOM_TYPES.INCHES || unit === \"IN\") {\r\n    let n = +cube / 1728;\r\n    n = (Math.round(n * 1000) / 1000).toString();\r\n    if (n == 0) {\r\n      return (Math.round(0.001 * qty * 1000) / 1000).toString();\r\n    }\r\n    return (Math.round(n * qty * 1000) / 1000).toString();\r\n  } else {\r\n    return (Math.round(0.001 * qty * 1000) / 1000).toString();\r\n  }\r\n};\r\n\r\nexport const getRateShopStringAll = (val) =>\r\n  val && String(val).toLocaleUpperCase() !== \"ALL\" ? val : \"**\";\r\n\r\nexport const calCulateFreightClass = (\r\n  varLength,\r\n  varWidth,\r\n  varHeight,\r\n  VarTotalWeight,\r\n  VarWeightUOM,\r\n  varTotalBilledQty,\r\n  VarBilledQtyUOM,\r\n  varDimUOM,\r\n  varTotalCube,\r\n  varIsCmsAllowed\r\n) => {\r\n  //Assuming All length width weightUOM BilledQtyUOm DimUOM should be same\r\n\r\n  var ProductUom = \"\";\r\n  var ProductWeightUom = \"\";\r\n  //Inches\r\n  var ProductLengthInches = 0;\r\n  var ProductHeightInches = 0;\r\n  var ProductWidthInches = 0;\r\n\r\n  //Inches\r\n\r\n  //Feet\r\n  var ProductLengthFeet = 0;\r\n  var ProductHeightFeet = 0;\r\n  var ProductWidthFeet = 0;\r\n\r\n  //Feet\r\n\r\n  //Feet\r\n  var ProductLengthCentimitre = 0;\r\n  var ProductHeightCentimitre = 0;\r\n  var ProductWidthCentimitre = 0;\r\n\r\n  //Feet\r\n\r\n  var SumProductLength = 0;\r\n  var SumProductHeight = 0;\r\n  var SumProductWidth = 0;\r\n\r\n  var ProductQuantity = 0;\r\n  var NumOfCube = 0;\r\n  var NumOfCubeTotal = 0;\r\n\r\n  var ProductWeight = 0;\r\n  var TotalProductWeight = 0;\r\n  var TotalBilledQuantity = 0;\r\n\r\n  ProductUom = varDimUOM;\r\n  ProductQuantity = varTotalBilledQty;\r\n  ProductWeight = VarTotalWeight;\r\n\r\n  ProductWeightUom = VarWeightUOM;\r\n\r\n  if (ProductUom == \"FT\") {\r\n    ProductLengthFeet = varLength;\r\n    ProductHeightFeet = varHeight;\r\n    ProductWidthFeet = varWidth;\r\n  } else if (ProductUom == \"C\" || ProductUom == \"CM\") {\r\n    ProductLengthCentimitre = varLength;\r\n    ProductHeightCentimitre = varHeight;\r\n    ProductWidthCentimitre = varWidth;\r\n  } else if (ProductUom == \"N\" || ProductUom == \"IN\") {\r\n    ProductLengthInches = varLength;\r\n    ProductHeightInches = varHeight;\r\n    ProductWidthInches = varWidth;\r\n  }\r\n\r\n  if (ProductWeight == \"\") {\r\n    return 0;\r\n  }\r\n  if (ProductUom == \"\") {\r\n    return 0;\r\n  }\r\n  if (varIsCmsAllowed != \"Y\") {\r\n    if (ProductUom != \"FT\") {\r\n      if (ProductUom != \"N\") {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n  if (ProductWeightUom == \"\") {\r\n    return 0;\r\n  }\r\n  if (ProductWeightUom != \"KG\") {\r\n    if (ProductWeightUom != \"LB\") {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  // }\r\n\r\n  SumProductHeight =\r\n    parseFloat(ProductHeightFeet) +\r\n    parseFloat(ProductHeightInches / 12) +\r\n    parseFloat(ProductHeightCentimitre * 0.0328084);\r\n  SumProductLength =\r\n    parseFloat(ProductLengthFeet) +\r\n    parseFloat(ProductLengthInches / 12) +\r\n    parseFloat(ProductLengthCentimitre * 0.0328084);\r\n  SumProductWidth =\r\n    parseFloat(ProductWidthFeet) +\r\n    parseFloat(ProductWidthInches / 12) +\r\n    parseFloat(ProductWidthCentimitre * 0.0328084);\r\n\r\n  NumOfCube = SumProductHeight * SumProductLength * SumProductWidth;\r\n  NumOfCubeTotal = NumOfCube;\r\n  if (ProductWeightUom == \"KG\") {\r\n    ProductWeight = parseFloat(ProductWeight) * 2.205;\r\n  }\r\n  TotalProductWeight = ProductWeight;\r\n  TotalBilledQuantity = varTotalBilledQty;\r\n\r\n  if (TotalBilledQuantity == \"\") {\r\n    return;\r\n  }\r\n  if (NumOfCubeTotal > 0) {\r\n  } else {\r\n    NumOfCubeTotal = 0;\r\n  }\r\n\r\n  //All Calculated in Pound\r\n  //NumOfCubeTotal = TotalBilledQuantity * NumOfCubeTotal;\r\n  NumOfCubeTotal = varTotalCube;\r\n  var Dencity = 0;\r\n  Dencity = parseFloat(TotalProductWeight) / parseFloat(NumOfCubeTotal);\r\n\r\n  var FreightClass = 0;\r\n  if (Dencity > 0 && Dencity < 1) {\r\n    FreightClass = 400;\r\n  } else if (Dencity > 1 && Dencity < 2) {\r\n    FreightClass = 300;\r\n  } else if (Dencity > 2 && Dencity < 4) {\r\n    FreightClass = 250;\r\n  } else if (Dencity > 4 && Dencity < 6) {\r\n    FreightClass = 175;\r\n  } else if (Dencity > 6 && Dencity < 8) {\r\n    FreightClass = 125;\r\n  } else if (Dencity > 8 && Dencity < 10) {\r\n    FreightClass = 100;\r\n  } else if (Dencity > 10 && Dencity < 12) {\r\n    FreightClass = 92.5;\r\n  } else if (Dencity > 12 && Dencity < 15) {\r\n    FreightClass = 85;\r\n  } else if (Dencity >= 15) {\r\n    FreightClass = 70;\r\n  }\r\n\r\n  return FreightClass;\r\n};\r\n\r\nexport const validateProductForCalculateClass = (\r\n  products,\r\n  isHideTheRowDetails = false\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (products) {\r\n      products.forEach(({ dimUom }, index) => {\r\n        if (!dimUom) {\r\n          reject(\r\n            `Dimensions Unit Of Measure is required${\r\n              !isHideTheRowDetails ? ` In product ${index + 1}` : \"\"\r\n            }.`\r\n          );\r\n        }\r\n        if (![\"FT\", \"N\"].includes(dimUom)) {\r\n          reject(\r\n            `Dimensions Unit Of Measure should be Feet/Inches Only${\r\n              !isHideTheRowDetails ? ` In product ${index + 1}` : \"\"\r\n            }.`\r\n          );\r\n        }\r\n        // console.log(product);\r\n      });\r\n      resolve(true);\r\n    } else {\r\n      reject(`Invalid products information!`);\r\n    }\r\n  });\r\n};\r\n\r\nexport const uniqueID = () => {\r\n  return (Math.random() + 1).toString(36).substring(2);\r\n};\r\n\r\nexport const convertBlobToBase64 = (blob) => {\r\n  return new Promise((resolve, reject) => {\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.onloadend = function () {\r\n      resolve(reader.result);\r\n    };\r\n  });\r\n};\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n  var arr = dataurl.split(\",\"),\r\n    mime = arr[0].match(/:(.*?);/)[1],\r\n    bstr = atob(arr[1]),\r\n    n = bstr.length,\r\n    u8arr = new Uint8Array(n);\r\n\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n\r\n  return new File([u8arr], filename, { type: mime });\r\n};\r\n\r\nexport const stringIsNullOrEmpty = (val) => !val || String(val).length === 0;\r\nexport const convertToFloat = (val, decimal = 2) =>\r\n  parseFloat(val > 0 ? val : 0).toFixed(decimal);\r\n\r\nexport const removeNAfromObjectValues = (data) => {\r\n  for (const key in data) {\r\n    data[key] = data[key] == \"NA\" ? \"\" : data[key];\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const validateAddressAndConstruct = (...args) => {\r\n  let filteredArray = args.filter(Boolean).join(\", \");\r\n  return filteredArray;\r\n};\r\n\r\nexport const getEmailMask = (email) => {\r\n  if (!email) {\r\n    return \"\";\r\n  }\r\n  email = email.split(\"\");\r\n  let finalArr = [];\r\n  let len = email.indexOf(\"@\");\r\n  email.forEach((item, pos) => {\r\n    pos >= 2 && pos <= len - 3 ? finalArr.push(\"*\") : finalArr.push(email[pos]);\r\n  });\r\n  return finalArr.join(\"\");\r\n};\r\n\r\nexport const objectValueToNo = (data) => {\r\n  for (const key in data) {\r\n    data[key] = data[key] ? data[key] : \"N\";\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const filterRateShopAdditionalFields = (\r\n  data,\r\n  filterData,\r\n  accessor = \"codeDesc\"\r\n) => {\r\n  if (filterData.filterType === \"START\") {\r\n    if (filterData?.searchValue && filterData?.searchValue?.length > 0) {\r\n      const regex = new RegExp(`^${filterData?.searchValue}`, \"gi\");\r\n      data = sortBy(data, [\r\n        (row) => !regex.test(row[accessor]),\r\n        (row) => !regex.test(row[accessor]),\r\n      ]);\r\n    } else {\r\n      data = sortBy(data, [\"\"], [\"asc\"]);\r\n    }\r\n    data = data?.map((row) => ({\r\n      ...row,\r\n      hide: true,\r\n    }));\r\n  } else {\r\n    const originIndex = findIndex(data, {\r\n      [accessor]: String(filterData?.searchValue).toUpperCase(),\r\n    });\r\n\r\n    if (originIndex >= 0) {\r\n      data.splice(originIndex, 1);\r\n      data = [{ ...data[originIndex] }, ...data];\r\n\r\n      data = data?.map((row) => ({\r\n        ...row,\r\n        hide: true,\r\n      }));\r\n    } else {\r\n      data = data?.map((row) => ({\r\n        ...row,\r\n        hide: false,\r\n      }));\r\n    }\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const filterRateShopAdditionalFieldsVersionTwo = (\r\n  data,\r\n  filterData,\r\n  accessor = \"codeDesc\"\r\n) => {\r\n  let filteredList = [];\r\n  let listForClearState = [];\r\n  const selectedList = filter(data, { isChecked: true });\r\n  if (filterData?.searchValue && filterData?.searchValue?.length > 0) {\r\n    if (filterData.filterType === \"START\") {\r\n      const regex = new RegExp(`^${filterData?.searchValue}`, \"gi\");\r\n      filteredList = filter(\r\n        data,\r\n        ({ [accessor]: recordValue }) =>\r\n          regex.test(recordValue) || regex.test(recordValue)\r\n      );\r\n    } else {\r\n      filteredList = filter(\r\n        data,\r\n        (row) => row[accessor] === filterData.searchValue\r\n      );\r\n    }\r\n  } else {\r\n    listForClearState = filter(\r\n      data,\r\n      ({ lookupKey }) => findIndex(selectedList, { lookupKey }) === -1\r\n    );\r\n  }\r\n  filteredList = filter(\r\n    filteredList,\r\n    ({ lookupKey }) => findIndex(selectedList, { lookupKey }) === -1\r\n  );\r\n  return [...filteredList, ...selectedList, ...listForClearState];\r\n};\r\n\r\nexport const rgbaToHex = (rgba) => rgbHex(rgba?.r, rgba?.g, rgba?.b, rgba?.a);\r\n\r\n// Need to enable this feature for admin users only later\r\nconst omitCssVariables = [\r\n  \"header\",\r\n  \"topMenuText\",\r\n  \"dark-1\",\r\n  \"bottomMenuText\",\r\n  \"font-family\",\r\n];\r\nexport const applyTheme = (cssVariables) => {\r\n  const rootElement = document.documentElement;\r\n  if (typeof cssVariables === \"object\") {\r\n    for (const key in cssVariables) {\r\n      if (Object.hasOwnProperty.call(cssVariables, key)) {\r\n        if (!omitCssVariables.includes(key)) {\r\n          rootElement.style.setProperty(`--${key}`, cssVariables[key]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const checkFormValidationStatus = (formInstance, formName) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const validationStatus = await formInstance.validateFields();\r\n      resolve({ [formName]: validationStatus });\r\n    } catch (error) {\r\n      reject({ formName, ...error });\r\n    }\r\n  });\r\n};\r\n\r\nexport const convertThemeApiToLocal = (data) => {\r\n  return {\r\n    header: data?.topMenuColor,\r\n    topMenuText: data?.topMenuTextColor,\r\n    \"font-family\": data?.fontFamily,\r\n    \"dark-1\": data?.bottomMenuColor,\r\n    bottomMenuText: data?.bottomMenuTextColor,\r\n    fontSizePercent: data?.fontSize,\r\n    preferedLanguage: data?.preferedLanguage,\r\n    defaultDateFormat: data?.defaultDateFormat,\r\n    timeFormat: data?.timeFormat,\r\n    shipmentViewType: data?.shipmentViewType,\r\n    shipmentProductViewType: data?.shipmentProductViewType,\r\n  };\r\n};\r\n\r\nexport const validateForm = (formInstance, formName) => {\r\n  // eslint-disable-next-line no-async-promise-executor\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const validationStatus = await formInstance.validateFields();\r\n      resolve({ [formName]: validationStatus });\r\n    } catch (error) {\r\n      reject({ formName, ...error });\r\n    }\r\n  });\r\n};\r\n\r\nexport const hyphenOneToEmptyInObject = (object) => {\r\n  if (object) {\r\n    if (typeof object === \"object\") {\r\n      for (const key in object) {\r\n        if (Object.hasOwnProperty.call(object, key)) {\r\n          if (object[key] == \"-1\") {\r\n            object[key] = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return object;\r\n};\r\n\r\nexport const validateShipmentNoVisibility = (approvalNo, status) =>\r\n  String(approvalNo ? approvalNo : \"\").trim().length > 0 &&\r\n  SHIPMENT_NO_HIDE_STATUSES.includes(String(status).toUpperCase());\r\n\r\nexport const convertEmptryStringToUndefinedFromObject = (data) => {\r\n  for (const key in data) {\r\n    data[key] = data[key] === \"\" ? undefined : data[key];\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const generateStopNumbers = (n = 0, stopType) => {\r\n  let options = [];\r\n\r\n  if (typeof n === \"number\") {\r\n    for (let i = 1; i <= n; i++) {\r\n      if (stopType == \"2\" && i === 1) continue;\r\n      options.push({ value: i, label: i });\r\n    }\r\n  }\r\n\r\n  return options;\r\n};\r\n\r\nexport const arrayMove = (arr, fromIndex, toIndex) => {\r\n  let localArray = cloneDeep(arr);\r\n  var element = localArray[fromIndex];\r\n  localArray.splice(fromIndex, 1);\r\n  localArray.splice(toIndex, 0, element);\r\n  return localArray;\r\n};\r\n\r\nexport const checkIsPartialShipment = (status) =>\r\n  String(status).toUpperCase() === \"PARTIAL\";\r\n\r\nexport const parseNumbersFromString = (val) => {\r\n  const numberPattern = /\\d+/g;\r\n  const matches = String(val).match(numberPattern);\r\n  return matches ? matches.join(\"\") : \"\";\r\n};\r\n\r\nexport const getSearchUrlParam = (url = \"\", paramName = \"\") => {\r\n  const urlParams = new URLSearchParams(url);\r\n  return urlParams.get(paramName);\r\n};\r\n\r\nexport const rateShopTransform = (obj) => {\r\n  const details = obj?.shipmentSummaryList?.map((row) => {\r\n    return {\r\n      SequenceNumber: row.gId,\r\n      NumberOfPieces: row.quantityShipped,\r\n      ActualWeight: 0.0,\r\n      BilledWeight: row.totalWeight,\r\n      BilledWeightUOM: row.weightUomCode,\r\n      RatingClass: row.class,\r\n      MeasurementType: row.weightUomCode,\r\n      BilledQuantity: row.puomTotalQuantity,\r\n      Length: row.length,\r\n      Width: row.width,\r\n      Height: row.height,\r\n      Cube: row.cube,\r\n      CubeUOM: null,\r\n      ProductCode: \"\",\r\n      TrailerKey: 0,\r\n    };\r\n  });\r\n  return {\r\n    Accessorials: [\r\n      {\r\n        AccessorialCode: \"FUE\",\r\n        Description: \"FUEL SURCHARGE (FUE)\",\r\n        BilledAmount: 0.0,\r\n        CurrencyCode: null,\r\n      },\r\n    ],\r\n    Details: details,\r\n    Lanes: [\r\n      {\r\n        Id: 1,\r\n        LaneKey: 0,\r\n        Origin: {\r\n          Port: {\r\n            Key: 0,\r\n            Type: obj?.shipperList?.[0]?.portType,\r\n            Code: obj?.shipperList?.[0]?.portCode,\r\n          },\r\n          Key: -1,\r\n          Address1: obj?.shipperList?.[0]?.address,\r\n          Address2: null,\r\n          City: obj?.shipperList?.[0]?.city,\r\n          StateCode: obj?.shipperList?.[0]?.stateCode,\r\n          CountryCode: obj?.shipperList?.[0]?.statcountryCode,\r\n          Postal: obj?.shipperList?.[0]?.zip,\r\n          PostalTo: null,\r\n          BranchKey: -1,\r\n        },\r\n        Destination: {\r\n          Port: {\r\n            Key: 6817,\r\n            Type: \"SEA\",\r\n            Code: \"OLS\",\r\n          },\r\n          Key: -1,\r\n          Address1: obj?.consigneeList?.[0]?.consigneeAddr1,\r\n          Address2: null,\r\n          City: obj?.consigneeList?.[0]?.consigneeCity,\r\n          StateCode: obj?.consigneeList?.[0]?.consigneeStateCode,\r\n          CountryCode: obj?.consigneeList?.[0]?.countryCode,\r\n          Postal: obj?.consigneeList?.[0]?.consigneeZip,\r\n          PostalTo: null,\r\n          BranchKey: -1,\r\n        },\r\n        MileageMile: 0.0,\r\n      },\r\n    ],\r\n    Stops: [\r\n      {\r\n        LaneId: null,\r\n        Sequence: null,\r\n        Type: null,\r\n        ShipRecKey: null,\r\n        Location: {\r\n          Port: {\r\n            Key: null,\r\n            Type: null,\r\n            Code: null,\r\n          },\r\n          Key: null,\r\n          Address1: null,\r\n          Address2: null,\r\n          City: null,\r\n          StateCode: null,\r\n          CountryCode: null,\r\n          Postal: null,\r\n          PostalTo: null,\r\n          BranchKey: null,\r\n        },\r\n        NumberPieces: null,\r\n        Mileage: null,\r\n        Weight: null,\r\n        LegMiles: null,\r\n        TotalCharge: null,\r\n        ActualCity: null,\r\n        ActualState: null,\r\n        TripMiles: null,\r\n      },\r\n    ],\r\n    Taxes: [\r\n      {\r\n        TaxCode: null,\r\n        Description: null,\r\n        BilledAmount: null,\r\n        CurrencyCode: null,\r\n      },\r\n    ],\r\n    CriteriaId: 1,\r\n    Source: \"RateShop\",\r\n    AuditType: null,\r\n    CustomerKey: obj?.customerKey,\r\n    CarrierKey: \"-1\",\r\n    BranchKey: obj?.branchKey,\r\n    TrailerKey: -1,\r\n    ShipmentDate: obj?.shipDate,\r\n    DeliveryDate: \"\",\r\n    PricingType: \"PACT\",\r\n    PricingBasis: \"**\",\r\n    CurrencyCode: \"USD\",\r\n    CargoType: \"**\",\r\n    WeightUnitOfMeasure: obj?.shipmentSummaryList?.[0]?.weightUomCode,\r\n    ServiceKey: -1,\r\n    ServiceCode: null,\r\n    ServiceDescription: null,\r\n    IntercompanyType: null,\r\n    DiscountMode: null,\r\n    ShipmentTerms: obj?.shipmentItemlist?.[0]?.shipmentTerms,\r\n    TimeFrame: \"C\",\r\n    TransportationMode: \"**\",\r\n    LinerCode: null,\r\n    LinerType: null,\r\n    AccountNumber: null,\r\n    IsShipmentRateshop: \"N\",\r\n    PackageBranchKeys: \"-1\",\r\n    MileageMile: 0.0,\r\n    MileageKilometer: 0.0,\r\n    Weight: 120.0,\r\n    Cube: obj?.shipmentSummaryList?.[0]?.cube,\r\n    RatingClass: obj?.shipmentSummaryList?.[0]?.class,\r\n    NumberOfPieces: obj?.shipmentItemlist?.[0]?.quantityShipped,\r\n    Length: obj?.shipmentSummaryList?.[0]?.length,\r\n    Width: obj?.shipmentSummaryList?.[0]?.width,\r\n    Height: obj?.shipmentSummaryList?.[0]?.height,\r\n    ProductCode: \"\",\r\n    Debug: false,\r\n    TaxableValue: 0.0,\r\n    DeclaredValue: 0.0,\r\n    CODValue: 0.0,\r\n    LDMValue: 0.0,\r\n    ItemLevelRating: false,\r\n    ContractNumber: null,\r\n    FreightChargeBilled: 0.0,\r\n    TotalAccessorialBilled: 0.0,\r\n  };\r\n};\r\n\r\nexport const formFlagToBoolean = (val) => String(val).toUpperCase() === \"Y\";\r\nexport const formBooleanToFlag = (val) => (val ? \"Y\" : \"N\");\r\n\r\nexport const stopPropagation = (e) => {\r\n  e.stopPropagation();\r\n  e.nativeEvent.stopImmediatePropagation();\r\n};\r\n\r\nexport const checkIsSentItemMessage = (folderId) => folderId === 23235;\r\n\r\nexport const formateAmount = (val, dec = 2) =>\r\n  parseFloat(val ? val : 0).toFixed(dec);\r\n\r\nexport const validateForms = (formInstance, formName) => {\r\n  // eslint-disable-next-line no-async-promise-executor\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const validationStatus = await formInstance.validateFields();\r\n      resolve({ [formName]: validationStatus });\r\n    } catch (error) {\r\n      reject({ formName, ...error });\r\n    }\r\n  });\r\n};\r\n\r\nexport const getRandomNumber = (digits = 3) =>\r\n  Math.round(Math.random() * Math.pow(10, digits));\r\n\r\nexport const diffInVariantFields = (obj1, obj2) => {\r\n  const diffInFields = Object.entries(obj2).filter(\r\n    ([field, obj2Value]) => obj1[field] !== obj2Value\r\n  );\r\n  return diffInFields;\r\n};\r\n\r\nexport const downloadBlobFile = (blob, fileName, isBlob = true) => {\r\n  let link = document.createElement(\"a\");\r\n  const url = isBlob ? window.URL.createObjectURL(blob) : blob;\r\n  link.href = url;\r\n  link.setAttribute(\"download\", fileName);\r\n  document.body.appendChild(link);\r\n  console.log(\"Before Click\", link);\r\n  link.click();\r\n  console.log(\"After Click\", link);\r\n  setTimeout(function () {\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n  }, 1000);\r\n};\r\n","import { Image } from \"@react-pdf/renderer\";\nimport React from \"react\";\nimport checked from \"../../../../assets/icons/checkboxchecked.png\";\nimport unChecked from \"../../../../assets/icons/checkboxunchecked.png\";\n\nconst PDFCheckBoxImg = ({ isChecked, size = 16 }) => {\n  return (\n    <Image\n      src={isChecked ? checked : unChecked}\n      style={{ width: size, height: size }}\n    />\n  );\n};\n\nexport default PDFCheckBoxImg;\n","import { Font, Page, StyleSheet, Text, View } from \"@react-pdf/renderer\";\nimport { stringIsNullOrEmpty } from \"../../../../utilz/utilz\";\nimport PDFCheckBoxImg from \"./PDFCheckBoxImg\";\nimport opnSansItalic from \"../../../../assets/fonts/OpenSans-Italic.ttf\";\n\nFont.register({\n  family: \"Open Sans\",\n  fonts: [\n    {\n      src: \"https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-regular.ttf\",\n    },\n    {\n      src: \"https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-400.ttf\",\n      fontWeight: 400,\n    },\n    {\n      src: \"https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-600.ttf\",\n      fontWeight: 600,\n    },\n    {\n      src: \"https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-700.ttf\",\n      fontWeight: 700,\n    },\n    {\n      src: \"https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-800.ttf\",\n      fontWeight: 800,\n    },\n    { src: opnSansItalic },\n  ],\n});\n\nFont.register({\n  family: \"Open Sans Italic\",\n  fonts: [{ src: opnSansItalic }],\n});\n\nFont.registerHyphenationCallback((word) => [word]);\n\nexport const PDFRow = ({\n  children,\n  style = {},\n  justify = \"start\",\n  align = \"top\",\n  direction = \"row\",\n  ...rest\n}) => {\n  const styles = StyleSheet.create({\n    row: {\n      display: \"flex\",\n      flexDirection: direction,\n      justifyContent: justify,\n      alignItems: align,\n      ...style,\n    },\n  });\n  return (\n    <View style={styles.row} {...rest}>\n      {children}\n    </View>\n  );\n};\n\nexport const PDFText = ({ children, style = {}, ...rest }) => {\n  const styles = StyleSheet.create({\n    text: {\n      fontFamily: \"Open Sans\",\n      fontSize: 10,\n      fontWeight: \"400\",\n      wordWrap: \"break-word\",\n      ...style,\n    },\n  });\n  return (\n    <Text style={styles.text} {...rest}>\n      {children}\n    </Text>\n  );\n};\n\nexport const PDFDarkHeader = ({\n  children,\n  style = {},\n  textStyles = {},\n  isFirst,\n}) => {\n  const styles = StyleSheet.create({\n    header: {\n      width: \"100%\",\n      backgroundColor: \"black\",\n      paddingBottom: isFirst ? 1 : 0,\n      paddingVertical: isFirst ? 0 : 1,\n      ...style,\n    },\n  });\n  return (\n    <Text style={styles.header}>\n      <PDFText\n        style={{ ...{ color: \"white\", textAlign: \"center\" }, ...textStyles }}\n      >\n        {children}\n      </PDFText>\n    </Text>\n  );\n};\n\nexport const PDFTable = ({ children, style = {} }) => {\n  const styles = StyleSheet.create({\n    text: {\n      width: \"100%\",\n      overflow: \"hidden\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      ...style,\n    },\n  });\n  return <View style={styles.text}>{children}</View>;\n};\n\nexport const PDFTableRow = ({ children, style = {}, ...rest }) => {\n  const styles = StyleSheet.create({\n    text: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      ...style,\n      // backgroundColor: \"blue\",\n      // alignItems: \"stretch\",\n    },\n  });\n  return (\n    <View style={styles.text} {...rest}>\n      {children}\n    </View>\n  );\n};\n\nexport const PDFTableCell = ({\n  children,\n  style = {},\n  width = \"auto\",\n  borderTop = true,\n  borderRight = true,\n  borderBottom = true,\n  borderLeft = true,\n  padding = 3,\n  justify = \"center\",\n  ...rest\n}) => {\n  const styles = StyleSheet.create({\n    view: {\n      marginTop: -1,\n      marginLeft: -1,\n      width,\n      paddingHorizontal: padding,\n      paddingVertical: 0,\n      borderTop: getTableCellBorder(borderTop),\n      borderRight: getTableCellBorder(borderRight),\n      borderBottom: getTableCellBorder(borderBottom),\n      borderLeft: getTableCellBorder(borderLeft),\n      ...style,\n      // backgroundColor: \"yellow\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: justify,\n    },\n  });\n  return (\n    <View style={styles.view} {...rest}>\n      {children}\n    </View>\n  );\n};\n\nexport const PDFDivider = ({ style = {} }) => {\n  const styles = StyleSheet.create({\n    view: {\n      width: \"100%\",\n      borderBottom: \"1px solid black\",\n      ...style,\n    },\n  });\n  return <View style={styles.view} />;\n};\n\nexport const PdfGetTextUnderline = ({ value, fontWeight = \"400\" }) => {\n  return (\n    <PDFText\n      style={{\n        textDecoration: value ? \"underline\" : \"none\",\n        fontWeight,\n      }}\n    >\n      {stringIsNullOrEmpty(value) ? \"__________________\" : value}\n    </PDFText>\n  );\n};\n\nexport const PDFCheckBox = ({\n  value = false,\n  label = \"label\",\n  size = 10,\n  fontSize = 8,\n  fontWeight = \"700\",\n  isReverse = false,\n  colon = true,\n}) => {\n  const styles = StyleSheet.create({\n    text: {\n      fontSize,\n      fontWeight,\n    },\n  });\n  return (\n    <PDFRow\n      direction={isReverse ? \"row-reverse\" : \"row\"}\n      style={{ flexWrap: \"nowrap\", alignItems: \"center\" }}\n      justify={`flex-${isReverse ? \"end\" : \"start\"}`}\n    >\n      <PDFText style={styles.text}>{label}</PDFText>\n      {colon && (\n        <PDFText style={{ ...styles.text, marginLeft: 1, marginRight: 3 }}>\n          :\n        </PDFText>\n      )}\n\n      {colon ? \"\" : <View style={{ width: 5 }}></View>}\n\n      <View>\n        <PDFCheckBoxImg size={size} isChecked={value} />\n      </View>\n    </PDFRow>\n  );\n};\n\nexport const PDFPage = ({\n  children,\n  paddingHorizontal = 10,\n  paddingVertical = 20,\n  style = {},\n}) => {\n  const styles = StyleSheet.create({\n    page: {\n      ontFamily: \"Open Sans\",\n      flexDirection: \"column\",\n      display: \"flex\",\n      height: \"auto\",\n      paddingHorizontal,\n      paddingVertical,\n    },\n  });\n\n  return (\n    <Page\n      size={\"A4\"}\n      style={{ ...styles.page, ...style }}\n      orientation={\"portrait\"}\n    >\n      {children}\n    </Page>\n  );\n};\n\nexport const pdfStyles = StyleSheet.create({\n  borderTop: {\n    borderTop: \"1px solid black\",\n  },\n  borderRight: {\n    borderRight: \"1px solid black\",\n  },\n  borderBottom: {\n    borderBottom: \"1px solid black\",\n  },\n  borderLeft: {\n    borderLeft: \"1px solid black\",\n  },\n  border: { border: \"1px solid black\" },\n  header: { paddingHorizontal: 10, paddingVertical: 5 },\n  title: { fontSize: 16, fontWeight: \"700\" },\n  headerRow: {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  section: {\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n  },\n  imageSection: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 10,\n  },\n  image: {\n    width: \"60%\",\n  },\n  tableHeader: {\n    fontWeight: \"700\",\n    fontSize: 8,\n    textAlign: \"center\",\n  },\n  tableCol: {\n    fontSize: 8,\n  },\n});\n\nexport const getTableCellBorder = (val) =>\n  val === true ? \"1px solid black\" : \"none\";\n","import i18n from \"i18next\";\nimport moment from \"moment\";\nimport { DEFAULT_DATE_FORMAT, SORTING_ORDERS } from \"./common\";\n\nexport const SHIPMENT_STATUS = {\n  NEW: \"New\",\n  SPOT_BID: \"Spot Bid\",\n  QUOTE: \"QUOTE\",\n  TENDER: \"Tender\",\n};\n\nexport const SHIPMENT_EXPORT_SHIPMENT_INFORMATION_FIELDS = () => [\n  {\n    name: \"shipmentNo\",\n    label: i18n.t(\"translation:default.fields.shipmentNumber.label\"),\n  },\n  {\n    name: \"status\",\n    label: i18n.t(\"translation:default.fields.shipmentStatus\"),\n  },\n  {\n    name: \"shipmentTermsDesc\",\n    label: i18n.t(\"translation:default.fields.shipmentTerms.label\"),\n  },\n  {\n    name: \"expShipDate\",\n    label: i18n.t(\"translation:default.fields.expectedShipDate.label\"),\n  },\n  {\n    name: \"expDeliveryDate\",\n    label: i18n.t(\"translation:default.fields.expectedDeliveryDate\"),\n  },\n  { name: \"multiStop\", label: i18n.t(\"translation:default.fields.multiStop\") },\n  {\n    name: \"shipperName\",\n    label: i18n.t(\"translation:default.fields.shipperName.label\"),\n  },\n  {\n    name: \"shipperCountryCode\",\n    label: i18n.t(\"translation:default.fields.shipperCountry.label\"),\n  },\n  {\n    name: \"shipperZip\",\n    label: i18n.t(\"translation:default.fields.shipperPostalCode\"),\n  },\n  {\n    name: \"shipperState\",\n    label: i18n.t(\"translation:default.fields.shipperState\"),\n  },\n  {\n    name: \"shipperCity\",\n    label: i18n.t(\"translation:default.fields.shipperCity.label\"),\n  },\n  {\n    name: \"shipperPortType\",\n    label: i18n.t(\"translation:default.fields.shipperPortType\"),\n  },\n  {\n    name: \"consigneeName\",\n    label: i18n.t(\"translation:default.fields.consigneeName.label\"),\n  },\n  {\n    name: \"countryCode\",\n    label: i18n.t(\"translation:default.fields.consigneeCountry.label\"),\n  },\n  {\n    name: \"consigneeZip\",\n    label: i18n.t(\"translation:default.fields.consigneePostalCode.label\"),\n  },\n  {\n    name: \"consigneeState\",\n    label: i18n.t(\"translation:default.fields.consigneeStateProvience\"),\n  },\n  {\n    name: \"consigneeCity\",\n    label: i18n.t(\"translation:default.fields.consigneeCity.label\"),\n  },\n  {\n    name: \"consigneePortType\",\n    label: i18n.t(\"translation:default.fields.consigneePortType\"),\n  },\n  {\n    name: \"totalWeight\",\n    label: i18n.t(\"translation:default.fields.chargebleWeight\"),\n  },\n  { name: \"weightUom\", label: i18n.t(\"translation:default.fields.weightUOM\") },\n  { name: \"totalUnits\", label: i18n.t(\"translation:default.fields.billQty\") },\n  {\n    name: \"uom\",\n    label: i18n.t(\n      \"translation:default.fields.packageBilledQuantityunitOfMeasure\"\n    ),\n  },\n  {\n    name: \"palletLoadType\",\n    label: i18n.t(\"translation:default.fields.palletLoadType.label\"),\n  },\n  { name: \"totalCube\", label: i18n.t(\"translation:default.fields.cube.label\") },\n  {\n    name: \"projectNo\",\n    label: i18n.t(\"translation:default.fields.shipmentCargoType\"),\n  },\n  {\n    name: \"shipmentCargoType\",\n    label: i18n.t(\"translation:default.fields.shipmentTransportationProvider\"),\n  }, //->?\n  {\n    name: \"rateShopCost\",\n    label: i18n.t(\"translation:default.fields.shipmentCost\"),\n  },\n  {\n    name: \"totalMileage\",\n    label: i18n.t(\"translation:default.fields.totalMileage\"),\n  },\n  { name: \"shipmentNotes\", label: i18n.t(\"translation:default.fields.notes\") },\n  {\n    name: \"detailNotes\",\n    label: i18n.t(\"translation:default.fields.internalNotes.label\"),\n  },\n  {\n    name: \"bolPrinted\",\n    label: i18n.t(\"translation:default.fields.printedBillOfLading\"),\n  },\n  {\n    name: \"createdOn\",\n    label: i18n.t(\"translation:default.fields.createdOn.title\"),\n  },\n  {\n    name: \"fullName\",\n    label: i18n.t(\"translation:default.fields.createdByFullName\"),\n  },\n  {\n    name: \"userEmail\",\n    label: i18n.t(\"translation:default.fields.createByEmailAddress\"),\n  },\n  {\n    name: \"modifiedOn\",\n    label: i18n.t(\"translation:default.fields.modifiedOn\"),\n  },\n  {\n    name: \"modifiedFullName\",\n    label: i18n.t(\"translation:default.fields.modifiedBy\"),\n  },\n];\n\nexport const SHIPMENT_EXPORT_SHIPMENT_ADDITIONAL_INFORMATION_FIELDS = () => [\n  {\n    name: \"masterBolNumber\",\n    label: i18n.t(\"translation:default.fields.masterBOLNo\"),\n  },\n  { name: \"bolNumber\", label: i18n.t(\"translation:default.fields.houseBOLNo\") },\n  {\n    name: \"containerNumber\",\n    label: i18n.t(\"translation:default.fields.containerNumber.label\"),\n  },\n  {\n    name: \"masterShipmentNo\",\n    label: i18n.t(\"translation:default.fields.masterShipmentNo\"),\n  },\n  {\n    name: \"isTpaSelected\", // -> *\n    label: i18n.t(\n      \"translation:default.fields.transportationProviderAppointmentNumber\"\n    ),\n  }, //->?\n  {\n    name: \"proNo\",\n    label: i18n.t(\"translation:default.fields.freightBillNumber\"),\n  }, //->?\n  {\n    name: \"isDisplayStopShow\",\n    label: i18n.t(\"translation:default.fields.displayStopOffs\"),\n  }, //->? // -> *\n  {\n    name: \"poNumber\",\n    label: i18n.t(\"translation:default.fields.purchaseOrderNumber\"),\n  },\n  {\n    name: \"soNumber\",\n    label: i18n.t(\"translation:default.fields.salesOrderNumber\"),\n  },\n  {\n    name: \"partNumber\",\n    label: i18n.t(\"translation:default.fields.partNumber\"),\n  },\n  {\n    name: \"partDescription\",\n    label: i18n.t(\"translation:default.fields.partNumberDescription\"),\n  },\n  {\n    name: \"FreightClass\",\n    label: i18n.t(\"translation:default.fields.freightClass.label\"),\n  },\n];\n\nexport const SHIPMENT_EXPORT_SHIPMENT_RATE_DETAILS_FIELDS = () => [\n  {\n    name: \"pricingBasis\",\n    label: i18n.t(\"translation:default.fields.pricingBasis.label\"),\n  }, // -> *\n  {\n    name: \"rateSubmittedOn\",\n    label: i18n.t(\"translation:default.fields.rateSubmittedOn\"),\n  }, // -> *\n  {\n    name: \"carrierName\",\n    label: i18n.t(\"translation:default.fields.transportationProvider.label\"),\n  }, // -> *\n  { name: \"cost\", label: i18n.t(\"translation:default.fields.cost\") }, // -> *\n  {\n    name: \"convertedCurrency\",\n    label: i18n.t(\"translation:default.fields.costCurrency\"),\n  }, // -> *\n  {\n    name: \"showSpotBidCarrier\",\n    label: i18n.t(\"translation:default.fields.showAllSpotBidCarrier\"),\n  }, //->? // -> *\n  {\n    name: \"cargoType\",\n    label: i18n.t(\"translation:default.fields.cargoType.label\"),\n  }, // -> *\n  {\n    name: \"serviceType\",\n    label: i18n.t(\"translation:default.fields.serviceLevel.label\"),\n  }, // -> *\n  {\n    name: \"stdTransitDay\",\n    label: i18n.t(\"translation:default.fields.transitDays.label\"),\n  }, // -> *\n  {\n    name: \"rateStatus\",\n    label: i18n.t(\"translation:default.fields.rateStatus\"),\n  }, // -> *\n];\n\nexport const SHIPMENT_EXPORT_ASYNC_FIELDS = [\n  \"isTpaSelected\",\n  \"isDisplayStopShow\",\n  \"pricingBasis\",\n  \"rateSubmittedOn\",\n  \"carrierName\",\n  \"cost\",\n  \"convertedCurrency\",\n  \"showSpotBidCarrier\",\n  \"cargoType\",\n  \"serviceType\",\n  \"rateStatus\",\n  \"FreightClass\",\n];\n\nexport const SHIPMENT_RATE_SHOP_RESULTS_EXPORT_COLUMNS = [\n  { name: \"RateShopKey\" },\n  { name: \"Transportation Provider\" },\n  { name: \"Converted Cost\" },\n  { name: \"Converted Currency Code\" },\n  { name: \"Pricing Basis\" },\n  { name: \"Standard Transit Days\" },\n  { name: \"Cargo Type\" },\n  { name: \"Service Description\" },\n  { name: \"Equipment Type\" },\n  { name: \"Equipment Type Detail\" },\n  { name: \"User Submitted\" }, // ->?\n  { name: \"Created On\" },\n  { name: \"Bid Expiry Date\" }, // ->?\n  { name: \"Bid Comment\" },\n  { name: \"Spot Quote Number\" },\n];\n\nexport const SHIPMENT_FOOTER_TYPES = {\n  LATE_PICKUP: \"LP\",\n  MISSING_DOCUMENTS: \"MD\",\n  PICKUP_FAILED: \"PF\",\n  TRACKING_FAILURES: \"TF\",\n  LATE_DELIVERY: \"LD\",\n};\n\nexport const SHIPMENT_RATE_SHOP_RATTING_PREFERENCES = {\n  ALL_CARRIERS: \"ALL\",\n  LEAST_COST: \"LC\",\n  REQUIRED: \"REQ\",\n};\n\nexport const SHIPMENT_ITRACK_STATUS_LIST = [\n  \"Closed\",\n  \"Cancelled\",\n  \"Confirmed\",\n  \"Hold\",\n  \"Planning\",\n  \"Tender\",\n  \"Auto-Tendered\",\n  \"In-Transit\",\n  \"Approved\",\n  \"Unapproved\",\n];\n\nexport const SHIPMENT_TRACKING_TYPES = {\n  FEDEX: \"FEDEX\",\n  UPS: \"UPS\",\n  DHL: \"DHL\",\n};\n\nexport const SHIPMENT_PRINTS_TAB_ID = {\n  COMMERCIAL_INVOICE: \"1\",\n  PACKING_LIST: \"2\",\n  BOL: \"3\",\n  IMO: \"4\",\n  SED: \"5\",\n  CMR: \"6\",\n};\n\nexport const SHIPMENT_PRINTS_DOC_TYPES = {\n  [SHIPMENT_PRINTS_TAB_ID[\"COMMERCIAL_INVOICE\"]]: \"CI\",\n  [SHIPMENT_PRINTS_TAB_ID[\"PACKING_LIST\"]]: \"PL\",\n  [SHIPMENT_PRINTS_TAB_ID[\"BOL\"]]: \"BOL\",\n};\n\nexport const SHIPMENT_PRINTS_ENABLED_STATUS = [\n  \"Tender\",\n  \"Auto-Tendered\",\n  \"In-Transit\",\n  \"Confirmed\",\n  \"Approved\",\n  \"Closed\",\n];\n\nexport const SHIPMENT_NOTIFICATION_DISTRIBUTORS_SORTING_FIELDS = [\n  {\n    value: \"distributionName\",\n    label: i18n.t(\"translation:default.fields.distributorName\"),\n  },\n  { value: \"status\", label: i18n.t(\"translation:default.fields.status.label\") },\n  {\n    value: \"description\",\n    label: i18n.t(\"translation:default.fields.description\"),\n  },\n];\n\nexport const SHIPMENT_NOTIFICATION_ROUTING_SORTING_FIELDS = () => [\n  {\n    value: \"routingTypeName\",\n    label: i18n.t(\"translation:default.fields.routingType.label\"),\n  },\n  { value: \"status\", label: i18n.t(\"translation:default.fields.status.label\") },\n  {\n    value: \"carrierName\",\n    label: i18n.t(\"translation:default.fields.transportationProvider.label\"),\n  },\n  {\n    value: \"userName\",\n    label: i18n.t(\"translation:default.fields.userName.label\"),\n  },\n  // { value: \"distributionName\", label: \"Distribution Name\" },\n  {\n    value: \"cargoName\",\n    label: i18n.t(\"translation:default.fields.cargoType.label\"),\n  },\n  {\n    value: \"branchName\",\n    label: i18n.t(\"translation:default.fields.branch.label\"),\n  },\n  {\n    value: \"countryName\",\n    label: i18n.t(\"translation:default.fields.country.label\"),\n  },\n  {\n    value: \"locationTypeName\",\n    label: i18n.t(\"translation:default.fields.locationType.label\"),\n  },\n];\n\nexport const GET_QUOTE_FORM_IDS = {\n  quoteDetailsForm: \"1\",\n  stopsForm: \"2\",\n  productForm: \"3\",\n  transportationProviderSearchForm: \"4\",\n};\n\nexport const SHIPMENT_STOP_TYPES = {\n  ORIGIN: \"ORIGIN\",\n  DEST: \"DEST\",\n};\n\nexport const DEFAULT_RATE_SHOP_ITEMS_VALUE = {\n  selected: false,\n  numberOfPieces: 0,\n  length: 0,\n  billedWeight: 0,\n  height: 0,\n  billQuantity: 0,\n  width: 0,\n  cube: 0,\n};\n\nexport const GLOBAL_RATE_SHOP_FORM_DEFAULT_VALUES = {\n  branchKey: \"-1\",\n  pricingBasis: \"**\",\n  currencyCode: \"USD\",\n  pricingType: \"PACT\",\n  timeFrame: \"C\",\n  shipmentType: \"O\",\n  shipmentTerms: \"P\",\n  measurementUit: \"LB\",\n  trailerKey: -1,\n  declaredValue: 0,\n  LDMValue: 0,\n  CODValue: 0,\n};\n\nexport const DEFAULT_SHIPMENT_TABLE_VIEW_COLUMNS = [\n  {\n    columnName: \"Shipment Status\",\n    columnValue: \"status\",\n  },\n  {\n    columnName: \"Multi Stop\",\n    columnValue: \"multiStop\",\n  },\n  {\n    columnName: \"Transportation provider\",\n    columnValue: \"carrierName\",\n  },\n  {\n    columnName: \"Origin\",\n    columnValue: \"shipper\",\n  },\n  {\n    columnName: \"Destination\",\n    columnValue: \"consignee\",\n  },\n  {\n    columnName: \"Shipment Cost\",\n    columnValue: \"rateShopCost\",\n  },\n  {\n    columnName: \"Currency\",\n    columnValue: \"convertedCurrency\",\n  },\n  {\n    columnName: \"Approval No\",\n    columnValue: \"approvalNumber\",\n  },\n  {\n    columnName: \"Quote No\",\n    columnValue: \"quoteNo\",\n  },\n];\n\nexport const HAZMAT_VALUES = {\n  Y: \"Yes\",\n  y: \"Yes\",\n  N: \"No\",\n  n: \"No\",\n};\n\nexport const SHIPMENT_STOP_TYPE_LABEL = {\n  1: \"Pickup\",\n  2: \"Delivery\",\n};\n\nexport const SHIPMENT_FOB_CODE_LABEL = {\n  ORIG: \"Origin\",\n  DEST: \"Destination\",\n};\n\nexport const getShipmentDefaultFilters = () => ({\n  CreatedDateFrom: moment(new Date())\n    .subtract(1, \"months\")\n    .format(DEFAULT_DATE_FORMAT),\n  CreatedDateTo: moment(new Date()).format(DEFAULT_DATE_FORMAT),\n  PageNumber: 1,\n  PageSize: 20,\n  ShipmentTerms: \"\",\n  CargoType: \"\",\n  OrderBySort: SORTING_ORDERS.DESC,\n  OrderByColumn: \"CreatedOn\",\n  QuoteNo: \"\",\n  ApprovalNumber: \"\",\n  ShipmentStatus: \"\",\n  ShipmentNo: \"\",\n  ExpShipFrom: \"\",\n  ExpShipTo: \"\",\n  BranchKey: \"\",\n  CarrierKey: \"\",\n  PoNo: \"\",\n  SoNo: \"\",\n  BolNumber: \"\",\n  ProjectNo: \"\",\n  createdBy: \"\",\n  VendorKey: \"\",\n  OCountryCode: \"\",\n  ShipperName: \"\",\n  ShipperCity: \"\",\n  ShipperState: \"\",\n  ShipperZip: \"\",\n  CCountryCode: \"\",\n  ConsigneeName: \"\",\n  ConsigneeCity: \"\",\n  ConsigneeState: \"\",\n  ConsigneeZip: \"\",\n});\n\nexport const SHIPMENT_STATUS_FOR_ADVANCED_PLANNING_NOTICE = [\n  \"Rated\",\n  \"Planning\",\n  \"Auto-Rated\",\n];\n","import moment from \"moment\";\r\nimport { DEFAULT_DATE_FORMAT } from \"../contants/common\";\r\nimport { numberPadding } from \"./utilz\";\r\n\r\nconst convertUtcToLocal = (date) => new Date(`${date}Z`).toString();\r\n\r\nexport const getLabelFromDate = (date) => {\r\n  return date ? moment(convertUtcToLocal(date)).format(\"MMM DD, YYYY\") : \"\";\r\n};\r\n\r\nexport const getLabelFromDateTime = (date, is12HoursFormat = true) => {\r\n  return date\r\n    ? moment(convertUtcToLocal(date)).format(\r\n        `MMM DD YYYY | ${is12HoursFormat ? \"hh:mm a\" : \"HH:mm\"}`\r\n      )\r\n    : \"\";\r\n};\r\n\r\nexport const getDateLabelFormat = (date, is12HoursFormat = true) => {\r\n  return date\r\n    ? moment(date).format(\r\n        `MMM DD YYYY | ${is12HoursFormat ? \"hh:mm a\" : \"HH:mm\"}`\r\n      )\r\n    : \"\";\r\n};\r\n\r\nexport const convertBidExpiryDate = (date) =>\r\n  moment(date, \"MM/DD/YYYY h:mm A\", \"America/New_York\");\r\n\r\nexport const getDateLabel = (date) => {\r\n  return date ? moment(date).format(DEFAULT_DATE_FORMAT) : \"\";\r\n};\r\n\r\nexport const getPODateOrder = (date) => {\r\n  return date ? moment(date).format(DEFAULT_DATE_FORMAT) : \"\";\r\n};\r\n\r\nexport const getPODateLabel = (date) => {\r\n  return date ? moment(date).format(DEFAULT_DATE_FORMAT) : \"\";\r\n};\r\n\r\nexport const getTimeLabel = (date) => {\r\n  return date ? moment(date).format(\"hh:mm:ss A\") : \"\";\r\n};\r\n\r\nexport const convertTimetoMoment = (time) =>\r\n  time ? moment(time, \"hh:mm A\") : undefined;\r\n\r\nexport const formateWithMoment = (\r\n  date,\r\n  format = \"MM/DD/YYYY\",\r\n  dateStringFormat = false\r\n) => (date ? moment(date, dateStringFormat).format(format) : \"\");\r\n\r\nexport const convertDateStringtoMoment = (time) =>\r\n  time ? moment(time, \"YYYY-M-DThh:mm:ss\") : null;\r\n\r\nexport const convertDateToMoment = (date, format = \"MM/DD/YYYY\") =>\r\n  date ? moment(date, format) : null;\r\n\r\nexport const timerCounter = (timerData) => {\r\n  let timerInterval = false;\r\n  try {\r\n    if (timerData) {\r\n      const expectedBidTime = convertBidExpiryDate(timerData);\r\n\r\n      if (expectedBidTime) {\r\n        timerInterval = setInterval(() => {\r\n          var duration = moment.duration(\r\n            moment(expectedBidTime).diff(\r\n              moment.tz(\"America/New_York\").format(\"MM/DD/YYYY hh:mm:ss A\")\r\n            )\r\n          );\r\n          if (duration._milliseconds > 0) {\r\n            var hours = parseInt(duration.asHours());\r\n            var minutes = parseInt(duration.asMinutes()) % 60;\r\n            var seconds = parseInt(duration.asSeconds()) % 60;\r\n            // setBidExpiry(\r\n            //   `${numberPadding(hours)}:${numberPadding(\r\n            //     minutes\r\n            //   )}:${numberPadding(seconds)}`\r\n            // );\r\n          } else {\r\n            if (timerInterval) {\r\n              clearInterval(timerInterval);\r\n            }\r\n            // setBidExpiry(\"00:00:00\");\r\n          }\r\n        }, 1000);\r\n      }\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const dateTimeToSingleValue = (date, time) => {\r\n  if (date) {\r\n    date = date.format(\"YYYY-MM-DD\");\r\n  }\r\n  if (time) {\r\n    time = time.format(\"HH:mm:ss.SSS\");\r\n  } else {\r\n    time = \"00:00:00.000\";\r\n  }\r\n\r\n  if (!time || !date) {\r\n    return null;\r\n  }\r\n  return `${date}T${time}Z`;\r\n};\r\n\r\nexport const combineDateTimeMoment = (date = false, time = false) => {\r\n  if (date && time) {\r\n    var dateString = date?.format(\"DD/MM/YYYY\");\r\n    var timeString = time?.format(\"HH:mm:ss A\");\r\n    return moment(dateString + \" \" + timeString, \"DD/MM/YYYY HH:mm:ss A\");\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getFormattedTimeString = (date = new Date()) =>\r\n  `${String(moment(date).format()).split(\"+\")[0]}Z`;\r\n","/* eslint-disable no-unsafe-optional-chaining */\r\n/* eslint-disable eqeqeq */\r\nimport _, {\r\n  filter,\r\n  findIndex,\r\n  groupBy,\r\n  max,\r\n  maxBy,\r\n  orderBy,\r\n  sortBy,\r\n  sum,\r\n  sumBy,\r\n  uniqBy,\r\n  uniqueId,\r\n} from \"lodash\";\r\nimport moment from \"moment\";\r\nimport {\r\n  SHIPMENT_TRANSPORTATION_ADDITIONAL_INFO_POST,\r\n  SHIPMENT_TRANSPORTATION_OBJECTS,\r\n  SHIPMENT_TRANSPORTATION_TYPES,\r\n  SHIPMENT_TRANSPORTATION_TYPES_ID,\r\n} from \"../contants/Fields\";\r\nimport { SHIPMENT_RATE_SHOP_RATTING_PREFERENCES } from \"../contants/ShipmentEnums\";\r\nimport {\r\n  combineDateTimeMoment,\r\n  convertDateStringtoMoment,\r\n  convertDateToMoment,\r\n  convertTimetoMoment,\r\n  dateTimeToSingleValue,\r\n  formateWithMoment,\r\n} from \"./dates\";\r\nimport {\r\n  arrayMove,\r\n  calCulateFreightClass,\r\n  getRateShopStringAll,\r\n  nullToValue,\r\n  stringToNull,\r\n  trimObjectValues,\r\n  validateProductForCalculateClass,\r\n  valueToNull,\r\n  valueToNumber,\r\n  valueToString,\r\n} from \"./utilz\";\r\nimport { SP_CARRIERS_TYPES } from \"../contants/common\";\r\n\r\nexport const convertShipmentApiResponseToLocal = (shipment) => {\r\n  return {\r\n    ...shipment,\r\n    transportationList: convertTransporationToLocal(shipment),\r\n    additionalDetails: convertAdditionalDetailsToLocal(shipment),\r\n    rateShopList: shipment.rateShopDetails?.map((row) => ({\r\n      ...row,\r\n      accessorials: row.freightAccessorialCollection\r\n        ? row.freightAccessorialCollection?.map((row) => ({\r\n            ...row,\r\n            description: row.costName,\r\n            auditedChargeAmount: row.cost,\r\n            currencyCode: row.currency,\r\n          }))\r\n        : [],\r\n    })),\r\n    shipmentVendorList: shipment.shipmentVendorDetails,\r\n    shipmentBillingDetails: shipment.shipmentBillToInfo,\r\n    shipmentFilesList: shipment.shipmentDocuments.map((row) => ({\r\n      renderKey: uniqueId(),\r\n      ...row,\r\n    })),\r\n    shipmentCategoryList: shipment.hierarchialDetails,\r\n    taxes: shipment.shipmentTaxes,\r\n  };\r\n};\r\nexport const convertTransporationToLocal = (shipment) => {\r\n  let localData = [];\r\n  for (const key in SHIPMENT_TRANSPORTATION_OBJECTS) {\r\n    let value = SHIPMENT_TRANSPORTATION_OBJECTS[key];\r\n    if (Object.hasOwnProperty.call(shipment, value)) {\r\n      let rows = shipment[value];\r\n      rows?.forEach((row) => {\r\n        let data = {};\r\n        data.transportationType =\r\n          SHIPMENT_TRANSPORTATION_TYPES[SHIPMENT_TRANSPORTATION_OBJECTS[key]];\r\n\r\n        const TYPE_NO =\r\n          SHIPMENT_TRANSPORTATION_TYPES[SHIPMENT_TRANSPORTATION_OBJECTS[key]];\r\n        const TYPE =\r\n          TYPE_NO ===\r\n          SHIPMENT_TRANSPORTATION_TYPES[SHIPMENT_TRANSPORTATION_OBJECTS.PICKUP]\r\n            ? { short: \"shipper\", additional: \"originAdditionalInfo\" }\r\n            : { short: \"consignee\", additional: \"destinationAdditionalInfo\" };\r\n\r\n        data.stopType = valueToString(\r\n          SHIPMENT_TRANSPORTATION_TYPES[SHIPMENT_TRANSPORTATION_OBJECTS[key]]\r\n        );\r\n        data.appointmentNo = row[`${TYPE.short}ReferenceNo`];\r\n        data.primaryKey = row[`${TYPE.short}Key`];\r\n        data.appointmentType = row[`${TYPE.short}AppointmentType`];\r\n        data.requestedDate = convertToMoment(\r\n          row[TYPE.additional][\r\n            `${\r\n              TYPE_NO === 1\r\n                ? \"shipperRequestedShipDate\"\r\n                : \"shipperRequestedDeliveryDate\"\r\n            }`\r\n          ]\r\n        );\r\n\r\n        data.requestedTime = convertToMoment(\r\n          row[TYPE.additional][\r\n            `${\r\n              TYPE_NO === 1\r\n                ? \"shipperRequestedShipDate\"\r\n                : \"shipperRequestedDeliveryDate\"\r\n            }`\r\n          ]\r\n        );\r\n\r\n        data.appointmentDate = convertToMoment(\r\n          row[TYPE.additional][\r\n            `${\r\n              TYPE_NO === 1\r\n                ? \"carrierAppontmentShipDate\"\r\n                : \"carrierAppontmentDeliveryDate\"\r\n            }`\r\n          ]\r\n        );\r\n\r\n        data.appointmentTime = convertToMoment(\r\n          row[TYPE.additional][\r\n            `${\r\n              TYPE_NO === 1\r\n                ? \"carrierAppontmentShipDate\"\r\n                : \"carrierAppontmentDeliveryDate\"\r\n            }`\r\n          ]\r\n        );\r\n\r\n        data.actualDate = convertToMoment(\r\n          row[TYPE.additional][\r\n            `${\r\n              TYPE_NO === 1\r\n                ? \"carrierActualShipDate\"\r\n                : \"carrierActualDeliveryDate\"\r\n            }`\r\n          ]\r\n        );\r\n\r\n        data.actualTime = convertToMoment(\r\n          row[TYPE.additional][\r\n            `${\r\n              TYPE_NO === 1\r\n                ? \"carrierActualShipDate\"\r\n                : \"carrierActualDeliveryDate\"\r\n            }`\r\n          ]\r\n        );\r\n\r\n        data = {\r\n          ...data,\r\n          ...row[TYPE.additional],\r\n          ...getDecodeWeeklyDaysOperation(row.weeklyOperation),\r\n          ...getDecodeWeeklyHoursOperation(row.hoursOperation),\r\n        };\r\n        data.shipmentKey = row.shipmentKey;\r\n        data.id = row.id;\r\n        data.legNumber = row.legNumber;\r\n        data.sequence = valueToString(row.sequence);\r\n        data.searchId = row.searchId;\r\n        data.name = row.name;\r\n        data.address1 = row.address1;\r\n        data.address2 = row.address2;\r\n        data.zipCode = row.zipCode;\r\n        data.city = row.city;\r\n        data.stateCode = row.stateCode;\r\n        data.countryCode = row.countryCode;\r\n        data.businessPhone = row.businessPhone;\r\n        data.matchedBolKey = row.matchedBolKey;\r\n        data.portName = row.portName;\r\n        data.portType = row.portType;\r\n        data.portCode = row.portCode;\r\n        data.portRecKey = row.portRecKey;\r\n        data.countryName = row.countryName;\r\n        data.stateName = row.stateName;\r\n        data.hrsOfOperation = row.hrsOfOperation;\r\n        data.weeklyOperation = row.weeklyOperation;\r\n        data.hoursOperation = row.hoursOperation;\r\n        data.legMiles = row.legMiles;\r\n        data.customerKey = row.customerKey;\r\n        data.oldStopSequence = row.oldStopSequence;\r\n        data.createdBy = row.createdBy;\r\n        data.extension = row.extension;\r\n        data.dockNumber = row.dockNumber;\r\n        data.displaySequence = valueToString(data.displaySequence);\r\n        data.gridOperation = 2;\r\n        data.isResetNew = 0;\r\n        data.latitude = row.latitude;\r\n        data.longitude = row.longitude;\r\n        data.totalWeight = row.totalWeight;\r\n        for (const key in data) {\r\n          if (typeof data[key] === \"string\") {\r\n            data[key] = data[key].trim();\r\n          }\r\n        }\r\n\r\n        localData.push(data);\r\n        data.shipperAppointmentType = row.shipperAppointmentType;\r\n        data.consigneeAppointmentType = row.consigneeAppointmentType;\r\n      });\r\n    }\r\n  }\r\n  return _.orderBy(localData, [\"displaySequence\"], [\"asc\"]);\r\n};\r\n\r\nconst getDecodeWeeklyDaysOperation = (date = \"\") => {\r\n  date = date ? date : \"\";\r\n  let [fromOperationDay, toOperationDay] = date\r\n    ?.split(\"TO\")\r\n    ?.map((ele) => (ele.trim()?.length > 0 ? ele.trim() : undefined));\r\n  fromOperationDay =\r\n    fromOperationDay == \"undefined\" ? undefined : fromOperationDay;\r\n  toOperationDay = toOperationDay == \"undefined\" ? undefined : toOperationDay;\r\n  return { fromOperationDay, toOperationDay };\r\n};\r\n\r\nconst getDecodeWeeklyHoursOperation = (date = \"\") => {\r\n  date = date ? date : \"\";\r\n  const [fromOperationHours, toOperationHours] = date\r\n    ?.split(\"TO\")\r\n    ?.map((ele) => (ele.trim()?.length > 0 ? ele.trim() : undefined));\r\n  return {\r\n    fromOperationHours: fromOperationHours\r\n      ? convertTimetoMoment(fromOperationHours)\r\n      : \"\",\r\n    toOperationHours: toOperationHours\r\n      ? convertTimetoMoment(toOperationHours)\r\n      : \"\",\r\n  };\r\n};\r\n\r\nexport const convertAdditionalDetailsToLocal = (shipment) => {\r\n  return {\r\n    status: shipment.status,\r\n    shipmentCost: shipment.shipmentCost,\r\n    currencyCode: shipment.currencyCode,\r\n    shipmentType: shipment.shipmentType,\r\n    shipmentTerms: shipment.shipmentTerms,\r\n    proNo: shipment.proNo,\r\n    masterBolNumber: shipment.masterBolNumber,\r\n    accountNumber: shipment.accountNumber,\r\n    hazmatContactName: shipment.hazmatContactName,\r\n    freightAllowance: shipment.freightAllowance,\r\n    createdByName: shipment.createdByName,\r\n    createdOn: convertDateStringtoMoment(shipment.createdOn),\r\n    modifiedByName: shipment.modifiedByName,\r\n    modifiedOn: convertDateStringtoMoment(shipment.modifiedOn),\r\n    branchKey: shipment.branchKey,\r\n    incoCode: shipment.incoCode,\r\n    incoPoint: shipment.incoPoint,\r\n    fobCode: shipment.fobCode,\r\n    createdBy: valueToNull(shipment.createdBy),\r\n    modifiedBy: valueToNull(\r\n      shipment.modifiedBy\r\n        ? valueToNumber(shipment.modifiedBy)\r\n        : shipment.modifiedBy\r\n    ),\r\n    bolNumber: shipment.bolNumber,\r\n    carrierKey: valueToNull(shipment.carrierKey),\r\n    carrierName: shipment.carrierName,\r\n    trailerNumber: shipment.trailerNumber,\r\n    poNumber: shipment.poNumber,\r\n    purchaseOrderNumber: shipment.purchaseOrderNumber,\r\n    salesOrderNumber: shipment.salesOrderNumber,\r\n    paymentTerms: shipment.paymentTerms,\r\n    paidAmount: shipment.paidAmount,\r\n    isMasterShipment: shipment?.isMasterShipment === \"Y\",\r\n    isChildShipment: shipment?.isChildShipment === \"Y\",\r\n    shipmentTermsDesc: shipment.shipmentTermsDesc,\r\n    shipmentTypeDesc: shipment.shipmentTypeDesc,\r\n    branchDesc: shipment.branchDesc,\r\n  };\r\n};\r\n\r\nconst convertToMoment = (date) => (date ? moment(date) : \"\");\r\n\r\nexport const getShipmentTypeCounts = (type, listData) => {\r\n  listData = _.filter(listData, function (data) {\r\n    return data.transportationType == type;\r\n  });\r\n  return listData.length;\r\n};\r\n\r\n// -----------------Converting local data to API-----------------\r\nexport const convertShipmentDetailsLocalToAPI = ({\r\n  action,\r\n  customerKey,\r\n  masterShipment,\r\n  ...data\r\n}) => {\r\n  const userInfo = localStorage.getItem(\"userInfo\");\r\n  const userId = (userInfo ? JSON.parse(userInfo) : {}).id;\r\n  let newData = {\r\n    action,\r\n    userId,\r\n  };\r\n\r\n  newData[\"shipmentInformationRequest\"] = convertAdditionalDetailsLocalToAPI(\r\n    data.additionalDetails,\r\n    data,\r\n    customerKey,\r\n    data.shipmentKey,\r\n    data.shipmentNo,\r\n    userId,\r\n    data.approvalNumber,\r\n    masterShipment\r\n  );\r\n\r\n  newData = {\r\n    ...newData,\r\n    ...convertTransportationListLocalToAPI(data.transportationList, userId),\r\n    ...fixedData,\r\n  };\r\n\r\n  newData[\"shipmentProductInformation\"] = convertProductLocalToAPI(\r\n    data.productList,\r\n    data.shipmentKey,\r\n    userId\r\n  );\r\n  newData[\"shipmentBillToRequestInformation\"] = convertBillLocaltoAPI(\r\n    data.shipmentBillToInfo,\r\n    data.shipmentKey,\r\n    userId\r\n  );\r\n  newData[\"shipmentVendorRequestInformation\"] = convertVendorLocalToAPI(\r\n    data.shipmentVendorList,\r\n    data.shipmentKey,\r\n    userId\r\n  );\r\n  newData[\"shipmentDocumentInformation\"] =\r\n    convertDocumentsLocalToApiForAddShipment(data.documentList);\r\n  newData[\"shipmentCategoryInformation\"] = convertCategorLocalToAPI(\r\n    data.shipmentCategoryInformation,\r\n    data.shipmentKey,\r\n    userId\r\n  );\r\n  // newData[\"purchaseSalesOrderInformation\"] = data.purchaseSalesOrderInformation; //\r\n  newData[\"shipmentAccessorialInformation\"] = data.accessorials\r\n    ? data?.accessorials?.map((row) => ({\r\n        shipmentKey: 0,\r\n        accChargeType: row?.codeId,\r\n        accChargeAmount: valueToNumber(row?.accChargeAmount),\r\n        gridOperation: 1,\r\n        codeDesc: valueToString(row?.codeDesc),\r\n        lookupKey: valueToNumber(row?.lookupKey),\r\n        createdBy: userId,\r\n        createdOn: moment(new Date()),\r\n      }))\r\n    : [];\r\n  newData[\"shipmentTaxInformation\"] = data.taxes\r\n    ? data?.taxes?.map((row, index) => ({\r\n        shipmentKey: 0,\r\n        sequence: index + 1,\r\n        taxAmount: valueToNumber(row?.taxAmount),\r\n        taxTypeCode: valueToString(row?.taxTypeCode),\r\n        createdBy: userId,\r\n        createdOn: moment(new Date()),\r\n        gridOperation: 2,\r\n        // taxSetupKey: 0,\r\n        // shipmentTaxId: 0,\r\n        // taxTypeDesc: \"string\",\r\n      }))\r\n    : [];\r\n\r\n  newData[\"shipmentRateShopInformation\"] =\r\n    data?.shipmentRateShopInformation?.length > 0\r\n      ? data?.shipmentRateShopInformation\r\n      : [];\r\n\r\n  return newData;\r\n};\r\n\r\nconst convertCategorLocalToAPI = (data, shipmentKey, userId) => {\r\n  let newData = [];\r\n\r\n  data?.forEach((row) => {\r\n    newData.push({\r\n      createdBy: valueToNumber(userId),\r\n      shipmentKey: valueToNumber(shipmentKey),\r\n      hierLookupKey: valueToNumber(nullToValue(row.hierLookupKey)),\r\n      hierLookupDetKeyParent: valueToNumber(\r\n        nullToValue(row.hierLookupDetKeyParent)\r\n      ),\r\n      hierLookupDetKey: valueToNumber(nullToValue(row.hierLookupDetKey)),\r\n      gridOperation: valueToNumber(nullToValue(row.gridOperation)),\r\n      hierLookupDetNameParent: valueToString(row.hierLookupDetNameParent),\r\n      hierLookupDetName: valueToString(row.hierLookupDetName),\r\n      heirDetSequence: valueToNumber(nullToValue(row.heirDetSequence)),\r\n      shipmentHierarchyDetailsId: valueToNumber(\r\n        nullToValue(row.shipmentHierarchyDetailsId)\r\n      ),\r\n      hierLookupName: valueToString(row.hierLookupName),\r\n    });\r\n  });\r\n\r\n  return newData;\r\n};\r\n\r\nconst convertVendorLocalToAPI = (data, shipmentKey, userId) => {\r\n  let newData = [];\r\n  data?.forEach((row, index) => {\r\n    newData.push({\r\n      shipmentKey: valueToNumber(shipmentKey),\r\n      vendorKey: valueToNumber(row.vendorKey),\r\n      vendorName: valueToString(row.vendorName),\r\n      vendorPhone: valueToString(row.vendorPhone),\r\n      vendorEmail: valueToString(row.vendorEmail),\r\n      city: valueToString(row.city),\r\n      stateCode: valueToString(row.stateCode),\r\n      postalCode: valueToString(row.postalCode),\r\n      countryCode: valueToString(row.countryCode),\r\n      createdBy: valueToNumber(data.isNew ? userId : data.createdBy),\r\n      gridOperation: valueToNumber(row.gridOperation),\r\n      id: valueToNumber(row.id),\r\n      countryName: valueToString(row.countryName),\r\n      stateName: valueToString(row.stateName),\r\n    });\r\n  });\r\n\r\n  return newData;\r\n};\r\n\r\nconst convertAdditionalDetailsLocalToAPI = (\r\n  data,\r\n  mainData,\r\n  customerKey,\r\n  shipmentKey,\r\n  shipmentNo,\r\n  userId,\r\n  approvalNumber,\r\n  masterShipment\r\n) => {\r\n  if (!data) {\r\n    return {};\r\n  }\r\n  let newData = {\r\n    shipmentKey: shipmentKey,\r\n    shipmentNo: valueToString(shipmentNo),\r\n    approvalNumber: valueToString(approvalNumber),\r\n    masterShipment: masterShipment === true ? 1 : 0,\r\n    status: data.status,\r\n    customerKey: customerKey,\r\n    branchKey: data.branchKey,\r\n    accountNumber: data.accountNumber,\r\n    fobCode: data.fobCode,\r\n    freightAllowance: data.freightAllowance,\r\n    shipmentType: data.shipmentType,\r\n    shipmentTerms: data.shipmentTerms,\r\n    incoCode: data.incoCode?.trim(),\r\n    incoPoint: data.incoPoint,\r\n    customerContact: data.customerContact,\r\n    createdBy: userId,\r\n    currencyCode: data.currencyCode,\r\n    bolNumber: data.bolNumber,\r\n    proNo: data.proNo,\r\n    masterBolNumber: data.masterBolNumber,\r\n    trailerNumber: data.trailerNumber,\r\n    shipmentNotes: valueToString(mainData.shipmentNotes),\r\n    detailNotes: valueToString(mainData.detailNotes),\r\n    carrierRequirements: valueToString(mainData.carrierRequirements),\r\n    cargoType: valueToString(mainData.cargoType),\r\n    serviceKey: valueToNumber(mainData.serviceKey),\r\n    requiredCarrierKey: valueToNumber(mainData.requiredCarrierKey),\r\n    trailerId: valueToNumber(mainData.trailerKey),\r\n    purchaseOrderNumber: valueToString(data.purchaseOrderNumber),\r\n    salesOrderNumber: valueToString(data.salesOrderNumber),\r\n    paidAmount: valueToNumber(data.paidAmount),\r\n    paymentTerms: valueToString(data.paymentTerms),\r\n    // -----------------\r\n    quoteNo: \"\",\r\n    projectNo: \"\",\r\n    expShipDate: \"2022-09-05T10:46:14.373Z\", //\r\n    expDeliveryDate: \"2022-09-05T10:46:14.373Z\", //\r\n    specialServices: \"\", //\r\n    rateShopCost: 0,\r\n    transportationMode: \"\",\r\n    carrierKey: 0,\r\n    trackingDateTime: \"2022-09-05T10:46:14.373Z\",\r\n    masterShipmentCurrentWeight: 0,\r\n    rateShopKey: 0,\r\n    masterShipmentCurrentQty: 0,\r\n  };\r\n\r\n  return newData;\r\n};\r\n\r\nconst convertProductLocalToAPI = (data, shipmentKey, userId) => {\r\n  data = data ? data : [];\r\n  data = data.map(({ createdBy, ...row }, index) => ({\r\n    createdBy: valueToNumber(row.shipmentDetailsID ? createdBy : userId),\r\n    shipmentKey: valueToNumber(shipmentKey),\r\n    shipmentDetailsID: valueToNumber(row.shipmentDetailsID),\r\n    itemSequenceKey: valueToNumber(row.itemSequenceKey),\r\n    productCode: valueToString(row.productCode),\r\n    quantity: valueToNumber(row.quantity),\r\n    unitMeasure: valueToString(row.unitMeasure),\r\n    unitPrice: valueToNumber(row.unitPrice),\r\n    productDescription: valueToString(row.productDescription),\r\n    palletLoadType: valueToString(row.palletLoadType),\r\n    weight: valueToNumber(row.weight),\r\n    weightUom: valueToString(row.weightUom),\r\n    billQty: valueToNumber(row.billQty),\r\n    billQtyUom: valueToString(row.billQtyUom),\r\n    length: valueToNumber(row.length),\r\n    width: valueToNumber(row.width),\r\n    height: valueToNumber(row.height),\r\n    dimUom: valueToString(row.dimUom),\r\n    cube: valueToNumber(valueToNull(row.cube)),\r\n    class: valueToString(row.class),\r\n    poNumber: valueToString(row.poNumber),\r\n    soNumber: valueToString(row.soNumber),\r\n    reference1: valueToString(row.reference1),\r\n    crateNo: valueToString(row.crateNo),\r\n    nmfcNumber: valueToString(row.nmfcNumber),\r\n    gridOperation: valueToNumber(row.gridOperation),\r\n    hazmat: valueToString(row.hazmat),\r\n    hazmatUnNo: valueToString(row.hazmatUnNo),\r\n    unitMeasureName: valueToString(row.unitMeasureName),\r\n    className: valueToString(row.className),\r\n    weightUomName: valueToString(row.weightUomName),\r\n    dimUomName: valueToString(row.dimUomName),\r\n    billQtyUomName: valueToString(row.billQtyUomName),\r\n    hts: valueToString(row.hts),\r\n    eccn: valueToString(row.eccn),\r\n    countryOfOrigin: valueToString(row.countryOfOrigin),\r\n    stcDescription: valueToString(row.stcDescription),\r\n    //----------------\r\n    cartonQty: 0,\r\n    cartonUOM: \"string\",\r\n    actualWeight: 200,\r\n    deliveryID: \"string\",\r\n  }));\r\n  return data;\r\n};\r\nconst convertTransportationListLocalToAPI = (data, userID, customerKey) => {\r\n  let newData = {\r\n    shipmentOriginInformation: [],\r\n    shipmentDestinationInformation: [],\r\n  };\r\n\r\n  data?.forEach(({ stopType, portRecKey, ...row }) => {\r\n    let params =\r\n      stopType ==\r\n      SHIPMENT_TRANSPORTATION_TYPES[SHIPMENT_TRANSPORTATION_OBJECTS.PICKUP]\r\n        ? {\r\n            key: \"originKey\",\r\n            additionalInfo: \"shipmentOriginAdditionalInformation\",\r\n            requestedDate: \"shipperRequestedShipDate\",\r\n            actualDate: \"carrierActualShipDate\",\r\n            appointmentDate: \"carrierAppontmentShipDate\",\r\n          }\r\n        : {\r\n            key: \"destinationKey\",\r\n            additionalInfo: \"shipmentDestinationAdditionalInformation\",\r\n            requestedDate: \"shipperRequestedDeliveryDate\",\r\n            actualDate: \"carrierActualDeliveryDate\",\r\n            appointmentDate: \"carrierAppontmentDeliveryDate\",\r\n          };\r\n    newData[\r\n      SHIPMENT_TRANSPORTATION_ADDITIONAL_INFO_POST[\r\n        SHIPMENT_TRANSPORTATION_TYPES_ID[stopType]\r\n      ]\r\n    ].push({\r\n      shipmentKey: row.shipmentKey,\r\n      displaySequence: valueToNumber(nullToValue(row.displaySequence)),\r\n      sequence: valueToNumber(nullToValue(row.sequence)),\r\n      legNumber: row.legNumber,\r\n      stopType: stopType,\r\n      shipRecKey: row.shipRecKey,\r\n      customerKey: customerKey,\r\n      name: row.name,\r\n      addr1: row.address1,\r\n      addr2: row.addr2,\r\n      city: row.city,\r\n      state: row.stateCode,\r\n      zip: row.zipCode,\r\n      countryCode: row.countryCode,\r\n      searchId: row.searchId,\r\n      createdBy: nullToValue(userID),\r\n      oldStopSequence: nullToValue(row.oldStopSequence),\r\n      portType: row.portType,\r\n      portRecKey: nullToValue(valueToNumber(portRecKey)),\r\n      gridOperation: nullToValue(row.gridOperation),\r\n      [params.additionalInfo]: {\r\n        shipmentKey: row.shipmentKey,\r\n        displaySequence: valueToNumber(nullToValue(row.displaySequence)),\r\n        sequence: valueToNumber(nullToValue(row.sequence)),\r\n        [params.requestedDate]: row.requestedDate\r\n          ? dateTimeToSingleValue(row.requestedDate, row.requestedTime)\r\n          : null,\r\n        [params.appointmentDate]: row.appointmentDate\r\n          ? dateTimeToSingleValue(row.appointmentDate, row.appointmentTime)\r\n          : null,\r\n        [params.actualDate]: row.actualDate\r\n          ? dateTimeToSingleValue(row.actualDate, row.actualTime)\r\n          : null,\r\n\r\n        pickupDeliveryID: row.appointmentNo,\r\n        doorDockID: row.doorDockID,\r\n        contactName: row.contactName,\r\n        contactEmail: row.contactEmail,\r\n        phone: row.phone,\r\n        createdBy: nullToValue(userID),\r\n        hoursOfOperation: `${valueToString(\r\n          row.fromOperationDay\r\n        )} TO ${valueToString(\r\n          row.toOperationDay\r\n        )} | ${convertOperationHoursTime(\r\n          row.fromOperationHours\r\n        )} TO ${convertOperationHoursTime(row.toOperationHours)}`,\r\n        appointmentType: row.appointmentType,\r\n        gridOperation: nullToValue(row.gridOperation),\r\n        oldStopSequence: row.oldStopSequence,\r\n        isResetNew: row.isResetNew,\r\n        uom: row.uom,\r\n        legMiles: row.legMiles,\r\n        extension: row.extension,\r\n        dockNumber: row.dockNumber,\r\n        taxId: row.taxId,\r\n      },\r\n      countryName: row.countryName,\r\n      stateName: row.stateName,\r\n      portName: row.portName,\r\n      isResetNew: row.isResetNew,\r\n    });\r\n  });\r\n\r\n  return newData;\r\n};\r\n\r\nconst convertDocumentsLocalToApiForAddShipment = (data) => {\r\n  return data\r\n    ? data.map((row, index) => ({\r\n        // customerKey: 0,\r\n        // shipmentKey: 0,\r\n        documentSequence: index + 1,\r\n        documentTitle: valueToString(row.documentTitle),\r\n        documentFileName: valueToString(row.file),\r\n        documentDesc: valueToString(row.documentDesc),\r\n        originalFileName: valueToString(row.file),\r\n        documentTypeCode: valueToString(row.docTypeCode),\r\n        // createdBy: 0,\r\n        // modifiedBy: 0,\r\n        filePath:\r\n          row?.fileBase64?.trim() !== \"\" ? row.fileBase64.split(\",\")[1] : \"\",\r\n        // mode: valueToString('string'),\r\n        referenceNo: valueToString(row.referenceNo),\r\n        // version: 0,\r\n        fileExtension: `.${valueToString(row.file).split(\".\").pop()}`,\r\n      }))\r\n    : [];\r\n};\r\n\r\nconst convertOperationHoursTime = (time) => {\r\n  if (time) {\r\n    return time.format(\"hh:mm A\");\r\n  }\r\n  return \" \";\r\n};\r\n\r\nconst convertBillLocaltoAPI = (data, shipmentKey, userId) => {\r\n  return {\r\n    shipmentKey: shipmentKey,\r\n    name: valueToString(data?.name),\r\n    vatNumber: valueToString(data?.vatNumber),\r\n    address1: valueToString(data?.address1),\r\n    address2: valueToString(data?.address2 ? data?.address2 : \" \"),\r\n    city: valueToString(data?.city),\r\n    stateCode: valueToString(data?.stateCode),\r\n    postalCode: valueToString(data?.postalCode),\r\n    countryCode: valueToString(data?.countryCode),\r\n    contact: valueToString(data?.contact),\r\n    contactEmail: valueToString(data?.contactEmail),\r\n    createdBy: userId,\r\n    countryName: valueToString(data?.countryName),\r\n    stateName: valueToString(data?.stateName),\r\n  };\r\n};\r\n\r\nconst fixedData = {\r\n  shipmentDocumentInformation: [],\r\n  purchaseSalesOrderInformation: [],\r\n};\r\n\r\nexport const calculateSequenceAndDisplaySequence = (transportationList) => {\r\n  const totalPickups = _.filter(transportationList, {\r\n    sequence: \"1\",\r\n  }).length;\r\n  const totalDeliveries = _.filter(transportationList, {\r\n    sequence: \"99\",\r\n  }).length;\r\n  // var deleteIndex = _.findIndex(transportationList, { gridOperation: 3 });\r\n\r\n  // const originIndex = _.findIndex(transportationList, { sequence: \"1\" });\r\n  const destinationIndex = _.findIndex(transportationList, { sequence: \"99\" });\r\n  const newItemIndex = _.findIndex(transportationList, { isNew: true });\r\n  let newItemSequence = 0;\r\n  let newItemDisplaySequence =\r\n    transportationList.length - (totalDeliveries > 0 ? 1 : 0);\r\n\r\n  const getSequence = (index, isPickup) => {\r\n    if (isPickup) {\r\n      let pickupIndex = index >= 0 ? index : transportationList.length;\r\n      return valueToNumber(transportationList[pickupIndex - 1].sequence) + 1;\r\n    } else {\r\n      return valueToNumber(transportationList[index - 1].sequence) + 1;\r\n    }\r\n  };\r\n\r\n  if (newItemIndex >= 0) {\r\n    if (\r\n      transportationList[newItemIndex].stopType ==\r\n      SHIPMENT_TRANSPORTATION_TYPES[SHIPMENT_TRANSPORTATION_OBJECTS.PICKUP]\r\n    ) {\r\n      newItemSequence =\r\n        totalPickups > 0 ? getSequence(destinationIndex, true) : \"1\";\r\n    } else {\r\n      newItemSequence =\r\n        totalDeliveries > 0 ? getSequence(destinationIndex, true) : \"99\";\r\n    }\r\n  }\r\n\r\n  transportationList[newItemIndex] = {\r\n    ...transportationList[newItemIndex],\r\n    sequence: valueToString(newItemSequence),\r\n    displaySequence: valueToString(newItemDisplaySequence),\r\n  };\r\n\r\n  if (totalDeliveries > 0) {\r\n    transportationList[destinationIndex] = {\r\n      ...transportationList[destinationIndex],\r\n      displaySequence: valueToString(transportationList.length),\r\n    };\r\n  }\r\n\r\n  // if (deleteIndex >= 0) {\r\n  //   let count = 1;\r\n  //   transportationList = transportationList?.map((row, index) => {\r\n  //     if (deleteIndex !== index && destinationIndex !== index) {\r\n  //       row.sequence = count;\r\n  //       row.gridOperation = 2; // For modify\r\n  //       count++;\r\n  //     }\r\n\r\n  //     return row;\r\n  //   });\r\n  // }\r\n\r\n  // data.displaySequence = displaySequence ? displaySequence : 1;\r\n  // data.sequence = displaySequence ? displaySequence : 1;\r\n  let sequence = 0;\r\n  transportationList = transportationList.map((row) => {\r\n    if (row.sequence != 99) {\r\n      sequence += 1;\r\n    }\r\n    return {\r\n      ...row,\r\n      sequence: row.sequence == 99 ? 99 : sequence,\r\n    };\r\n  });\r\n  return transportationList;\r\n};\r\n\r\nexport const calculateSequenceAndDisplaySequenceForEdit = (\r\n  transportationList\r\n) => {\r\n  const newStopIndex = _.findIndex(transportationList, { gridOperation: 1 });\r\n\r\n  if (newStopIndex >= 0) {\r\n    const highestSequence = maxBy(\r\n      filter(\r\n        transportationList,\r\n        ({ stopType, sequence }) =>\r\n          stopType === transportationList[newStopIndex].stopType &&\r\n          sequence >= 0\r\n      ),\r\n      ({ sequence }) => sequence\r\n    );\r\n\r\n    transportationList[newStopIndex].sequence =\r\n      Number(highestSequence.sequence ? highestSequence.sequence : 0) + 1;\r\n    transportationList[newStopIndex].displaySequence =\r\n      transportationList?.length - 1;\r\n  }\r\n\r\n  return transportationList;\r\n};\r\n\r\nexport const convertIRateShopApiResponseToLocal = (data) => {\r\n  if (data) {\r\n    data = data.map((row) => ({\r\n      accessorials: row?.accessorials\r\n        ? row?.accessorials?.map((accRow) => ({\r\n            auditedChargeAmount: accRow?.auditedChargeAmount,\r\n            description: accRow?.description,\r\n            currencyCode: accRow?.currencyCode,\r\n            accessorialCode: accRow?.accessorialCode,\r\n          }))\r\n        : [],\r\n      cargoType: row.cargoType,\r\n      carrierKey: row.carrierKey,\r\n      carrierName: row.carrierName,\r\n      currencyCode: row.currencyCode,\r\n      directPoint: row.directPoint,\r\n      error_message: row.errorMessage,\r\n      mileage: row.mileageMiles,\r\n      mileageKm: row.mileageKilometers,\r\n      pricingBasis: row.pricingBasis,\r\n      pricingType: row.pricingType,\r\n      serviceDesc: row.serviceDescription,\r\n      serviceKey: row.serviceKey,\r\n      serviceType: row.serviceCode,\r\n      shipmentCost: row.shipmentCost,\r\n      standardDaysTransit: row.standardDaysTransit,\r\n      trailerDesc: row.trailerDescription,\r\n      equipmentTypeDetail: row.trailerDescription,\r\n      trailerkey: row.trailerKey,\r\n      convertedCost: row.convertedCost,\r\n      freightAccessorialCollection: row.accessorials,\r\n      convertedCurrencyCode: row.convertedCurrency,\r\n      spotQuoteNumber: row.spotQuoteContractNumber,\r\n      bidComment: row.errorMessage,\r\n      effectiveTo: convertDateToMoment(row.pricingEffectiveTo),\r\n      createdOn: moment(new Date()),\r\n      TariffKey: row.tariffKey,\r\n      pricingDetailKey: row.pricingKey,\r\n      accessorialCost: sum(\r\n        row.accessorials\r\n          ? row.accessorials.map(\r\n              ({ AuditedChargeAmount }) => AuditedChargeAmount\r\n            )\r\n          : []\r\n      ),\r\n      rateShopKey: \"\", //\r\n      rateType: \"\", //\r\n      flagStandardTranit: \"\", //\r\n      viewCargoType: null, //\r\n      isRateEntry: null, //\r\n      totalShipmentCost: row.totalShipmentCost,\r\n    }));\r\n  }\r\n  data = data.filter(({ totalShipmentCost }) => {\r\n    return Number(totalShipmentCost) > 0;\r\n  });\r\n  data = orderBy(data, [\"totalShipmentCost\"], [\"asc\"]);\r\n  return data;\r\n};\r\n\r\nexport const convertRateEngineApiResponseToShipmentLocal = (\r\n  data,\r\n  isAPIRateShop\r\n) => {\r\n  if (data) {\r\n    data = data.map((row) => ({\r\n      accessorials: [\r\n        {\r\n          auditedChargeAmount: row.ABSTotalCharge,\r\n          description: \"FREIGHT CHARGE\",\r\n          currencyCode: row?.CurrencyCode,\r\n          accessorialCode: \"FREIGHT\",\r\n        },\r\n        ...orderBy(\r\n          row?.Accessorials\r\n            ? // eslint-disable-next-line no-unsafe-optional-chaining\r\n              row?.Accessorials?.map((accRow) => ({\r\n                auditedChargeAmount: accRow?.AuditedChargeAmount,\r\n                description: accRow?.Description,\r\n                currencyCode: accRow?.CurrencyCode,\r\n                accessorialCode: accRow?.AccessorialCode,\r\n              }))\r\n            : [],\r\n          [\"description\"],\r\n          [\"asc\"]\r\n        ),\r\n      ],\r\n      cargoType: row.CargoType,\r\n      carrierKey: row.CarrierKey,\r\n      carrierName: row.CarrierName,\r\n      currencyCode: row.CurrencyCode,\r\n      directPoint: row.DirectPoint,\r\n      error_message: row.ErrorMessage,\r\n      mileage: row.MileageMiles,\r\n      mileageKm: row.MileageKilometers,\r\n      // pricingBasis: `${isAPIRateShop ? \"API \" : \"\"}${row.PricingBasis}`,\r\n      pricingBasis: isAPIRateShop ? \"API\" : row.PricingBasis,\r\n      pricingType: row.PricingType,\r\n      serviceDesc: row.ServiceDescription,\r\n      serviceKey: row.ServiceKey,\r\n      serviceType: row.ServiceCode,\r\n      shipmentCost: row.ShipmentCost,\r\n      standardDaysTransit: row.StandardDaysTransit,\r\n      trailerDesc: row.TrailerDescription,\r\n      equipmentTypeDetail: row.TrailerDescription,\r\n      trailerkey: row.TrailerKey,\r\n      // convertedCost: row.ConvertedCost,\r\n      freightAccessorialCollection: row.Accessorials,\r\n      convertedCurrencyCode: row.CurrencyCode,\r\n      spotQuoteNumber: row.SpotQuoteContractNumber,\r\n      bidComment: row.ErrorMessage,\r\n      effectiveTo: convertDateToMoment(row.PricingEffectiveTo),\r\n      createdOn: moment(new Date()),\r\n      TariffKey: row.TariffKey,\r\n      pricingDetailKey: row.PricingKey,\r\n      accessorialCost: sum(\r\n        row.Accessorials\r\n          ? row.Accessorials.map(\r\n              ({ AuditedChargeAmount }) => AuditedChargeAmount\r\n            )\r\n          : []\r\n      ),\r\n      rateShopKey: \"\", //\r\n      rateType: \"\", //\r\n      flagStandardTranit: \"\", //\r\n      viewCargoType: null, //\r\n      isRateEntry: null, //\r\n      totalShipmentCost: row.TotalShipmentCost,\r\n      convertedCost: row.TotalShipmentCost,\r\n    }));\r\n  }\r\n  data = data.filter(({ totalShipmentCost }) => {\r\n    return Number(totalShipmentCost) > 0;\r\n  });\r\n  data = orderBy(data, [\"totalShipmentCost\"], [\"asc\"]);\r\n  return data;\r\n};\r\n\r\nexport const prmShipmentTransportation = (data, userID, customerKey) => {\r\n  let newData = [];\r\n\r\n  data?.forEach(({ stopType, portRecKey, ...row }) => {\r\n    let params =\r\n      stopType ==\r\n      SHIPMENT_TRANSPORTATION_TYPES[SHIPMENT_TRANSPORTATION_OBJECTS.PICKUP]\r\n        ? {\r\n            key: \"originKey\",\r\n            requestedDate: \"prmShipperRequestedShipDate\",\r\n            actualDate: \"prmCarrierActualShipDate\",\r\n            appointmentDate: \"prmCarrierAppontmentShipDate\",\r\n          }\r\n        : {\r\n            key: \"destinationKey\",\r\n            requestedDate: \"prmShipperRequestedDeliveryDate\",\r\n            actualDate: \"prmCarrierActualDeliveryDate\",\r\n            appointmentDate: \"prmCarrierAppontmentDeliveryDate\",\r\n          };\r\n    newData.push({\r\n      [params.requestedDate]: dateTimeToSingleValue(\r\n        row.requestedDate,\r\n        row.requestedTime\r\n      ),\r\n      [params.appointmentDate]: dateTimeToSingleValue(\r\n        row.appointmentDate,\r\n        row.appointmentTime\r\n      ),\r\n      [params.actualDate]: dateTimeToSingleValue(\r\n        row.actualDate,\r\n        row.actualTime\r\n      ),\r\n      prmShipperConsigneeKey: nullToValue(valueToNumber(row.primaryKey)), //prmShipperConsigneeKey\r\n      // [params.key]: nullToValue(valueToNumber(row.primaryKey)), //prmShipperConsigneeKey\r\n      prmSequence: valueToNumber(nullToValue(row.sequence)),\r\n      prmDisplaySequence: valueToNumber(nullToValue(row.displaySequence)),\r\n      prmLegNumber: valueToNumber(row.legNumber),\r\n      prmPortRecKey: nullToValue(valueToNumber(portRecKey)),\r\n      prmStopType: valueToString(stopType),\r\n      prmOperation: valueToNumber(nullToValue(row.gridOperation)),\r\n      prmPortType: valueToString(row.portType),\r\n      prmDoorDockID: valueToString(row.doorDockID),\r\n      prmPickupDeliveryID: valueToString(row.appointmentNo),\r\n      prmContactName: valueToString(row.contactName),\r\n      prmContactEmail: valueToString(row.contactEmail),\r\n      prmPhone: valueToString(row.phone),\r\n      prmHoursOfOperation: `${valueToString(\r\n        row.fromOperationDay\r\n      )} TO ${valueToString(row.toOperationDay)} | ${convertOperationHoursTime(\r\n        row.fromOperationHours\r\n      )} TO ${convertOperationHoursTime(row.toOperationHours)}`,\r\n      prmAppointmentType: valueToString(row.appointmentType),\r\n      prmUom: valueToString(row.uom),\r\n      prmLegMiles: valueToNumber(row.legMiles),\r\n      prmDockNumber: valueToString(row.dockNumber),\r\n      prmExtension: valueToString(row.extension),\r\n      prmTaxId: valueToString(row.taxId),\r\n      customerKey: valueToNumber(customerKey),\r\n      name: valueToString(row.name),\r\n      addr1: valueToString(row.address1),\r\n      addr2: \"\",\r\n      city: valueToString(row.city),\r\n      state: valueToString(row.stateCode),\r\n      zip: valueToString(row.zipCode),\r\n      countryCode: valueToString(row.countryCode),\r\n      searchId: valueToString(row.searchId),\r\n      prmModifiedBy: nullToValue(userID),\r\n      isChangeLocationDetails: valueToNumber(row.isChangeLocationDetails),\r\n    });\r\n  });\r\n  return newData;\r\n};\r\n\r\nexport const prmShipmentAdditionalDetails = (data) => {\r\n  return {\r\n    shipmentKey: data.shipmentKey,\r\n    // status: data.status,\r\n    customerKey: data.customerKey,\r\n    branchKey: data.branchKey,\r\n    accountNumber: data.accountNumber,\r\n    fobCode: data.fobCode,\r\n    freightAllowance: data.freightAllowance,\r\n    shipmentType: data.shipmentType,\r\n    shipmentTerms: data.shipmentTerms,\r\n    incoCode: valueToString(data.incoCode)?.trim(),\r\n    incoPoint: data.incoPoint,\r\n    rateShopCost: valueToNumber(data.shipmentCost),\r\n    customerContact: valueToString(data.customerContact),\r\n    currencyCode: data.currencyCode,\r\n    bolNumber: data.bolNumber,\r\n    proNo: data.proNo,\r\n    masterBolNumber: data.masterBolNumber,\r\n    trailerNumber: data.trailerNumber,\r\n    trailerId: valueToNumber(data.trailerKey),\r\n    rateType: data.status,\r\n    modifiedBy: data.userId,\r\n    poNumber: valueToString(data.purchaseOrderNumber),\r\n    soNumber: valueToString(data.salesOrderNumber),\r\n    paidAmount: valueToNumber(data.paidAmount),\r\n    paymentTerms: valueToString(data.paymentTerms),\r\n    rateShopKey: 0,\r\n    projectNo: \"\",\r\n    masterShipment: data?.masterShipment ? 1 : 0,\r\n    // returnStatus: true,\r\n  };\r\n};\r\n\r\nexport const prmShipmentProductDetails = (data) => {\r\n  const nextItemSequence = maxBy(\r\n    data,\r\n    (o) => o.itemSequenceKey\r\n  )?.itemSequenceKey;\r\n  return data.map((row) => ({\r\n    itemSequenceKey:\r\n      row.gridOperation === 1 ? nextItemSequence + 1 : row?.itemSequenceKey,\r\n    quantity: valueToNumber(row.quantity),\r\n    unitMeasure: valueToString(row.unitMeasure),\r\n    productCode: valueToString(row.productCode),\r\n    productDescription: valueToString(row.productDescription),\r\n    class: valueToString(row.class),\r\n    length: valueToNumber(row.length),\r\n    height: valueToNumber(row.height),\r\n    width: valueToNumber(row.width),\r\n    dimUom: valueToString(row.dimUom),\r\n    weight: valueToNumber(row.weight),\r\n    weightUom: valueToString(row.weightUom),\r\n    cube: valueToNumber(valueToNull(row.cube)),\r\n    billQty: valueToNumber(row.billQty),\r\n    billQtyUom: valueToString(row.billQtyUom),\r\n    modifedBy: 0, //\r\n    stcDescription: valueToString(row.stcDescription),\r\n    hazmatUnNo: valueToString(row.hazmatUnNo),\r\n    hazmat: valueToString(row.hazmat),\r\n    poNumber: valueToString(row.poNumber),\r\n    soNumber: valueToString(row.soNumber),\r\n    reference1: valueToString(row.reference1),\r\n    palletLoadType: valueToString(row.palletLoadType),\r\n    shipmentDetailsID: valueToNumber(row.shipmentDetailsID),\r\n    crateNo: valueToString(row.crateNo),\r\n    unitPrice: valueToNumber(row.unitPrice),\r\n    nmfcNumber: valueToString(row.nmfcNumber),\r\n    eccn: valueToString(row.eccn),\r\n    countryOfOrigin: valueToString(row.countryOfOrigin),\r\n    hts: valueToString(row.hts),\r\n    operation: valueToNumber(row.gridOperation),\r\n    deliveryID: valueToString(row.deliveryID),\r\n    actualWeight: valueToNumber(row.actualWeight),\r\n    cartonQty: valueToNumber(row.cartonQty),\r\n    cartonUOM: valueToString(row.cartonUOM),\r\n  }));\r\n};\r\n\r\nexport const prmShipmentProductDetailsSingle = (data) => ({\r\n  itemSequenceKey: data.gridOperation === 1 ? 0 : data?.itemSequenceKey,\r\n  quantity: valueToNumber(data.quantity),\r\n  unitMeasure: valueToString(data.unitMeasure),\r\n  productCode: valueToString(data.productCode),\r\n  productDescription: valueToString(data.productDescription),\r\n  class: valueToString(data.class),\r\n  length: valueToNumber(data.length),\r\n  height: valueToNumber(data.height),\r\n  width: valueToNumber(data.width),\r\n  dimUom: valueToString(data.dimUom),\r\n  weight: valueToNumber(data.weight),\r\n  weightUom: valueToString(data.weightUom),\r\n  cube: valueToNumber(valueToNull(data.cube)),\r\n  billQty: valueToNumber(data.billQty),\r\n  billQtyUom: valueToString(data.billQtyUom),\r\n  modifedBy: 0, //\r\n  stcDescription: valueToString(data.stcDescription),\r\n  hazmatUnNo: valueToString(data.hazmatUnNo),\r\n  hazmat: valueToString(data.hazmat),\r\n  poNumber: valueToString(data.poNumber),\r\n  soNumber: valueToString(data.soNumber),\r\n  reference1: valueToString(data.reference1),\r\n  palletLoadType: valueToString(data.palletLoadType),\r\n  shipmentDetailsID: valueToNumber(data.shipmentDetailsID),\r\n  crateNo: valueToString(data.crateNo),\r\n  unitPrice: valueToNumber(data.unitPrice),\r\n  nmfcNumber: valueToString(data.nmfcNumber),\r\n  eccn: valueToString(data.eccn),\r\n  countryOfOrigin: valueToString(data.countryOfOrigin),\r\n  hts: valueToString(data.hts),\r\n  operation: valueToNumber(data.gridOperation),\r\n  deliveryID: valueToString(data.deliveryID),\r\n  actualWeight: valueToNumber(data.actualWeight),\r\n  cartonQty: valueToNumber(data.cartonQty),\r\n  cartonUOM: valueToString(data.cartonUOM),\r\n});\r\n\r\nexport const prmShipmentBillingDetails = (data) => {\r\n  return {\r\n    shipmentKey: data.shipmentKey,\r\n    name: valueToString(data?.name),\r\n    vatNumber: valueToString(data?.vatNumber),\r\n    address1: valueToString(data?.address1),\r\n    address2: valueToString(data?.address2 ? data?.address2 : \"\"),\r\n    city: valueToString(data?.city),\r\n    stateCode: valueToString(data?.stateCode),\r\n    postalCode: valueToString(data?.postalCode),\r\n    countryCode: valueToString(data?.countryCode),\r\n    contact: valueToString(data?.contact),\r\n    contactEmail: valueToString(data?.contactEmail),\r\n    modifiedBy: data.userId,\r\n  };\r\n};\r\n\r\nexport const prmShipmentVendorDetails = (data, shipmentKey, userId) => {\r\n  return data.map((row) => ({\r\n    shipmentKey: valueToNumber(shipmentKey),\r\n    id: valueToNumber(row.id),\r\n    vendorKey: valueToNumber(row.vendorKey),\r\n    vendorName: valueToString(row.vendorName),\r\n    vendorPhoneNumber: valueToString(row.vendorPhone),\r\n    vendorEmail: valueToString(row.vendorEmail),\r\n    city: valueToString(row.city),\r\n    stateCode: valueToString(row.stateCode),\r\n    postalCode: valueToString(row.postalCode),\r\n    countryCode: valueToString(row.countryCode),\r\n    modifiedBy: userId,\r\n    operation: valueToNumber(row.gridOperation),\r\n  }));\r\n};\r\n\r\nexport const prmShipmentCategory = (data, userId) => {\r\n  return data.map((row, index) => ({\r\n    hierDetSequence: valueToNumber(index + 1),\r\n    hierLookupDetKey: valueToNumber(nullToValue(row.hierLookupDetKey)),\r\n    hierLookupDetKeyParent: valueToNumber(\r\n      nullToValue(row.hierLookupDetKeyParent)\r\n    ),\r\n    modifiedBy: userId,\r\n  }));\r\n};\r\n\r\nexport const shipmentSpotBidDataToLocal = (data) => {\r\n  return data.map((row) => ({\r\n    ...row,\r\n    convertedCost: row.cost,\r\n    userCreatedBy: row.createdByName,\r\n    effectiveTo: row.bidExpiryTime,\r\n    standardDaysTransit: row.standardTransitDays,\r\n  }));\r\n};\r\n\r\nexport const shipmentTrackApiToLocal = (data) => {\r\n  if (data?.length > 0) {\r\n    return trimObjectValues(\r\n      data.map((row) => ({\r\n        ...row,\r\n        carrierShipDate: convertDateStringtoMoment(row.carrierShipDate),\r\n        carrierShipTime: convertDateStringtoMoment(row.carrierShipDate),\r\n        carrierDeliveryDate: convertDateStringtoMoment(row.carrierDeliveryDate),\r\n        carrierDeliveryTime: convertDateStringtoMoment(row.carrierDeliveryDate),\r\n        shipperRequestedShipDate: convertDateToMoment(\r\n          row.shipperRequestedShipDate,\r\n          \"M/D/YYYY hh:mm:ss A\"\r\n        ),\r\n        shipperRequestedDeliveryDate: convertDateToMoment(\r\n          row.shipperRequestedDeliveryDate,\r\n          \"M/D/YYYY hh:mm:ss A\"\r\n        ),\r\n        dateTimeAtStatusDate: convertDateStringtoMoment(row.dateTimeAtStatus),\r\n        dateTimeAtStatusTime: convertDateStringtoMoment(row.dateTimeAtStatus),\r\n        dateTimeStamp: convertDateStringtoMoment(row.dateTimeStamp),\r\n      }))\r\n    );\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const convertShipmentRackingLocalToAPI = (data) => {\r\n  let carrierShipDate = combineDateTimeMoment(\r\n    data?.carrierShipDate,\r\n    data?.carrierShipTime\r\n  );\r\n  let dateTimeAtStatus = combineDateTimeMoment(\r\n    data?.dateTimeAtStatusDate,\r\n    data?.dateTimeAtStatusTime\r\n  );\r\n\r\n  return {\r\n    shipmentNumber: valueToString(data?.shipmentNumber), // 1\r\n    iCountryCode: valueToString(data?.iCountryCode), // 1\r\n    iStateCode: valueToString(data?.iStateCode), // 1\r\n    iCity: valueToString(data?.iCity), // 1\r\n    statusCode: valueToString(data?.statusCode), // 1\r\n    statusTypeCode: valueToString(data?.statusTypeCode), // 1\r\n    exceptionTypeCode: valueToString(data?.exceptionTypeCode), // 1\r\n    signature: valueToString(data?.signature), // 1\r\n    trackSequenceKey: null, // 1\r\n    userCreatedBy: valueToNumber(data?.userCreatedBy), // 1\r\n    carrierShipDate: carrierShipDate?.toJSON(), // 1\r\n    dateTimeAtStatus: dateTimeAtStatus?.toJSON(), // 1\r\n    timeZone: valueToString(moment().tz(moment.tz.guess()).format(\"z\")),\r\n    shipmentTrackKey: valueToNumber(data?.shipmentTrackKey), // 1\r\n    dateTimeStamp: data?.dateTimeStamp?.toJSON(), // 1\r\n    timeAtStatus: dateTimeAtStatus?.format(\"M/D/YYYY hh:mm:ss A\"), // 1\r\n    shipTime: formateWithMoment(data?.shipperRequestedShipDate, \"hh:mm A\"), // 1\r\n    eventLocalTime: formateWithMoment(data?.dateTimeAtStatus, \"hh:mm A\"), // 1\r\n    delivaryTime: formateWithMoment(data?.carrierDeliveryDate, \"hh:mm A\"), // 1\r\n    carrierDeliveryDate: combineDateTimeMoment(\r\n      data?.carrierDeliveryDate,\r\n      data?.carrierDeliveryTime\r\n    )?.toJSON(), // 1\r\n    entryDateTime: null,\r\n  };\r\n};\r\n\r\nexport const shipmentAddressBookListApiToLocal = (data) => {\r\n  if (data?.length > 0) {\r\n    return data.map((row) => {\r\n      const phone = row?.phone?.split(\"-\");\r\n      const daysOfWeek = row?.daysOfWeek?.split(\"-\");\r\n      const hoursOfOperation = row?.hoursOfOperation?.split(\"-\");\r\n      return trimObjectValues({\r\n        ...row,\r\n        countryCallingCode: phone?.[0],\r\n        phone: phone?.[1],\r\n        fromOperationDay: daysOfWeek[0],\r\n        toOperationDay: daysOfWeek[1],\r\n        fromOperationHours: convertTimetoMoment(hoursOfOperation[0]),\r\n        toOperationHours: convertTimetoMoment(hoursOfOperation[1]),\r\n      });\r\n    });\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const convertRateShopResponseToAPI = (\r\n  data = [],\r\n  customerKey,\r\n  selectedCarrierKey\r\n) => {\r\n  if (data?.length > 0) {\r\n    return data.map((row) => ({\r\n      totalShipmentCost: row.totalShipmentCost\r\n        ? row.totalShipmentCost\r\n        : row.shipmentCost,\r\n      totalAccessorialCharge: row.accessorialCost,\r\n      pricingBasis: row.pricingBasis,\r\n      currencyCode: row.currencyCode,\r\n      pricingType: row.pricingType,\r\n      cargoType: row.cargoType,\r\n      trailerKey: valueToNumber(row.trailerkey)\r\n        ? valueToNumber(row.trailerkey)\r\n        : -1,\r\n      serviceKey: row.serviceKey,\r\n      carrierName: row.carrierName,\r\n      carrierKey: row.carrierKey,\r\n      customerKey: customerKey,\r\n      pricingKey: row.pricingDetailKey,\r\n      accessorials: filter(\r\n        row.accessorials\r\n          ? row.accessorials.map(\r\n              ({\r\n                auditedChargeAmount,\r\n                description,\r\n                accessorialCode,\r\n                costType,\r\n                cost,\r\n                costName,\r\n              }) => ({\r\n                auditedChargeAmount: valueToNumber(\r\n                  auditedChargeAmount ? auditedChargeAmount : cost\r\n                ),\r\n                description: description ? description : costName,\r\n                accessorialCode: accessorialCode ? accessorialCode : costType,\r\n              })\r\n            )\r\n          : [],\r\n        ({ accessorialCode }) => accessorialCode !== \"FREIGHT\"\r\n      ),\r\n\r\n      trailerDescription: row.trailerDesc,\r\n      standardDaysTransit: row.standardDaysTransit,\r\n      directPoint: row.directPoint,\r\n      mileageMiles: row.mileage,\r\n      tariffKey: valueToNumber(row.TariffKey),\r\n      mileageKilometers: row.mileageKm,\r\n      isSelected: selectedCarrierKey === row?.carrierKey ? 1 : 0,\r\n    }));\r\n  }\r\n};\r\n\r\nexport const parseCreateQuoteDataFromFormData = (data) => {\r\n  return {\r\n    quoteNo: valueToString(data?.quoteNo),\r\n    projectNo: valueToString(data?.projectNo),\r\n    shipDate: formateWithMoment(data?.shipDate, \"MM/D/yyyy\"),\r\n    deliveryDate:\r\n      formateWithMoment(data?.deliveryDate, \"MM/D/yyyy\") === \"\"\r\n        ? null\r\n        : formateWithMoment(data?.deliveryDate, \"MM/D/yyyy\"),\r\n    branch: valueToString(data?.branch),\r\n    shipmentType: valueToString(data?.shipmentType),\r\n    shipmentTerms: valueToString(data?.shipmentTerms),\r\n    rateShopCost: valueToNumber(data?.rateShopCost),\r\n    currencyCode: valueToString(data?.currencyCode),\r\n    createdBy: valueToNumber(data?.createdBy),\r\n    modifiedBy: valueToString(data?.modifiedBy),\r\n    createdOn: formateWithMoment(data?.createdOn, \"MM/D/yyyy\"),\r\n    modifiedOn: formateWithMoment(data?.modifiedOn, \"MM/D/yyyy\"),\r\n    shipmentNumber: valueToString(data?.shipmentNumber),\r\n    shipmentKey: valueToNumber(data?.shipmentKey),\r\n    shipmentStatus: data?.shipmentStatus,\r\n    customerKey: valueToNumber(data?.customerKey),\r\n    rateShopKey: 0,\r\n    transportGridModel: data?.stops?.map((row) => ({\r\n      stopTypeID: valueToString(row?.stopTypeID),\r\n      city: valueToString(row?.city),\r\n      postalCode: valueToString(row?.postalCode),\r\n      state: valueToString(row?.state),\r\n      countryCode: valueToString(row?.countryCode),\r\n      portType: valueToString(row?.portType),\r\n      portRecKey: valueToString(row?.portRecKey),\r\n      gridOperation: valueToNumber(row?.gridOperation),\r\n      oldStopSequence: valueToNumber(row?.oldStopSequence),\r\n      stopSequence: valueToNumber(row?.stopSequence),\r\n    })),\r\n    productGridModel: data?.products?.map((row) => ({\r\n      billQtyUom: valueToString(row?.billQtyUom),\r\n      billQty: valueToString(row?.billQty),\r\n      weight: valueToNumber(row?.weight),\r\n      weightUom: valueToString(row?.weightUom),\r\n      length: valueToNumber(row?.length),\r\n      width: valueToNumber(row?.width),\r\n      height: valueToNumber(row?.height),\r\n      dimUom: valueToString(row?.dimUom),\r\n      cube: valueToNumber(row?.cube),\r\n      class: valueToString(row?.class),\r\n      itemSequenceKey: valueToNumber(row?.itemSequenceKey),\r\n      gridOperation: valueToNumber(row?.gridOperation),\r\n      createdBy: valueToNumber(row?.createdBy),\r\n      billQtyUomName: valueToString(row?.billQtyUomName),\r\n      className: valueToString(row?.className),\r\n      dimUomName: valueToString(row?.dimUomName),\r\n      weightUomName: valueToString(row?.weightUomName),\r\n      palletLoadType: \"Non Stackable\", // Always static provided by shuvojith\r\n    })),\r\n    accessorialGridModel: data?.accessorials?.map((row) => ({\r\n      accChargeType: valueToString(row?.codeId),\r\n      codeDesc: valueToString(row?.codeDesc),\r\n      isChecked: row?.isChecked ? 1 : 0,\r\n      accChargeAmount: valueToNumber(row?.accChargeAmount),\r\n    })),\r\n    shipmentDocumentInformation: convertDocumentsLocalToApiForAddShipment(\r\n      data?.documents\r\n    ),\r\n    shipmentNote: data?.shipmentNote,\r\n  };\r\n};\r\n\r\n// export const parseQuoteDataToRateShopAPI = (data) => {\r\n//   let shipmentOrigin = filter(data?.transportGridModel, { stopTypeID: \"1\" });\r\n//   shipmentOrigin = shipmentOrigin?.[0];\r\n//   let shipmentDestination = filter(data?.transportGridModel, {\r\n//     stopTypeID: \"2\",\r\n//   });\r\n//   shipmentDestination = shipmentDestination?.[shipmentDestination?.length - 1];\r\n\r\n//   const totalNumberOfPieces = sumBy(data?.productGridModel, ({ billQty }) =>\r\n//     valueToNumber(billQty)\r\n//   );\r\n\r\n//   const totalWeight = sumBy(data?.productGridModel, ({ weight }) =>\r\n//     valueToNumber(weight)\r\n//   );\r\n\r\n//   let totalClass = maxBy(data?.productGridModel, ({ class: classValue }) =>\r\n//     valueToNumber(classValue)\r\n//   )?.class;\r\n\r\n//   let formData = {\r\n//     accessorials: [\r\n//       ...data?.accessorials?.map((row) => ({\r\n//         accessorialCode: row.accChargeType?.trim(),\r\n//         description: row.codeDesc,\r\n//         billedAmount: 0,\r\n//         currencyCode: null,\r\n//       })),\r\n//       {\r\n//         accessorialCode: \"FUE\",\r\n//         description: \"FUEL SURCHARGE\",\r\n//         billedAmount: 0,\r\n//         currencyCode: null,\r\n//       },\r\n//     ],\r\n//     details: filter(data.productGridModel, ({ weight }) => weight > 0).map(\r\n//       (product, index) => ({\r\n//         SequenceNumber: valueToNumber(index + 1),\r\n//         numberOfPieces: valueToNumber(product.billQty),\r\n//         ActualWeight: 0,\r\n//         billedWeight: valueToNumber(product.weight),\r\n//         BilledWeightUOM: null,\r\n//         ratingClass: valueToString(product.class),\r\n//         measurementType: valueToString(product.weightUom),\r\n//         billedQuantity: valueToNumber(product.billQty),\r\n//         length: valueToNumber(product.length),\r\n//         width: valueToNumber(product.width),\r\n//         height: valueToNumber(product.height),\r\n//         // cube: valueToNumber(product.cube),\r\n//         cube: 0,\r\n//         CubeUOM: null,\r\n//         productCode: \"\",\r\n//         trailerKey: 0,\r\n//       })\r\n//     ),\r\n//     lanes: [\r\n//       {\r\n//         Id: 1,\r\n//         LaneKey: 0,\r\n//         origin: {\r\n//           port: {\r\n//             key: valueToNumber(shipmentOrigin?.portRecKey),\r\n//             type: stringToNull(shipmentOrigin?.portType),\r\n//             code: stringToNull(shipmentOrigin?.portCode),\r\n//           },\r\n//           key: valueToNumber(shipmentOrigin?.primaryKey),\r\n//           address1: valueToString(shipmentOrigin?.address1),\r\n//           address2: null,\r\n//           city: shipmentOrigin?.city,\r\n//           stateCode: shipmentOrigin?.state,\r\n//           countryCode: shipmentOrigin?.countryCode,\r\n//           postal: shipmentOrigin?.postalCode,\r\n//           postalTo: null,\r\n//           branchKey: -1, // fixed\r\n//         },\r\n//         destination: {\r\n//           port: {\r\n//             key: valueToNumber(shipmentDestination?.portRecKey),\r\n//             type: stringToNull(shipmentDestination?.portType), // -\r\n//             code: stringToNull(shipmentDestination?.portCode), // -\r\n//           },\r\n//           key: valueToNumber(shipmentDestination?.primaryKey),\r\n//           address1: valueToString(shipmentDestination?.address1), // -\r\n//           address2: null,\r\n//           city: shipmentDestination?.city, // -\r\n//           stateCode: shipmentDestination?.state,\r\n//           countryCode: shipmentDestination?.countryCode, //-\r\n//           postal: shipmentDestination?.postalCode, // zipCode\r\n//           PostalTo: null,\r\n//           branchKey: -1, // fixed\r\n//         },\r\n//         MileageMile: 0, // Have to Check ---------------------------\r\n//       },\r\n//     ],\r\n//     stops:\r\n//       data?.transportGridModel?.length > 2\r\n//         ? data?.transportGridModel?.map((row, index) => ({\r\n//             laneId: 1,\r\n//             sequence: valueToNumber(index + 1),\r\n//             type: null,\r\n//             shipRecKey: 0,\r\n//             location: {\r\n//               port: {\r\n//                 key: valueToNumber(row?.portRecKey),\r\n//                 type: stringToNull(row?.portType),\r\n//                 code: stringToNull(row?.portCode),\r\n//               },\r\n//               key: 0,\r\n//               address1: valueToString(row.address1),\r\n//               address2: valueToString(row.address2),\r\n//               city: valueToString(row.city),\r\n//               stateCode: valueToString(row.state),\r\n//               countryCode: valueToString(row.countryCode),\r\n//               postal: valueToString(row.postalCode),\r\n//               postalTo: null,\r\n//               branchKey: -1, // fixed\r\n//             },\r\n//             numberPieces: totalNumberOfPieces, // static\r\n//             mileage: 0, // static\r\n//             weight: totalWeight, // static\r\n//             legMiles: 0, // Static\r\n//             totalCharge: 0, // static\r\n//             actualCity: valueToString(row.city),\r\n//             actualState: valueToString(row.state),\r\n//             TripMiles: 0, // static\r\n//           }))\r\n//         : [],\r\n//     taxes: [\r\n//       //   {\r\n//       //     \"BilledAmount\": 16.16,\r\n//       //     \"CurrencyCode\": \"USD\",\r\n//       //     \"Description\": null,\r\n//       //     \"PkgSequenceKey\": 0,\r\n//       //     \"TaxCode\": \"GST\",\r\n//       //     \"TaxSequenceKey\": 0\r\n//       //   }\r\n//     ],\r\n//     criteriaId: 1,\r\n//     source: \"RateShop\", //fixed always\r\n//     auditType: null,\r\n//     customerKey: data?.customerKey,\r\n//     carrierKey: \"-1\",\r\n//     branchKey: data?.branch,\r\n//     trailerKey: -1,\r\n//     shipmentDate: moment(data?.shipDate).toJSON(),\r\n//     deliveryDate: moment(data?.deliveryDate).toJSON(),\r\n//     pricingType: \"PACT\", //fixed always\r\n//     pricingBasis: \"**\",\r\n//     currencyCode: \"**\",\r\n//     cargoType: \"**\",\r\n//     weightUnitOfMeasure: data?.productGridModel?.[0]?.weightUom, // Have to check --------------\r\n//     serviceKey: -1,\r\n//     serviceCode: \"**\", // fixed\r\n//     serviceDescription: \"\",\r\n//     intercompanyType: valueToString(data?.shipmentTerms),\r\n//     discountMode: valueToString(data?.shipmentType),\r\n//     shipmentTerms: valueToString(data?.shipmentTerms),\r\n//     timeFrame: \"C\", // fixed\r\n//     transportationMode: \"**\",\r\n//     LinerCode: null,\r\n//     LinerType: null,\r\n//     accountNumber: null,\r\n//     isShipmentRateshop: \"Y\", // fixed\r\n//     packageBranchKeys: \"-1\", //fixed\r\n//     mileageMile: 0, // fixed\r\n//     mileageKilometer: 0, // fixed\r\n//     weight: valueToNumber(\r\n//       sumBy(data?.productGridModel, ({ weight }) => Number(weight))\r\n//     ),\r\n//     cube: 0, // fixed\r\n//     ratingClass: valueToString(totalClass),\r\n//     numberOfPieces: totalNumberOfPieces,\r\n//     length: valueToNumber(\r\n//       sumBy(data?.productGridModel, ({ length }) => Number(length))\r\n//     ),\r\n//     width: valueToNumber(\r\n//       sumBy(data?.productGridModel, ({ width }) => Number(width))\r\n//     ),\r\n//     height: valueToNumber(\r\n//       sumBy(data?.productGridModel, ({ height }) => Number(height))\r\n//     ),\r\n//     productCode: null,\r\n//     debug: false,\r\n//     taxableValue: 0,\r\n//     declaredValue: 0,\r\n//     CODValue: 0,\r\n//     lDMValue: 0,\r\n//     itemLevelRating: false,\r\n//     contractNumber: null,\r\n//     freightChargeBilled: 0,\r\n//     totalAccessorialBilled: 0,\r\n//   };\r\n//   return formData;\r\n// };\r\n\r\nexport const parseQuoteDataToRateEngine = (data) => {\r\n  let shipmentOrigin = filter(data?.transportGridModel, { stopTypeID: \"1\" });\r\n  shipmentOrigin = shipmentOrigin?.[0];\r\n  let shipmentDestination = filter(data?.transportGridModel, {\r\n    stopTypeID: \"2\",\r\n  });\r\n  shipmentDestination = shipmentDestination?.[shipmentDestination?.length - 1];\r\n\r\n  const totalNumberOfPieces = sumBy(data?.productGridModel, ({ billQty }) =>\r\n    valueToNumber(billQty)\r\n  );\r\n\r\n  const totalWeight = sumBy(data?.productGridModel, ({ weight }) =>\r\n    valueToNumber(weight)\r\n  );\r\n\r\n  let totalClass = maxBy(data?.productGridModel, ({ class: classValue }) =>\r\n    valueToNumber(classValue)\r\n  )?.class;\r\n\r\n  let formData = {\r\n    RateShopCriteria: {\r\n      Accessorials: [\r\n        ...data?.accessorials?.map((row) => ({\r\n          AccessorialCode: row.accChargeType?.trim(),\r\n          Description: row.codeDesc,\r\n          BilledAmount: 0,\r\n          CurrencyCode: null,\r\n        })),\r\n      ],\r\n      Details: filter(data.productGridModel, ({ weight }) => weight > 0).map(\r\n        (product, index) => ({\r\n          SequenceNumber: valueToNumber(index + 1),\r\n          NumberOfPieces: valueToNumber(product.billQty),\r\n          ActualWeight: 0,\r\n          BilledWeight: valueToNumber(product.weight),\r\n          BilledWeightUOM: null,\r\n          RatingClass: valueToString(product.class),\r\n          MeasurementType: valueToString(product.weightUom),\r\n          BilledQuantity: valueToNumber(product.billQty),\r\n          Length: valueToNumber(product.length),\r\n          Width: valueToNumber(product.width),\r\n          Height: valueToNumber(product.height),\r\n          // Cube: valueToNumber(product.cube),\r\n          Cube: 0,\r\n          CubeUOM: null,\r\n          ProductCode: \"\",\r\n          TrailerKey: 0,\r\n        })\r\n      ),\r\n      Lanes: [\r\n        {\r\n          Id: 1,\r\n          LaneKey: 0,\r\n          Origin: {\r\n            Port: {\r\n              Key: valueToNumber(shipmentOrigin?.portRecKey),\r\n              Type: stringToNull(shipmentOrigin?.portType),\r\n              Code: stringToNull(shipmentOrigin?.portCode),\r\n            },\r\n            Key: valueToNumber(shipmentOrigin?.primaryKey),\r\n            Address1: valueToString(shipmentOrigin?.address1),\r\n            Address2: null,\r\n            City: shipmentOrigin?.city,\r\n            StateCode: shipmentOrigin?.state,\r\n            CountryCode: shipmentOrigin?.countryCode,\r\n            Postal: shipmentOrigin?.postalCode,\r\n            PostalTo: null,\r\n            BranchKey: -1, // fixed\r\n          },\r\n          Destination: {\r\n            Port: {\r\n              Key: valueToNumber(shipmentDestination?.portRecKey),\r\n              Type: stringToNull(shipmentDestination?.portType), // -\r\n              Code: stringToNull(shipmentDestination?.portCode), // -\r\n            },\r\n            Key: valueToNumber(shipmentDestination?.primaryKey),\r\n            Address1: valueToString(shipmentDestination?.address1), // -\r\n            Address2: null,\r\n            City: shipmentDestination?.city, // -\r\n            StateCode: shipmentDestination?.state,\r\n            CountryCode: shipmentDestination?.countryCode, //-\r\n            Postal: shipmentDestination?.postalCode, // zipCode\r\n            PostalTo: null,\r\n            BranchKey: -1, // fixed\r\n          },\r\n          MileageMile: 0, // Have to Check ---------------------------\r\n        },\r\n      ],\r\n      Stops:\r\n        data?.transportGridModel?.length > 2\r\n          ? data?.transportGridModel?.map((row, index) => ({\r\n              LaneId: 1,\r\n              Sequence: valueToNumber(index + 1),\r\n              Type: null,\r\n              ShipRecKey: 0,\r\n              Location: {\r\n                Port: {\r\n                  Key: valueToNumber(row?.portRecKey),\r\n                  Type: stringToNull(row?.portType),\r\n                  Code: stringToNull(row?.portCode),\r\n                },\r\n                Key: 0,\r\n                Address1: valueToString(row.address1),\r\n                Address2: valueToString(row.address2),\r\n                City: valueToString(row.city),\r\n                StateCode: valueToString(row.state),\r\n                CountryCode: valueToString(row.countryCode),\r\n                Postal: valueToString(row.postalCode),\r\n                PostalTo: null,\r\n                BranchKey: -1, // fixed\r\n              },\r\n              NumberPieces: totalNumberOfPieces, // static\r\n              Mileage: 0, // static\r\n              Weight: totalWeight, // static\r\n              LegMiles: 0, // Static\r\n              TotalCharge: 0, // static\r\n              ActualCity: valueToString(row.city),\r\n              ActualState: valueToString(row.state),\r\n              TripMiles: 0, // static\r\n            }))\r\n          : [],\r\n      Taxes: [\r\n        //   {\r\n        //     \"BilledAmount\": 16.16,\r\n        //     \"CurrencyCode\": \"USD\",\r\n        //     \"Description\": null,\r\n        //     \"PkgSequenceKey\": 0,\r\n        //     \"TaxCode\": \"GST\",\r\n        //     \"TaxSequenceKey\": 0\r\n        //   }\r\n      ],\r\n      CriteriaId: 1,\r\n      Source: \"RateShop\", //fixed always\r\n      AuditType: null,\r\n      CustomerKey: data?.customerKey,\r\n      CarrierKey: \"-1\",\r\n      BranchKey: data?.branch,\r\n      TrailerKey: -1,\r\n      ShipmentDate: data?.shipDate\r\n        ? `/Date(${moment.utc(data?.shipDate).valueOf()})/`\r\n        : null,\r\n      DeliveryDate: `/Date(${moment\r\n        .utc(data?.deliveryDate ? data?.deliveryDate : data?.shipDate)\r\n        .valueOf()})/`,\r\n      PricingType: \"PACT\", //fixed always\r\n      PricingBasis: \"**\",\r\n      CurrencyCode: data.currencyCode,\r\n      CargoType: \"**\",\r\n      WeightUnitOfMeasure: data?.productGridModel?.[0]?.weightUom, // Have to check --------------\r\n      ServiceKey: -1,\r\n      ServiceCode: \"**\", // fixed\r\n      ServiceDescription: \"\",\r\n      IntercompanyType: valueToString(data?.shipmentTerms),\r\n      DiscountMode: valueToString(data?.shipmentType),\r\n      ShipmentTerms: valueToString(data?.shipmentTerms),\r\n      TimeFrame: \"C\", // fixed\r\n      TransportationMode: \"**\",\r\n      LinerCode: null,\r\n      LinerType: null,\r\n      AccountNumber: null,\r\n      IsShipmentRateshop: \"Y\", // fixed\r\n      PackageBranchKeys: \"-1\", //fixed\r\n      MileageMile: 0, // fixed\r\n      MileageKilometer: 0, // fixed\r\n      Weight: valueToNumber(\r\n        sumBy(data?.productGridModel, ({ weight }) => Number(weight))\r\n      ),\r\n      Cube: 0, // fixed\r\n      RatingClass: valueToString(totalClass),\r\n      NumberOfPieces: totalNumberOfPieces,\r\n      Length: valueToNumber(\r\n        sumBy(data?.productGridModel, ({ length }) => Number(length))\r\n      ),\r\n      Width: valueToNumber(\r\n        sumBy(data?.productGridModel, ({ width }) => Number(width))\r\n      ),\r\n      Height: valueToNumber(\r\n        sumBy(data?.productGridModel, ({ height }) => Number(height))\r\n      ),\r\n      ProductCode: null,\r\n      Debug: false,\r\n      TaxableValue: 0,\r\n      DeclaredValue: 0,\r\n      CODValue: 0,\r\n      LDMValue: 0,\r\n      ItemLevelRating: false,\r\n      ContractNumber: null,\r\n      FreightChargeBilled: 0,\r\n      TotalAccessorialBilled: 0,\r\n    },\r\n  };\r\n  return formData;\r\n};\r\n\r\n// export const shipmentRateShopLocalToAPI = (\r\n//   accessorials = [],\r\n//   shipmentDetails,\r\n//   filterData\r\n// ) => {\r\n//   const shipmentOrigin = shipmentDetails.transportationList[0];\r\n//   const shipmentDestination =\r\n//     shipmentDetails.transportationList[\r\n//       shipmentDetails.transportationList.length - 1\r\n//     ];\r\n//   let formData = {\r\n//     // RateShopCriteria: {\r\n//     accessorials: [\r\n//       {\r\n//         accessorialCode: \"FUE\",\r\n//         description: \"FUEL SURCHARGE\",\r\n//         billedAmount: 0,\r\n//         currencyCode: null,\r\n//       },\r\n//       ...accessorials,\r\n//     ],\r\n//     details: filter(\r\n//       shipmentDetails.productList,\r\n//       ({ weight, length }) => weight > 0\r\n//     ).map((product, index) => ({\r\n//       sequenceNumber: valueToNumber(index + 1),\r\n//       numberOfPieces: valueToNumber(product.quantity),\r\n//       actualWeight: 0, // In shipment always 0\r\n//       billedWeight: valueToNumber(product.weight),\r\n//       BilledWeightUOM: product.weightUom,\r\n//       ratingClass: product.class,\r\n//       measurementType: product.weightUom,\r\n//       billedQuantity: valueToNumber(product.billQty),\r\n//       length: valueToNumber(product.length),\r\n//       width: valueToNumber(product.width),\r\n//       height: valueToNumber(product.height),\r\n//       cube: valueToNumber(product.cube),\r\n//       // CubeUOM: null, // Have to Check\r\n//       // productCode: product.productCode,\r\n//       // productCode: \"\", // Have to Check\r\n//       // trailerKey: 0, // Have to check\r\n//     })),\r\n//     lanes: [\r\n//       {\r\n//         Id: 1,\r\n//         LaneKey: 0,\r\n//         origin: {\r\n//           port: {\r\n//             key: valueToNumber(shipmentOrigin.portRecKey),\r\n//             type: stringToNull(shipmentOrigin.portType),\r\n//             code: stringToNull(shipmentOrigin.portCode),\r\n//           },\r\n//           key: valueToNumber(shipmentOrigin.primaryKey),\r\n//           address1: shipmentOrigin.address1,\r\n//           address2: null,\r\n//           city: shipmentOrigin.city,\r\n//           stateCode: shipmentOrigin.stateCode,\r\n//           countryCode: shipmentOrigin.countryCode,\r\n//           postal: shipmentOrigin.zipCode,\r\n//           postalTo: null,\r\n//           // branchKey: valueToNumber(shipmentDetailsLocal.branchKey), // -\r\n//           // branchKey: -1, // -\r\n//         },\r\n//         destination: {\r\n//           port: {\r\n//             key: valueToNumber(shipmentDestination.portRecKey),\r\n//             type: stringToNull(shipmentDestination.portType), // -\r\n//             code: stringToNull(shipmentDestination.portCode), // -\r\n//           },\r\n//           key: shipmentDestination.primaryKey,\r\n//           address1: shipmentDestination.address1, // -\r\n//           address2: null,\r\n//           city: shipmentDestination.city, // -\r\n//           stateCode: shipmentDestination.stateCode,\r\n//           countryCode: shipmentDestination.countryCode, //-\r\n//           postal: shipmentDestination.zipCode, // zipCode\r\n//           postalTo: null,\r\n//           // branchKey: valueToNumber(shipmentDetailsLocal.branchKey), // -\r\n//           // branchKey: -1, // -\r\n//         },\r\n//         MileageMile: 0, // Need to implement with milage\r\n//       },\r\n//     ],\r\n//     stops: shipmentDetails?.transportationList\r\n//       ? shipmentDetails?.transportationList?.map((row, index) => ({\r\n//           laneId: 0,\r\n//           sequence: valueToNumber(row.sequence),\r\n//           // type: row.stopType == \"1\" ? \"orig\" : \"dest\",\r\n//           type: null,\r\n//           shipRecKey: 0,\r\n//           // shipRecKey: valueToNumber(row.shipmentKey),\r\n//           location: {\r\n//             port: {\r\n//               key: valueToNumber(row.portRecKey),\r\n//               type: row.portType,\r\n//               code: row.portCode,\r\n//             },\r\n//             key: index + 1,\r\n//             address1: valueToString(row.address1),\r\n//             address2: valueToString(row.address2),\r\n//             city: valueToString(row.city),\r\n//             stateCode: valueToString(row.stateCode),\r\n//             countryCode: valueToString(row.countryCode),\r\n//             postal: valueToString(row.zipCode),\r\n//             postalTo: null, // Static\r\n//             branchKey: valueToNumber(shipmentDetails.branchKey), // -\r\n//           },\r\n//           NumberPieces: 700, // Have to Check\r\n//           Mileage: 0, // static\r\n//           Weight: 4322, // have to check\r\n//           legMiles: valueToNumber(row.legMiles),\r\n//           TotalCharge: 0, // static\r\n//           actualCity: valueToString(row.city),\r\n//           actualState: valueToString(row.stateCode),\r\n//           tripMiles: 0, // static\r\n//         }))\r\n//       : [],\r\n//     taxes: shipmentDetails?.taxes\r\n//       ? shipmentDetails?.taxes.map((row) => ({\r\n//           BilledAmount: valueToNumber(row?.taxAmount),\r\n//           // CurrencyCode: \"USD\",\r\n//           Description: valueToString(row?.taxTypeDesc),\r\n//           TaxCode: valueToString(row.taxTypeCode),\r\n//         }))\r\n//       : [],\r\n//     criteriaId: 1,\r\n//     source: \"RateShop\", //fixed always\r\n//     AuditType: null,\r\n//     customerKey: shipmentDetails.customerKey,\r\n//     carrierKey: filterData.requiredCarrierKey\r\n//       ? filterData.requiredCarrierKey\r\n//       : \"-1\",\r\n//     branchKey: shipmentDetails.branchKey,\r\n//     trailerKey: filterData.trailerKey ? filterData.trailerKey : -1,\r\n//     shipmentDate: moment.utc(shipmentDetails.shipmentDate).toJSON(),\r\n//     deliveryDate: moment.utc(shipmentDetails.createdOn).toJSON(),\r\n//     pricingType: \"PACT\", //fixed always\r\n//     pricingBasis: getRateShopStringAll(shipmentDetails.pricingBasis),\r\n//     // currencyCode: getRateShopStringAll(shipmentDetailsLocal.currencyCode),\r\n//     currencyCode: \"**\", // Have to check\r\n//     cargoType: getRateShopStringAll(filterData.cargoType),\r\n//     weightUnitOfMeasure: shipmentDetails.weightUOM,\r\n//     serviceKey: filterData.serviceKey\r\n//       ? valueToNumber(filterData.serviceKey)\r\n//       : -1,\r\n//     serviceCode: \"**\", // fixed\r\n//     // serviceDescription: selectedServiceLevel\r\n//     //   ? selectedServiceLevel.serviceDesc\r\n//     //   : null,\r\n//     intercompanyType: valueToString(shipmentDetails.shipmentTerms), // fixed\r\n//     discountMode: valueToString(shipmentDetails.shipmentType), // fixed\r\n//     shipmentTerms: shipmentDetails.shipmentTerms,\r\n//     timeFrame: \"C\", // fixed\r\n//     transportationMode: getRateShopStringAll(\r\n//       shipmentDetails.transportationMode\r\n//     ),\r\n//     linerCode: null,\r\n//     linerType: null,\r\n//     accountNumber: valueToString(shipmentDetails?.accountNumber),\r\n//     isShipmentRateshop: \"Y\", // fixed\r\n//     packageBranchKeys: \"-1\", //fixed\r\n//     mileageMile: shipmentDetails.totalMileage,\r\n//     mileageKilometer: shipmentDetails.totalMileage,\r\n//     weight: valueToNumber(shipmentDetails.shipmentTotalWeight),\r\n//     cube: valueToNumber(shipmentDetails.totalCube),\r\n//     // ratingClass: \"92.5\", // have to Check\r\n//     // numberOfPieces: 700, // Have to check\r\n//     // length: shipmentDetailsLocal.shipmentTotalWeight,\r\n//     // width: sumBy(shipmentDetailsLocal.productList, ({ width }) =>\r\n//     //   width ? width : 0\r\n//     // ),\r\n//     // height: sumBy(shipmentDetailsLocal.productList, ({ height }) =>\r\n//     //   height ? height : 0\r\n//     // ),\r\n//     ProductCode: null,\r\n//     Debug: false,\r\n//     TaxableValue: 0,\r\n//     DeclaredValue: 0,\r\n//     CODValue: 0,\r\n//     LDMValue: 0,\r\n//     itemLevelRating: false, // fixed\r\n//     ContractNumber: null,\r\n//     FreightChargeBilled: 0,\r\n//     TotalAccessorialBilled: 0,\r\n\r\n//     havingLeastCost:\r\n//       filterData.carrierRequirements ===\r\n//       SHIPMENT_RATE_SHOP_RATTING_PREFERENCES.LEAST_COST, // Internal purpose\r\n//   };\r\n//   return formData;\r\n// };\r\n\r\nexport const shipmentRateShopLocalToRateEngineAPI = (\r\n  Accessorials = [],\r\n  shipmentDetails,\r\n  filterData,\r\n  currencyCode,\r\n  isAPIRateShop\r\n) => {\r\n  shipmentDetails.transportationList = orderBy(\r\n    shipmentDetails.transportationList,\r\n    [\"displaySequence\"],\r\n    [\"asc\"]\r\n  );\r\n  const shipmentOrigin = shipmentDetails.transportationList[0];\r\n  const shipmentDestination =\r\n    shipmentDetails.transportationList[\r\n      shipmentDetails.transportationList.length - 1\r\n    ];\r\n\r\n  const originList = filter(shipmentDetails.transportationList, {\r\n    stopType: \"1\",\r\n  });\r\n\r\n  const destList = filter(shipmentDetails.transportationList, {\r\n    stopType: \"2\",\r\n  });\r\n\r\n  const getValuesFromMoment = (value, type) => {\r\n    if (typeof value === \"string\") {\r\n      value = moment(value);\r\n    }\r\n    return value?.get(type);\r\n  };\r\n\r\n  let shipmentDate = moment(originList[0].requestedDate);\r\n  let deliveryDate = moment(destList[destList.length - 1].requestedDate);\r\n\r\n  shipmentDate = shipmentDate?.set({\r\n    hour: getValuesFromMoment(originList?.[0]?.requestedTime, \"hour\"),\r\n    minute: getValuesFromMoment(originList?.[0]?.requestedTime, \"minute\"),\r\n    second: 0,\r\n    millisecond: 0,\r\n  });\r\n\r\n  if (destList?.[destList.length - 1]?.requestedTime && deliveryDate) {\r\n    deliveryDate = deliveryDate?.set({\r\n      hour: getValuesFromMoment(\r\n        destList?.[destList.length - 1]?.requestedTime,\r\n        \"hour\"\r\n      ),\r\n      minute: getValuesFromMoment(\r\n        destList?.[destList.length - 1]?.requestedTime,\r\n        \"minute\"\r\n      ),\r\n      second: 0,\r\n      millisecond: 0,\r\n    });\r\n  }\r\n\r\n  shipmentDetails.shipmentDate = shipmentDate;\r\n  shipmentDetails.deliveryDate = deliveryDate;\r\n\r\n  let stops = shipmentDetails?.transportationList;\r\n  if (stops) {\r\n    stops.splice(stops.length - 1, 1);\r\n    stops.splice(0, 1);\r\n  }\r\n\r\n  let mainData = {};\r\n  let formData = {\r\n    Accessorials,\r\n    Details: filter(\r\n      shipmentDetails.productList,\r\n      ({ weight, length }) => weight > 0\r\n    ).map((product, index) => ({\r\n      SequenceNumber: valueToNumber(index + 1),\r\n      NumberOfPieces: valueToNumber(product.quantity),\r\n      ActualWeight: !isAPIRateShop ? 0 : valueToNumber(product.weight), // In shipment always 0\r\n      BilledWeight: valueToNumber(product.weight),\r\n      BilledWeightUOM: product.weightUom,\r\n      RatingClass: product.class,\r\n      MeasurementType: product.weightUom,\r\n      BilledQuantity: valueToNumber(product.billQty),\r\n      Length: valueToNumber(product.length),\r\n      Width: valueToNumber(product.width),\r\n      Height: valueToNumber(product.height),\r\n      Cube: valueToNumber(product.cube),\r\n      CubeUOM: valueToString(product.dimUom),\r\n    })),\r\n    Lanes: [\r\n      {\r\n        Id: 1,\r\n        LaneKey: 1,\r\n        Origin: {\r\n          Port: {\r\n            Key: valueToNumber(shipmentOrigin.portRecKey),\r\n            Type: stringToNull(shipmentOrigin.portType),\r\n            Code: stringToNull(shipmentOrigin.portCode),\r\n          },\r\n          Key: valueToNumber(shipmentOrigin.primaryKey),\r\n          Address1: shipmentOrigin.address1,\r\n          Address2: null,\r\n          City: shipmentOrigin.city,\r\n          StateCode: shipmentOrigin.stateCode,\r\n          CountryCode: shipmentOrigin.countryCode,\r\n          Postal: shipmentOrigin.zipCode,\r\n          PostalTo: null,\r\n          BranchKey: valueToNumber(shipmentDetails.branchKey), // -\r\n          // BranchKey: -1, // -\r\n        },\r\n        Destination: {\r\n          Port: {\r\n            Key: valueToNumber(shipmentDestination.portRecKey),\r\n            Type: stringToNull(shipmentDestination.portType), // -\r\n            Code: stringToNull(shipmentDestination.portCode), // -\r\n          },\r\n          Key: shipmentDestination.primaryKey,\r\n          Address1: shipmentDestination.address1, // -\r\n          Address2: null,\r\n          City: shipmentDestination.city, // -\r\n          StateCode: shipmentDestination.stateCode,\r\n          CountryCode: shipmentDestination.countryCode, //-\r\n          Postal: shipmentDestination.zipCode, // zipCode\r\n          PostalTo: null,\r\n          BranchKey: valueToNumber(shipmentDetails.branchKey), // -\r\n          // BranchKey: -1, // -\r\n        },\r\n        MileageMile: 0, // Need to implement with milage\r\n      },\r\n    ],\r\n    Stops: stops.map((row, index) => ({\r\n      LaneId: 1,\r\n      Sequence: valueToNumber(row.sequence),\r\n      // Type: row.stopType == \"1\" ? \"Orig\" : \"dest\",\r\n      Type: null,\r\n      // ShipRecKey: 0,\r\n      ShipRecKey: valueToNumber(row.shipmentKey),\r\n      Location: {\r\n        Port: {\r\n          Key: valueToNumber(row.portRecKey),\r\n          Type: row.portType,\r\n          Code: row.portCode,\r\n        },\r\n        Key: index + 1,\r\n        Address1: valueToString(row.address1),\r\n        Address2: valueToString(row.address2),\r\n        City: valueToString(row.city),\r\n        StateCode: valueToString(row.stateCode),\r\n        CountryCode: valueToString(row.countryCode),\r\n        Postal: valueToString(row.zipCode),\r\n        PostalTo: null, // Static\r\n        BranchKey: valueToNumber(shipmentDetails.branchKey), // -\r\n      },\r\n      // NumberPieces: 700, // Have to Check\r\n      // Mileage: 0, // static\r\n      // Weight: 4322, // have to check\r\n      // LegMiles: valueToNumber(row.legMiles),\r\n      // TotalCharge: 0, // static\r\n      // ActualCity: valueToString(row.city),\r\n      // ActualState: valueToString(row.stateCode),\r\n      // TripMiles: 0, // static\r\n    })),\r\n    Taxes: shipmentDetails?.taxes\r\n      ? shipmentDetails?.taxes.map((row) => ({\r\n          BilledAmount: valueToNumber(row?.taxAmount),\r\n          // CurrencyCode: \"USD\",\r\n          Description: valueToString(row?.taxTypeDesc),\r\n          TaxCode: valueToString(row.taxTypeCode),\r\n        }))\r\n      : [],\r\n    CriteriaId: 1,\r\n    Source: \"RateShop\", //fixed always\r\n    AuditType: null,\r\n    CustomerKey: shipmentDetails.customerKey,\r\n    CarrierKey: filterData.requiredCarrierKey\r\n      ? filterData.requiredCarrierKey\r\n      : \"-1\",\r\n    BranchKey: shipmentDetails.branchKey,\r\n    TrailerKey: filterData.trailerKey ? filterData.trailerKey : -1,\r\n    ShipmentDate: shipmentDetails.shipmentDate\r\n      ? `/Date(${moment.utc(shipmentDetails.shipmentDate).valueOf()})/`\r\n      : null,\r\n    DeliveryDate: `/Date(${moment\r\n      .utc(\r\n        shipmentDetails.deliveryDate\r\n          ? shipmentDetails.deliveryDate\r\n          : shipmentDetails.shipmentDate\r\n      )\r\n      .valueOf()})/`,\r\n    PricingType: \"PACT\", //fixed always\r\n    PricingBasis: getRateShopStringAll(shipmentDetails.pricingBasis),\r\n    CurrencyCode: currencyCode, // Have to check\r\n    CargoType: getRateShopStringAll(filterData.cargoType),\r\n    WeightUnitOfMeasure: shipmentDetails.weightUOM,\r\n    ServiceKey: filterData.serviceKey\r\n      ? valueToNumber(filterData.serviceKey)\r\n      : -1,\r\n    ServiceCode: \"**\", // fixed\r\n    // ServiceDescription: selectedServiceLevel\r\n    //   ? selectedServiceLevel.serviceDesc\r\n    //   : null,\r\n    IntercompanyType: valueToString(shipmentDetails.shipmentTerms), // fixed\r\n    DiscountMode: valueToString(shipmentDetails.shipmentType), // fixed\r\n    ShipmentTerms: shipmentDetails.shipmentTerms,\r\n    TimeFrame: \"C\", // fixed\r\n    // TransportationMode: getRateShopStringAll(\r\n    //   shipmentDetails.transportationMode\r\n    // ),\r\n    TransportationMode: \"**\",\r\n    LinerCode: null,\r\n    LinerType: null,\r\n    AccountNumber: valueToString(shipmentDetails?.accountNumber),\r\n    IsShipmentRateshop: \"Y\", // fixed\r\n    PackageBranchKeys: \"-1\", //fixed\r\n    MileageMile: shipmentDetails.totalMileage,\r\n    MileageKilometer: shipmentDetails.totalMileage,\r\n    Weight: valueToNumber(shipmentDetails.shipmentTotalWeight),\r\n    Cube: valueToNumber(shipmentDetails.totalCube),\r\n    // RatingClass: \"92.5\", // have to Check\r\n    // NumberOfPieces: 700, // Have to check\r\n    // Length: shipmentDetailsLocal.shipmentTotalWeight,\r\n    // Width: sumBy(shipmentDetailsLocal.productList, ({ width }) =>\r\n    //   width ? Width : 0\r\n    // ),\r\n    // Height: sumBy(shipmentDetailsLocal.productList, ({ height }) =>\r\n    //   height ? Height : 0\r\n    // ),\r\n    ProductCode: null,\r\n    Debug: false,\r\n    TaxableValue: 0,\r\n    DeclaredValue: 0,\r\n    CODValue: 0,\r\n    LDMValue: 0,\r\n    ItemLevelRating: false, // fixed\r\n    ContractNumber: null,\r\n    FreightChargeBilled: 0,\r\n    TotalAccessorialBilled: 0,\r\n\r\n    havingLeastCost:\r\n      filterData.carrierRequirements ===\r\n      SHIPMENT_RATE_SHOP_RATTING_PREFERENCES.LEAST_COST, // Internal purpose\r\n  };\r\n\r\n  if (isAPIRateShop) {\r\n    mainData = {\r\n      RateQuote: {\r\n        CustomerKey: shipmentDetails.customerKey,\r\n        CarrierKeys: \"1107,58,16\", // static for API RateShop\r\n        AccountNos: \"13823813,0680281,123456\", // static for API RateShop\r\n        nVision_request: {\r\n          AppsName: null,\r\n          LoginID: null,\r\n          Password: null,\r\n          ApplicationID: 0,\r\n          ConnectionString: null,\r\n          DNSIdentifier: null,\r\n          EndPointAddress: null,\r\n          LicenceKey: null,\r\n          ModuleName: null,\r\n          OwnerID: 0,\r\n          // ServiceExpiryDate: \"/Date(1665059892711-0400)/\",\r\n          ServiceExpiryDate: null,\r\n          ServiceModuleID: 0,\r\n          UserID: 0,\r\n          UserName: null,\r\n          AccessToken: null,\r\n          Action: null,\r\n          AuthenticationToken: null,\r\n          Debug: false,\r\n          LoadOptions: null,\r\n          RequestId: null,\r\n          Version: null,\r\n          ErrorMessage: null,\r\n          RateShopCriteria: formData,\r\n        },\r\n      },\r\n    };\r\n  } else {\r\n    mainData = { RateShopCriteria: formData };\r\n  }\r\n\r\n  return mainData;\r\n};\r\n\r\nexport const parseStopsForMilageByStops = (stops) => {\r\n  return stops\r\n    ? stops?.map((row) => ({\r\n        Address1: null,\r\n        Address2: null,\r\n        City: row.city,\r\n        StateCode: row.stateCode,\r\n        CountryCode: row.countryCode,\r\n        Postal: row.zipCode,\r\n        Coords: null,\r\n      }))\r\n    : [];\r\n};\r\n\r\nexport const convertRateShopUiToRateEngine = (data) => {\r\n  return {\r\n    RateShopCriteria: {\r\n      Accessorials: data.accessorials.map(({ codeId, codeDesc }) => ({\r\n        AccessorialCode: codeId,\r\n        Description: codeDesc,\r\n        BilledAmount: 0,\r\n        CurrencyCode: null,\r\n      })),\r\n      Details: data.itemsForm.items.map((row, index) => ({\r\n        SequenceNumber: index + 1,\r\n        NumberOfPieces: valueToNumber(row?.numberOfPieces),\r\n        // ActualWeight: 0,\r\n        BilledWeight: valueToNumber(row?.billedWeight),\r\n        BilledWeightUOM: valueToString(data.itemsForm.weightUom),\r\n        RatingClass: valueToNumber(row?.class),\r\n        MeasurementType: valueToString(data.itemsForm.weightUom),\r\n        BilledQuantity: valueToNumber(row?.billQuantity),\r\n        Length: valueToNumber(row?.length),\r\n        Width: valueToNumber(row?.width),\r\n        Height: valueToNumber(row?.height),\r\n        Cube: valueToNumber(row?.cube),\r\n      })),\r\n      Lanes: data.lanes.map((row, index) => ({\r\n        Id: index + 1,\r\n        Origin: {\r\n          Port: {\r\n            Key: row.ORIGIN_portCode ? 1 : 0,\r\n            Type: row.ORIGIN_portType ? row.ORIGIN_portType : null,\r\n            Code: row.ORIGIN_portCode ? row.ORIGIN_portCode : null,\r\n          },\r\n          Key: 0,\r\n          Address1: null,\r\n          Address2: null,\r\n          City: valueToString(row.ORIGIN_city),\r\n          StateCode: valueToString(row.ORIGIN_stateCode),\r\n          CountryCode: valueToString(row.ORIGIN_countryCode),\r\n          Postal: valueToString(row.ORIGIN_postalCode),\r\n          PostalTo: null,\r\n        },\r\n        Destination: {\r\n          Port: {\r\n            Key: row.DEST_portCode ? 1 : 0,\r\n            Type: row.DEST_portType ? row.DEST_portType : null,\r\n            Code: row.DEST_portCode ? row.DEST_portCode : null,\r\n          },\r\n          Key: 0,\r\n          Address1: null,\r\n          Address2: null,\r\n          City: valueToString(row.DEST_city),\r\n          StateCode: valueToString(row.DEST_stateCode),\r\n          CountryCode: valueToString(row.DEST_countryCode),\r\n          Postal: valueToString(row.DEST_postalCode),\r\n          PostalTo: null,\r\n        },\r\n        MileageMile: 0,\r\n      })),\r\n      Stops: data.stops.map((row, index) => ({\r\n        LaneId: row.laneId,\r\n        Sequence: index + 1,\r\n        Type: null,\r\n        ShipRecKey: 0,\r\n        Location: {\r\n          Port: {\r\n            Key: row.portCode ? 1 : 0,\r\n            Type: row.portType ? row.portType : null,\r\n            Code: row.portCode ? row.portCode : null,\r\n          },\r\n          Address1: \"\",\r\n          Address2: \"\",\r\n          City: valueToString(row.city),\r\n          StateCode: valueToString(row.stateCode),\r\n          CountryCode: valueToString(row.countryCode),\r\n          Postal: valueToString(row.postalCode),\r\n          PostalTo: null,\r\n        },\r\n        NumberPieces: valueToNumber(row.numberOfPieces),\r\n        Mileage: valueToNumber(row.legMile),\r\n        Weight: valueToNumber(row.weight),\r\n        LegMiles: valueToNumber(row.legMile),\r\n        // TotalCharge: 0,\r\n        ActualCity: valueToString(row.city),\r\n        ActualState: valueToString(row.stateCode),\r\n        TripMiles: 0,\r\n      })),\r\n      Taxes: data.taxes.map(({ codeId, codeDesc }) => ({\r\n        TaxCode: codeId,\r\n        Description: codeDesc,\r\n        BilledAmount: 0,\r\n        CurrencyCode: data.globalRateShopForm?.currencyCode\r\n          ? data.globalRateShopForm?.currencyCode\r\n          : \"**\",\r\n      })),\r\n      CriteriaId: 1,\r\n      Source: \"RateShop\",\r\n      AuditType: null,\r\n      CustomerKey: valueToNumber(data.globalRateShopForm?.customerKey),\r\n      CarrierKey: data.globalRateShopForm?.customerKey\r\n        ? data.carriers.map(({ carrierKey }) => carrierKey).join(\",\")\r\n        : \"**\",\r\n      BranchKey: valueToNumber(data.globalRateShopForm?.branchKey),\r\n      TrailerKey: data.globalRateShopForm.trailerKey\r\n        ? valueToNumber(data.globalRateShopForm.trailerKey)\r\n        : -1,\r\n      ShipmentDate: data.globalRateShopForm.shipmentDate\r\n        ? `/Date(${data.globalRateShopForm.shipmentDate.valueOf()})/`\r\n        : null,\r\n      DeliveryDate: data.globalRateShopForm.deliveryDate\r\n        ? `/Date(${data.globalRateShopForm.deliveryDate.valueOf()})/`\r\n        : null,\r\n      PricingType: valueToString(data.globalRateShopForm.pricingType),\r\n      PricingBasis: valueToString(data.globalRateShopForm.pricingBasis),\r\n      CurrencyCode: data.globalRateShopForm.currencyCode\r\n        ? valueToString(data.globalRateShopForm.currencyCode)\r\n        : \"**\",\r\n      CargoType: data.globalRateShopForm.cargoType\r\n        ? data.globalRateShopForm.cargoType.join(\",\")\r\n        : \"**\",\r\n      WeightUnitOfMeasure: valueToString(\r\n        data.globalRateShopForm.measurementUit\r\n      ),\r\n      ServiceKey: -1,\r\n      ServiceCode: \"**\",\r\n      IntercompanyType: valueToString(data.globalRateShopForm.shipmentTerms),\r\n      DiscountMode: valueToString(data.globalRateShopForm.shipmentType),\r\n      ShipmentTerms: valueToString(data.globalRateShopForm.shipmentTerms),\r\n      TimeFrame: valueToString(data.globalRateShopForm.timeFrame),\r\n      TransportationMode: \"**\",\r\n      LinerCode: data.globalRateShopForm.LinerCode\r\n        ? data.globalRateShopForm.LinerCode\r\n        : null,\r\n      LinerType: data.globalRateShopForm.LinerType\r\n        ? data.globalRateShopForm.LinerType\r\n        : null,\r\n      AccountNumber: \"\",\r\n      IsShipmentRateshop: \"N\",\r\n      PackageBranchKeys: \"-1\",\r\n      MileageMile: 0,\r\n      MileageKilometer: 0,\r\n      Weight: sumBy(data.items, ({ billWeight }) => billWeight),\r\n      Cube: sumBy(data.items, ({ cube }) => cube),\r\n      ProductCode: valueToString(data.globalRateShopForm.productCode),\r\n      Debug: false,\r\n      TaxableValue: 0,\r\n      DeclaredValue: valueToNumber(data.globalRateShopForm.declaredValue),\r\n      CODValue: valueToNumber(data.globalRateShopForm.CODValue),\r\n      LDMValue: valueToNumber(data.globalRateShopForm.LDMValue),\r\n      ItemLevelRating: false,\r\n      ContractNumber: null,\r\n      FreightChargeBilled: 0,\r\n      TotalAccessorialBilled: 0,\r\n    },\r\n  };\r\n};\r\n\r\nexport const convertRateEnginApiResponseToRateShopModule = (data) => {\r\n  if (data) {\r\n    data = data.map((row) => {\r\n      let tariffRateDate = convertDateToMoment(row.TariffRateDate);\r\n      let pricingEffectiveFrom = convertDateToMoment(row.PricingEffectiveFrom);\r\n      let pricingEffectiveTo = convertDateToMoment(row.PricingEffectiveTo);\r\n      let tariffEffectiveFrom = convertDateToMoment(row.TariffEffectiveFrom);\r\n      let tariffEffectiveTo = convertDateToMoment(row.TariffEffectiveTo);\r\n      return {\r\n        accessorials: row?.Accessorials\r\n          ? row?.Accessorials?.map((accRow) => ({\r\n              auditedChargeAmount: accRow?.AuditedChargeAmount,\r\n              description: accRow?.Description,\r\n              currencyCode: accRow?.CurrencyCode,\r\n              accessorialCode: accRow?.AccessorialCode,\r\n              calculationType: accRow?.CalculationType,\r\n              effectiveFromDate: formateWithMoment(\r\n                accRow.EffectiveFromDate,\r\n                \"DD-MMM-YYYY\"\r\n              ),\r\n              effectiveToDate: formateWithMoment(\r\n                accRow.EffectiveToDate,\r\n                \"DD-MMM-YYYY\"\r\n              ),\r\n              fuelChargeIndicator: accRow?.FuelChargeIndicator,\r\n              discountAmount: accRow?.DiscountAmount,\r\n              note: accRow?.ErrorMessage,\r\n            }))\r\n          : [],\r\n        cargoType: row.CargoType,\r\n        carrierKey: row.CarrierKey,\r\n        carrierName: row.CarrierName,\r\n        currencyCode: row.CurrencyCode,\r\n        directPoint: row.DirectPoint,\r\n        error_message: row.ErrorMessage,\r\n        mileage: row.MileageMiles,\r\n        mileageKm: row.MileageKilometers,\r\n        pricingBasis: row.PricingBasis,\r\n        pricingType: row.PricingType,\r\n        serviceDesc: row.ServiceDescription,\r\n        serviceKey: row.ServiceKey,\r\n        serviceType: row.ServiceCode,\r\n        shipmentCost: row.ShipmentCost,\r\n        standardDaysTransit: row.StandardDaysTransit,\r\n        trailerDesc: row.TrailerDescription,\r\n        equipmentTypeDetail: row.TrailerDescription,\r\n        trailerkey: row.TrailerKey,\r\n        convertedCost: row.ConvertedCost,\r\n        freightAccessorialCollection: row.Accessorials,\r\n        convertedCurrencyCode: row.ConvertedCurrency,\r\n        spotQuoteNumber: row.SpotQuoteContractNumber,\r\n        bidComment: row.ErrorMessage,\r\n        effectiveTo: convertDateToMoment(row.PricingEffectiveTo),\r\n        createdOn: moment(new Date()),\r\n        TariffKey: row.TariffKey,\r\n        pricingDetailKey: row.PricingKey,\r\n        accessorialCost: sum(\r\n          row.accessorials\r\n            ? row.accessorials.map(\r\n                ({ AuditedChargeAmount }) => AuditedChargeAmount\r\n              )\r\n            : []\r\n        ),\r\n        rateShopKey: \"\", //\r\n        rateType: \"\", //\r\n        flagStandardTranit: \"\", //\r\n        viewCargoType: null, //\r\n        isRateEntry: null, //\r\n        totalShipmentCost: row.TotalShipmentCost,\r\n        laneId: row.LaneId,\r\n        branchDescription: row.BranchDescription,\r\n        grossCharge: row.GrossCharge,\r\n        totalDiscount: row.TotalDiscount,\r\n        discountPercentage: row.DiscountPercentage,\r\n        ABSTotalCharge: row.ABSTotalCharge,\r\n        totalAccessorialCharge: row.TotalAccessorialCharge,\r\n        totalTaxCharge: row.TotalTaxCharge,\r\n        bureauMinimumUsed: row.BureauMinimumUsed,\r\n        ABSMinimumUsed: row.ABSMinimumUsed,\r\n        ABSMaximumUsed: row.ABSMaximumUsed,\r\n        tariffName: row.TariffName,\r\n        tariffRateDate: tariffRateDate\r\n          ? tariffRateDate?.format(\"(mm/dd/yyyy)\")\r\n          : \"\",\r\n        pricingEffectiveFrom: pricingEffectiveFrom\r\n          ? pricingEffectiveFrom?.format(\"(DD-MMM-YYYY)\")\r\n          : \"\",\r\n        pricingEffectiveTo: pricingEffectiveTo\r\n          ? pricingEffectiveTo?.format(\"(DD-MMM-YYYY)\")\r\n          : \"\",\r\n        tariffEffectiveFrom: tariffEffectiveFrom\r\n          ? tariffEffectiveFrom?.format(\"(DD-MMM-YYYY)\")\r\n          : \"\",\r\n        tariffEffectiveTo: tariffEffectiveTo\r\n          ? tariffEffectiveTo?.format(\"(DD-MMM-YYYY)\")\r\n          : \"\",\r\n        accountNumber: row.AccountNumber,\r\n        tariffKey: row.TariffKey,\r\n        lineType: row.AirRailEquipmentType || \"N/A\",\r\n        liner: row.AirRailOceanLiner || \"N/A\",\r\n        laneCode: row.LaneCode || \"N/A\",\r\n        laneKey: row.LaneKey || \"N/A\",\r\n        items: row.Details\r\n          ? row.Details.map((item) => ({\r\n              ...item,\r\n              numberOfPieces: item.NumberOfPieces,\r\n              billedQuantity: item.BilledQuantity,\r\n              ratingClass: item.RatingClass,\r\n              ABSMinimumUsed: item.ABSMinimumUsed,\r\n              ABSMaximumUsed: item.ABSMaximumUsed,\r\n              rateCostPer: item.RateCostPer,\r\n              discountAmount: item.DiscountAmount,\r\n              billedWeight: item.BilledWeight,\r\n              billedWeightUOM: item.BilledWeightUOM,\r\n              actualWeight: item.ActualWeight,\r\n              pricingBasis: item.PricingBasis,\r\n              rateCharge: item.RateCharge,\r\n              totalCharge: item.TotalCharge,\r\n              actualClass: item.ActualClass,\r\n            }))\r\n          : [],\r\n        taxes: row.Taxes\r\n          ? row.Taxes.map((tax) => ({\r\n              ...tax,\r\n              taxCode: tax.TaxCode,\r\n              description: tax.Description,\r\n              calculationType: tax.CalculationType,\r\n              taxType: tax.TaxType,\r\n              effectiveFromDate: formateWithMoment(\r\n                tax.EffectiveFromDate,\r\n                \"DD-MMM-YYYY\"\r\n              ),\r\n              effectiveToDate: formateWithMoment(\r\n                tax.EffectiveToDate,\r\n                \"DD-MMM-YYYY\"\r\n              ),\r\n              auditedChargeAmount: tax.AuditedChargeAmount,\r\n              note: tax.ErrorMessage,\r\n            }))\r\n          : [],\r\n        note: row.ErrorMessage,\r\n        totalDeficitCharge: row.TotalDeficitCharge,\r\n        totalDeficitWeight: row.TotalDeficitWeight,\r\n        deficitWeight: row.DeficitWeight,\r\n        deficitRate: row.DeficitRate,\r\n      };\r\n    });\r\n  }\r\n  data = data.filter(({ totalShipmentCost }) => {\r\n    return Number(totalShipmentCost) > 0;\r\n  });\r\n  data = orderBy(data, [\"totalShipmentCost\"], [\"asc\"]);\r\n  return groupBy(data, ({ laneId }) => laneId);\r\n};\r\n\r\nexport const convertParcelExpressUIToRateAPI = (\r\n  data,\r\n  customerKey,\r\n  isRateRequest\r\n) => {\r\n  const carrierData = isRateRequest\r\n    ? {\r\n        rateFedex: Boolean(data?.carrierForm?.rateFedex),\r\n        fedexAccount: valueToString(data?.carrierForm?.fedexAccount),\r\n        rateUPS: Boolean(data?.carrierForm?.rateUPS),\r\n        upsAccount: valueToString(data?.carrierForm?.upsAccount),\r\n        rateDHL: Boolean(data?.carrierForm?.rateDHL),\r\n        dhlAccount: valueToString(data?.carrierForm?.dhlAccount),\r\n      }\r\n    : {\r\n        LabelFedex: false,\r\n        fedexAccount: \"\",\r\n        LabelUPS: false,\r\n        upsAccount: \"\",\r\n        LabelDHL: false,\r\n        dhlAccount: \"\",\r\n        ShipmentType: valueToString(\r\n          data?.shipmentInformationForm?.shipmentType\r\n        ),\r\n        ShipmentTerms: valueToString(\r\n          data?.shipmentInformationForm?.shipmentTerms\r\n        ),\r\n        ShipperAccountNumber: valueToString(\r\n          data?.shipmentInformationForm?.accountNo\r\n        ),\r\n      };\r\n\r\n  if (!isRateRequest) {\r\n    if (data.SelectedRate.carrierType === SP_CARRIERS_TYPES.FEDEX) {\r\n      carrierData.LabelFedex = true;\r\n      carrierData.fedexAccount = valueToString(data?.carrierForm?.fedexAccount);\r\n    } else if (data.SelectedRate.carrierType === SP_CARRIERS_TYPES.UPS) {\r\n      carrierData.LabelUPS = true;\r\n      carrierData.upsAccount = valueToString(data?.carrierForm?.upsAccount);\r\n    } else if (data.SelectedRate.carrierType === SP_CARRIERS_TYPES.DHL) {\r\n      carrierData.LabelDHL = true;\r\n      carrierData.dhlAccount = valueToString(data?.carrierForm?.dhlAccount);\r\n    }\r\n  }\r\n\r\n  return {\r\n    parcelPackage: data.packages.map((packageDetails) => ({\r\n      weight: valueToString(packageDetails.weight),\r\n      weightUOM: valueToString(packageDetails.weightUOM),\r\n      packagesQuantity: valueToNumber(packageDetails.noPackages),\r\n      length: valueToString(packageDetails.weight),\r\n      width: valueToString(packageDetails.width),\r\n      height: valueToString(packageDetails.height),\r\n      dimensionsUOM: valueToString(packageDetails.dimensionsUOM),\r\n    })),\r\n    origin: {\r\n      contactName: valueToString(data.locationForm?.ORIGIN_contactName),\r\n      phoneCode: valueToString(data.locationForm?.ORIGIN_phoneCode),\r\n      phoneNumber: valueToString(data.locationForm?.ORIGIN_phoneNumber),\r\n      phoneExtension: valueToString(data.locationForm?.ORIGIN_phoneExtension),\r\n      contactEmail: valueToString(data.locationForm?.ORIGIN_contactEmail),\r\n      companyName: valueToString(data.locationForm?.ORIGIN_companyName),\r\n      streetAddress: valueToString(data.locationForm?.ORIGIN_streetAddress),\r\n      streetAddress2: valueToString(data.locationForm?.ORIGIN_streetAddress2),\r\n      countryCode: valueToString(data.locationForm?.ORIGIN_countryCode),\r\n      postalCode: valueToString(data.locationForm?.ORIGIN_postalCode),\r\n      state: valueToString(data.locationForm?.ORIGIN_state),\r\n      city: valueToString(data.locationForm?.ORIGIN_city),\r\n      deliveryDate: convertDateStringtoMoment(data.locationForm?.shipDate),\r\n    },\r\n    destination: {\r\n      contactName: valueToString(data.locationForm?.DEST_contactName),\r\n      phoneCode: valueToString(data.locationForm?.DEST_phoneCode),\r\n      phoneNumber: valueToString(data.locationForm?.DEST_phoneNumber),\r\n      phoneExtension: valueToString(data.locationForm?.DEST_phoneExtension),\r\n      contactEmail: valueToString(data.locationForm?.DEST_contactEmail),\r\n      companyName: valueToString(data.locationForm?.DEST_companyName),\r\n      streetAddress: valueToString(data.locationForm?.DEST_streetAddress),\r\n      streetAddress2: valueToString(data.locationForm?.DEST_streetAddress2),\r\n      countryCode: valueToString(data.locationForm?.DEST_countryCode),\r\n      postalCode: valueToString(data.locationForm?.DEST_postalCode),\r\n      state: valueToString(data.locationForm?.DEST_state),\r\n      city: valueToString(data.locationForm?.DEST_city),\r\n      deliveryDate: convertDateStringtoMoment(data.locationForm?.shipDate),\r\n    },\r\n    branch: valueToNumber(data?.shipmentInformationForm?.branchKey),\r\n    customerKey: valueToNumber(customerKey),\r\n    ...carrierData,\r\n  };\r\n};\r\n\r\nexport const freightClassCalculator = (\r\n  productList,\r\n  isHideTheRowDetails = false\r\n) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      await validateProductForCalculateClass(productList, isHideTheRowDetails);\r\n      productList = productList.map((row) => ({\r\n        ...row,\r\n        class: calCulateFreightClass(\r\n          row.length,\r\n          row.width,\r\n          row.height,\r\n          row.weight,\r\n          row.weightUom,\r\n          row.billQty,\r\n          row.billQtyUom,\r\n          row.dimUom,\r\n          row.cube\r\n        ),\r\n      }));\r\n      resolve(productList);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n\r\nexport const convertRateEntryToAPI = (data) => ({\r\n  cargoType: valueToString(data?.cargoType),\r\n  carrierKey: valueToNumber(data?.carrierKey),\r\n  carrierName: valueToString(data?.carrierName),\r\n  currencyCode: valueToString(data?.currencyCode),\r\n  shipmentCost: valueToNumber(data?.shipmentCost),\r\n  standardDaysTransit: valueToNumber(data?.standardDaysTransit),\r\n  trailerKey: valueToNumber(data?.trailerKey),\r\n  trailerDesc: valueToString(data?.trailerDesc),\r\n  createdBy: valueToNumber(data?.createdBy),\r\n  shipmentKey: valueToNumber(data?.shipmentKey),\r\n});\r\n\r\nexport const getShipmentOriginDestinationDetails = (stops) => {\r\n  stops = orderBy(stops, [\"displaySequence\"], [\"asc\"]);\r\n\r\n  return { origin: stops[0], destination: stops[stops.length - 1] };\r\n};\r\n\r\nexport const alignStopsByStopNo = (transportationList, index, paramName) => {\r\n  const seqParam = paramName ? paramName : \"displaySequence\";\r\n  const existIndexNo = findIndex(\r\n    transportationList,\r\n    (row, indexLocal) =>\r\n      Number(row?.[seqParam]) === transportationList?.[index]?.[seqParam] &&\r\n      indexLocal !== index\r\n  );\r\n\r\n  if (existIndexNo >= 0) {\r\n    transportationList = arrayMove(transportationList, index, existIndexNo);\r\n    transportationList = transportationList.map((row, index) => ({\r\n      ...row,\r\n      [seqParam]: index + 1,\r\n    }));\r\n    transportationList = orderBy(transportationList, [seqParam], [\"asc\"]);\r\n  }\r\n  return transportationList;\r\n};\r\n\r\nexport const generateStopsSequence = (stops, index) => {\r\n  stops = stops.map((row) => ({\r\n    ...row,\r\n    sequence: valueToNumber(row.sequence),\r\n  }));\r\n  if (stops[index].gridOperation == 1) {\r\n    // new stop\r\n    stops[index].sequence =\r\n      max(stops.map(({ sequence }) => (sequence ? sequence : 0))) + 1;\r\n  } else if (stops[index].gridOperation == 2) {\r\n    // modifying stop\r\n    const stopsByType = filter(stops, [\"stopType\", stops[index].stopType]);\r\n    const stopsBySequence = filter(stopsByType, [\r\n      \"sequence\",\r\n      stops[index].sequence,\r\n    ]);\r\n\r\n    if (stopsBySequence.length > 1) {\r\n      stops[index].sequence =\r\n        max(stopsByType.map(({ sequence }) => (sequence ? sequence : 0))) + 1;\r\n    }\r\n  } else if (stops[index].gridOperation == 3) {\r\n    // deleting stop\r\n  }\r\n  return stops;\r\n};\r\n\r\nexport const getShippingLabelPrintData = (shipmentDetails, customerKey) => {\r\n  const shipperInfo = shipmentDetails?.transportationList?.[0]\r\n    ? shipmentDetails?.transportationList?.[0]\r\n    : {};\r\n  const consigneeInfo =\r\n    shipmentDetails?.transportationList?.length > 0\r\n      ? shipmentDetails?.transportationList?.[\r\n          shipmentDetails?.transportationList?.length - 1\r\n        ]\r\n      : {};\r\n  const data = {\r\n    shipperName:\r\n      customerKey == 6027\r\n        ? \"CELEROS FLOW TECHNOLOGY (FLOW AMERICA LLC)\"\r\n        : shipperInfo?.name,\r\n    shipperAddress1:\r\n      customerKey == 6027 ? \"8800 WESTPAIN DR\" : shipperInfo?.address1,\r\n    shipperAddress2:\r\n      customerKey == 6027\r\n        ? \"HOUSTON, TX 77041\"\r\n        : `${shipperInfo?.city}, ${shipperInfo?.stateCode} ${shipperInfo?.zipCode}`,\r\n    shipperPhone: shipperInfo?.businessPhone,\r\n    consigneeName:\r\n      customerKey == 6027\r\n        ? \"CELEROS FLOW TECHNOLOGY (FLOW AMERICA LLC)\"\r\n        : consigneeInfo?.name,\r\n    consigneeAddress1:\r\n      customerKey == 6027 ? \"8800 WESTPAIN DR\" : consigneeInfo?.address1,\r\n    consigneeAddress2:\r\n      customerKey == 6027\r\n        ? \"HOUSTON, TX 77041\"\r\n        : `${consigneeInfo?.city}, ${consigneeInfo?.stateCode} ${consigneeInfo?.zipCode}`,\r\n    consigneePhone: consigneeInfo?.businessPhone,\r\n    carrierName: shipmentDetails?.carrierName,\r\n    bolNumber: shipmentDetails?.bolNumber,\r\n    proNo: shipmentDetails?.proNo,\r\n    purchaseOrderNumber: shipmentDetails?.purchaseOrderNumber,\r\n    salesOrderNumber: shipmentDetails?.salesOrderNumber,\r\n    serviceLevel: shipmentDetails?.serviceLevel,\r\n  };\r\n  return data;\r\n};\r\n","import React, { Fragment, useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"@react-pdf/renderer\";\r\nimport {\r\n  PDFPage,\r\n  PDFRow,\r\n  pdfStyles,\r\n  PDFTable,\r\n  PDFTableCell,\r\n  PDFTableRow,\r\n  PDFText,\r\n} from \"../../components/CommonPdfComponents\";\r\nimport { getShipmentOriginDestinationDetails } from \"../../../../../utilz/shipmentDataManupulation\";\r\nimport { convertToFloat } from \"../../../../../utilz/utilz\";\r\nimport { formateWithMoment } from \"../../../../../utilz/dates\";\r\nimport { sumBy } from \"lodash\";\r\n\r\nconst CMRPrintDocument = ({\r\n  shipmentDetails,\r\n  inputData,\r\n  productList = [],\r\n  productInputs,\r\n  documentList = [],\r\n  carrierData,\r\n}) => {\r\n  const { origin, destination } = useMemo(\r\n    () =>\r\n      getShipmentOriginDestinationDetails(shipmentDetails?.transportationList),\r\n    [shipmentDetails?.transportationList]\r\n  );\r\n  return (\r\n    <PDFPage\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      paddingHorizontal={0}\r\n      paddingVertical={1}\r\n    >\r\n      <View>\r\n        <View\r\n          style={{\r\n            ...pdfStyles.border,\r\n            marginLeft: 10,\r\n            marginRight: 1,\r\n          }}\r\n        >\r\n          <PDFRow style={{ ...styles.headerRow, ...pdfStyles.borderBottom }}>\r\n            <View></View>\r\n            <View>\r\n              <PDFText style={styles.title}>CMR</PDFText>\r\n            </View>\r\n            <View></View>\r\n          </PDFRow>\r\n          <PDFRow style={{ ...pdfStyles.borderBottom }}>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                ...pdfStyles.borderRight,\r\n                ...styles.cellPadding,\r\n              }}\r\n            >\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                1 Sender (Name, Address, Country)\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>{origin?.name}</PDFText>\r\n                <PDFText style={styles.tableCol}>{origin?.address1}</PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {origin?.city}, {origin?.stateCode} {origin?.zipCode}{\" \"}\r\n                  {origin?.countryCode}\r\n                </PDFText>\r\n              </View>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>VET auth. No:</PDFText>\r\n              </View>\r\n            </View>\r\n            <View style={{ flex: 1, ...styles.cellPadding }}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                INTERNATIONAL CONSIGNMENT NOTE\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  This carriage is subject, notwithstanding any clause to the\r\n                  contract for the Convention on the contract for the\r\n                  International Carriage of goods by road (CMR).\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n          </PDFRow>\r\n          <PDFRow style={{ ...pdfStyles.borderBottom }}>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                ...pdfStyles.borderRight,\r\n                ...styles.cellPadding,\r\n              }}\r\n            >\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                2 Consignee (Name, Address, Country)\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>{destination?.name}</PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.address1}\r\n                </PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.city}, {destination?.stateCode}{\" \"}\r\n                  {destination?.zipCode} {destination?.countryCode}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n            <View style={{ flex: 1, ...styles.cellPadding }}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                16 Carrier (Name, Address, Country)\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  {carrierData?.carrierName}\r\n                </PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {carrierData?.carrierAddress1}\r\n                </PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {carrierData?.carrierCity}, {carrierData?.carrierStateCode}{\" \"}\r\n                  {carrierData?.carrierZip} {carrierData?.carrierCountryName}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n          </PDFRow>\r\n          <PDFRow style={{ ...pdfStyles.borderBottom }}>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                ...pdfStyles.borderRight,\r\n                ...styles.cellPadding,\r\n              }}\r\n            >\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                3 Place of delivery of goods\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>{destination?.name}</PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.address1}\r\n                </PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.city}, {destination?.stateCode}{\" \"}\r\n                  {destination?.zipCode} {destination?.countryCode}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n            <View style={{ flex: 1, ...styles.cellPadding }}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                17 Successive carries (Name, Address, Country)\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  {inputData?.successiveCarriers}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n          </PDFRow>\r\n          <PDFRow style={{ ...pdfStyles.borderBottom }}>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                ...pdfStyles.borderRight,\r\n                ...styles.cellPadding,\r\n              }}\r\n            >\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                4 Place and date of taking over the goods\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>{origin?.name}</PDFText>\r\n                <PDFText style={styles.tableCol}>{origin?.address1}</PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {origin?.city}, {origin?.stateCode} {origin?.zipCode}{\" \"}\r\n                  {origin?.countryCode}\r\n                </PDFText>\r\n                <View style={{ marginVertical: 2 }}>\r\n                  <PDFText style={styles.tableCol}>\r\n                    Date:\r\n                    {formateWithMoment(origin?.requestedDate, \"MM-DD-yyyy\")}\r\n                  </PDFText>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={{ flex: 1, ...styles.cellPadding }}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                18 Carrier’s reservations and observations\r\n              </PDFText>\r\n              <View style={{ marginVertical: 2 }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  {inputData?.carriersReservations}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n          </PDFRow>\r\n          <View style={{ ...styles.cellPadding }}>\r\n            <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n              5 Annexed documents\r\n            </PDFText>\r\n            <View>\r\n              {documentList.map((file, key) => (\r\n                <PDFRow key={key} style={{ marginBottom: 2 }}>\r\n                  <View style={{ width: \"5%\" }}>\r\n                    <PDFText style={styles.tableCol}>{key + 1}</PDFText>\r\n                  </View>\r\n                  <View style={{ width: \"20%\" }}>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {file.fileDescription}\r\n                    </PDFText>\r\n                  </View>\r\n                  <View style={{ width: \"30%\" }}>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {file.referenceNo}\r\n                    </PDFText>\r\n                  </View>\r\n                  <View style={{}}>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {file.carrierName}\r\n                    </PDFText>\r\n                  </View>\r\n                </PDFRow>\r\n              ))}\r\n            </View>\r\n          </View>\r\n          <PDFTable style={{ ...pdfStyles.borderTop }}>\r\n            <PDFTableRow>\r\n              <PDFTableCell width=\"12%\">\r\n                <PDFText style={styles.tableHeader}>\r\n                  6 Marks and Numbers\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"12%\">\r\n                <PDFText style={styles.tableHeader}>\r\n                  7 Number of packages\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"12%\">\r\n                <PDFText style={styles.tableHeader}>\r\n                  8 Method of packing\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"30%\">\r\n                <PDFText style={styles.tableHeader}>\r\n                  9 Nature of the goods\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"12%\">\r\n                <PDFText style={styles.tableHeader}>\r\n                  10 Statistica l number\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"12%\">\r\n                <PDFText style={styles.tableHeader}>\r\n                  11 Gross weight in kg\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell borderRight={false} width=\"12%\">\r\n                <PDFText style={styles.tableHeader}>12 Volume in m3</PDFText>\r\n              </PDFTableCell>\r\n            </PDFTableRow>\r\n            {productList.map((product, key) => (\r\n              <PDFTableRow key={key}>\r\n                <PDFTableCell width=\"12%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {productInputs?.[key]?.marksAndNumbers}\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"12%\">\r\n                  <PDFText style={styles.tableCol}>{product?.billQty}</PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"12%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {product?.billQtyUomName}\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"30%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {product?.productDescription}\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"12%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {productInputs?.[key]?.statisticalNumber}\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"12%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {convertToFloat(\r\n                      String(product?.weightUom).trim().toUpperCase() === \"LB\"\r\n                        ? product?.weight * 0.45359237\r\n                        : product?.weight\r\n                    )}\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell borderRight={false} width=\"12%\">\r\n                  {/* <PDFText style={styles.tableCol}>{product?.cube}</PDFText> */}\r\n                </PDFTableCell>\r\n              </PDFTableRow>\r\n            ))}\r\n          </PDFTable>\r\n          <View style={{ ...pdfStyles.borderBottom, ...styles.cellPadding }}>\r\n            <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n              Delivery Note\r\n            </PDFText>\r\n            <View style={{ marginBottom: 2 }}>\r\n              <PDFText style={styles.tableCol}>\r\n                Total gross weight :{\" \"}\r\n                {convertToFloat(\r\n                  String(shipmentDetails?.weightUOM).trim().toUpperCase() ===\r\n                    \"LB\"\r\n                    ? shipmentDetails?.shipmentTotalWeight * 0.45359237\r\n                    : shipmentDetails?.shipmentTotalWeight\r\n                )}{\" \"}\r\n                kg\r\n              </PDFText>\r\n              <PDFText style={styles.tableCol}>\r\n                Total packages:{\" \"}\r\n                {sumBy(productList, ({ billQty }) => Number(billQty) || 0)}\r\n              </PDFText>\r\n              <PDFText style={styles.tableCol}>\r\n                Shipping Number: {shipmentDetails?.proNo}\r\n              </PDFText>\r\n            </View>\r\n          </View>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                ...pdfStyles.borderRight,\r\n                ...pdfStyles.borderBottom,\r\n              }}\r\n            >\r\n              <View\r\n                style={{ ...pdfStyles.borderBottom, ...styles.cellPadding }}\r\n              >\r\n                <PDFText style={styles.tableHeader}>\r\n                  13 Sender’s instructions (Customs and other formalities)\r\n                </PDFText>\r\n              </View>\r\n              <View style={{ ...styles.cellPadding }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  {inputData?.sendersInstructions}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n            <View style={{ flex: 1 }}>\r\n              <PDFTable>\r\n                <PDFTableRow>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>\r\n                      19 To be paid by:\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>Sender</PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>Currency</PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>Consignee</PDFText>\r\n                  </PDFTableCell>\r\n                </PDFTableRow>\r\n                <PDFTableRow>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>\r\n                      Carrier charges\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.carrierChargesSender}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.carrierChargesCurrency}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.carrierChargesConsignee}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                </PDFTableRow>\r\n                <PDFTableRow>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>\r\n                      Supplement charges\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.supplementChargesSender}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.supplementChargesCurrency}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.supplementChargesConsignee}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                </PDFTableRow>\r\n                <PDFTableRow>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>Other charges</PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.otherChargesSender}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.otherChargesCurrency}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.otherChargesConsignee}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                </PDFTableRow>\r\n                <PDFTableRow>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableHeader}>\r\n                      Total to be paid\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.totalChargesSender}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.totalChargesCurrency}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                  <PDFTableCell width=\"25%\">\r\n                    <PDFText style={styles.tableCol}>\r\n                      {inputData?.totalChargesConsignee}\r\n                    </PDFText>\r\n                  </PDFTableCell>\r\n                </PDFTableRow>\r\n              </PDFTable>\r\n            </View>\r\n          </PDFRow>\r\n          <View style={{ ...pdfStyles.borderBottom, ...styles.cellPadding }}>\r\n            <PDFText style={styles.tableHeader}>\r\n              14 Cash on delivery :{\" \"}\r\n              <PDFText style={styles.tableCol}>\r\n                {inputData?.cashOnDelivery}\r\n              </PDFText>\r\n            </PDFText>\r\n          </View>\r\n          <PDFRow style={pdfStyles.borderBottom}>\r\n            <View\r\n              style={{\r\n                ...styles.tableCol,\r\n                flex: 1,\r\n                ...pdfStyles.borderRight,\r\n                ...styles.cellPadding,\r\n              }}\r\n            >\r\n              <PDFText style={styles.tableHeader}>\r\n                15 Directions as to payment for carriage\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, marginVertical: 3 }}>\r\n                {inputData?.directionPayment}\r\n              </PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                ...styles.tableCol,\r\n                flex: 1,\r\n                ...styles.cellPadding,\r\n              }}\r\n            >\r\n              <PDFText style={styles.tableHeader}>\r\n                20 Special agreements\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, marginVertical: 2 }}>\r\n                {shipmentDetails?.shipmentNotes}\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, marginVertical: 2 }}>\r\n                {shipmentDetails?.detailNotes}\r\n              </PDFText>\r\n            </View>\r\n          </PDFRow>\r\n          <PDFRow>\r\n            <View style={{ width: \"70%\" }}>\r\n              <View style={styles.cellPadding}>\r\n                <PDFText style={styles.tableHeader}>\r\n                  21 Established in …. on ….\r\n                </PDFText>\r\n                <View style={{ marginVertical: 3 }}>\r\n                  <PDFText style={styles.tableCol}>\r\n                    Place: {origin.stateName}, {origin.countryName}\r\n                  </PDFText>\r\n                  <PDFText style={styles.tableCol}>\r\n                    Date:{\" \"}\r\n                    {formateWithMoment(origin?.requestedDate, \"MM-DD-yyyy\")}\r\n                  </PDFText>\r\n                </View>\r\n              </View>\r\n              <View style={pdfStyles.borderTop}>\r\n                <PDFRow>\r\n                  <View\r\n                    style={{ height: 60, flex: 1, ...pdfStyles.borderRight }}\r\n                  >\r\n                    <PDFRow\r\n                      style={{ height: \"100%\" }}\r\n                      direction={\"column\"}\r\n                      justify=\"space-between\"\r\n                    >\r\n                      <PDFText\r\n                        style={{ ...styles.tableHeader, ...styles.cellPadding }}\r\n                      >\r\n                        22\r\n                      </PDFText>\r\n                      <PDFText\r\n                        style={{ ...styles.tableHeader, ...styles.cellPadding }}\r\n                      >\r\n                        Signature and stamp of the sender\r\n                      </PDFText>\r\n                    </PDFRow>\r\n                  </View>\r\n                  <View style={{ height: 60, flex: 1 }}>\r\n                    <PDFRow\r\n                      style={{ height: \"100%\" }}\r\n                      direction={\"column\"}\r\n                      justify=\"space-between\"\r\n                    >\r\n                      <PDFText\r\n                        style={{ ...styles.tableHeader, ...styles.cellPadding }}\r\n                      >\r\n                        23\r\n                      </PDFText>\r\n                      <PDFText\r\n                        style={{ ...styles.tableHeader, ...styles.cellPadding }}\r\n                      >\r\n                        Signature and stamp of the carrier\r\n                      </PDFText>\r\n                    </PDFRow>\r\n                  </View>\r\n                </PDFRow>\r\n              </View>\r\n            </View>\r\n            <View style={{ width: \"30%\", ...pdfStyles.borderLeft }}>\r\n              <View style={{ height: 60, flex: 1 }}>\r\n                <PDFRow\r\n                  style={{ height: \"100%\" }}\r\n                  direction={\"column\"}\r\n                  justify=\"space-between\"\r\n                >\r\n                  <PDFRow justify=\"space-between\">\r\n                    <View style={styles.cellPadding}>\r\n                      <PDFText style={styles.tableHeader}>\r\n                        24 Goods received\r\n                      </PDFText>\r\n                      <PDFText\r\n                        style={{\r\n                          ...styles.tableCol,\r\n                        }}\r\n                      >\r\n                        {inputData?.goodReceived}\r\n                      </PDFText>\r\n                    </View>\r\n                    <View style={styles.cellPadding}>\r\n                      <PDFText style={styles.tableHeader}>25 Date</PDFText>\r\n                      <PDFText\r\n                        style={{\r\n                          ...styles.tableCol,\r\n                        }}\r\n                      >\r\n                        {formateWithMoment(origin?.actualDate, \"MM-DD-yyyy\")}\r\n                      </PDFText>\r\n                    </View>\r\n                  </PDFRow>\r\n                  <PDFText\r\n                    style={{ ...styles.tableHeader, ...styles.cellPadding }}\r\n                  >\r\n                    Signature and stamp of the consignee\r\n                  </PDFText>\r\n                </PDFRow>\r\n              </View>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View\r\n          style={{\r\n            ...styles.tableCol,\r\n            // transform: \"rotate(270deg) translateX(5%)\",\r\n            transform: \"rotate(270deg)\",\r\n            transformOrigin: \"left\",\r\n            position: \"absolute\",\r\n            left: 5,\r\n            bottom: -6,\r\n          }}\r\n          fixed={true}\r\n          render={({ pageNumber }) => {\r\n            if (pageNumber === 1) {\r\n              return (\r\n                <PDFText style={{ fontSize: 9 }}>\r\n                  To be completed on the sender´s responsibility\r\n                </PDFText>\r\n              );\r\n            }\r\n            return <Fragment></Fragment>;\r\n          }}\r\n        />\r\n\r\n        <View\r\n          style={{\r\n            ...styles.tableCol,\r\n            // transform: \"rotate(270deg) translateX(5%)\",\r\n            transform: \"rotate(270deg)\",\r\n            transformOrigin: \"left\",\r\n            position: \"absolute\",\r\n            left: 5,\r\n            bottom: \"45%\",\r\n          }}\r\n          fixed={true}\r\n          render={({ pageNumber }) => {\r\n            if (pageNumber === 1) {\r\n              return (\r\n                <PDFText style={{ fontSize: 9 }}>\r\n                  framed with heavy lines must be filled in by the carrier.\r\n                </PDFText>\r\n              );\r\n            }\r\n            return <Fragment></Fragment>;\r\n          }}\r\n        />\r\n      </View>\r\n    </PDFPage>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {},\r\n  title: { fontSize: 16, fontWeight: \"700\", marginBottom: 2 },\r\n  headerRow: {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  section: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 3,\r\n  },\r\n  imageSection: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  image: {\r\n    width: \"60%\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: 8,\r\n    paddingBottom: 1,\r\n  },\r\n  tableCol: {\r\n    fontSize: 7,\r\n  },\r\n  cellPadding: {\r\n    paddingHorizontal: 6,\r\n    paddingVertical: 2,\r\n  },\r\n});\r\n\r\nexport default CMRPrintDocument;\r\n","import React from \"react\";\r\nimport CMRPrintDocument from \"../../CMRPrintDocument\";\r\nimport { Document } from \"@react-pdf/renderer\";\r\n\r\nconst PDF = ({\r\n  shipmentDetails,\r\n  inputData,\r\n  productList,\r\n  documentList,\r\n  carrierData,\r\n  productInputs,\r\n}) => {\r\n  return (\r\n    <Document>\r\n      <CMRPrintDocument\r\n        shipmentDetails={shipmentDetails}\r\n        inputData={inputData}\r\n        productList={productList}\r\n        documentList={documentList}\r\n        carrierData={carrierData}\r\n        productInputs={productInputs}\r\n      />\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PDF;\r\n","import { pdf } from \"@react-pdf/renderer\";\r\nimport PDF from \"./PDF\";\r\n\r\nconst generateCMRPDF = async (props) => {\r\n  console.log(\"started CMR\");\r\n  const data = JSON.parse(props);\r\n  const result = await pdf(<PDF {...data} />).toBlob();\r\n  console.log(\"ended CMR\");\r\n  return result;\r\n};\r\n\r\nexport default generateCMRPDF;\r\n","import { View } from \"@react-pdf/renderer\";\nimport { sumBy } from \"lodash\";\nimport React, { Fragment, useMemo } from \"react\";\nimport { formateWithMoment } from \"../../../../../utilz/dates\";\nimport {\n  convertToFloat,\n  stringIsNullOrEmpty,\n  valueToNumber,\n} from \"../../../../../utilz/utilz\";\nimport {\n  PDFDarkHeader,\n  PDFPage,\n  PDFRow,\n  pdfStyles,\n  PDFTable,\n  PDFTableCell,\n  PDFTableRow,\n  PDFText,\n} from \"../../components/CommonPdfComponents\";\nimport { useTranslation } from \"react-i18next\";\n\nconst CIPrintDocument = ({ ciData: { translations, ...ciData } }) => {\n  const { t } = useTranslation();\n  const invoiceLineTotal = convertToFloat(\n    sumBy(ciData?.products, ({ totalAmount }) => valueToNumber(totalAmount))\n  );\n  return (\n    <PDFPage paddingHorizontal={5} paddingVertical={10}>\n      <View style={{ ...pdfStyles.border, borderTop: \"none\" }}>\n        <View\n          fixed\n          style={{\n            ...pdfStyles.header,\n            ...pdfStyles.borderBottom,\n            ...pdfStyles.borderTop,\n          }}\n        >\n          <PDFRow style={pdfStyles.headerRow}>\n            <View>\n              <PDFText>\n                {translations?.date}: {formateWithMoment(ciData?.shipDate)}\n              </PDFText>\n            </View>\n            <View>\n              <PDFText style={pdfStyles.title}>\n                {translations?.commercialInvoice}\n              </PDFText>\n            </View>\n            <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}>\n              {translations?.ciNo} {ciData?.commercialInvoiceNo}\n            </PDFText>\n          </PDFRow>\n        </View>\n        <PDFTable>\n          <PDFTableRow>\n            <PDFTableCell\n              style={{ padding: 0 }}\n              width=\"51%\"\n              borderRight={false}\n            >\n              <PDFDarkHeader isFirst={true}>\n                {translations?.shipFrom}\n              </PDFDarkHeader>\n              <View style={{ paddingVertical: 8, paddingHorizontal: 6 }}>\n                <PDFText\n                  style={{\n                    ...pdfStyles.tableHeader,\n                    textAlign: \"left\",\n                    fontSize: 12,\n                  }}\n                >\n                  {translations?.export} {translations?.identificationNumber}{\" \"}\n                  {ciData?.shipperEIN}\n                </PDFText>\n                <PDFText style={{ ...pdfStyles.tableColumn, marginTop: 5 }}>\n                  {ciData?.shipperName}\n                  {\"\\n\"}\n                  {ciData?.shipperAddress}\n                  {\"\\n\"}\n                  {ciData?.shipperCountryCode}\n                  {\"\\n\"}\n                  {!stringIsNullOrEmpty(ciData?.shipperState) &&\n                    ciData?.shipperState !== \"NS\" && (\n                      <>\n                        {ciData?.shipperState}\n                        {\"\\n\"}\n                      </>\n                    )}\n                  {ciData?.shipperZip}, {ciData?.shipperCity}\n                </PDFText>\n              </View>\n              <PDFDarkHeader>SHIP TO</PDFDarkHeader>\n              <View style={{ paddingVertical: 8, paddingHorizontal: 6 }}>\n                <PDFText\n                  style={{\n                    ...pdfStyles.tableHeader,\n                    textAlign: \"left\",\n                    fontSize: 12,\n                  }}\n                >\n                  {translations?.export} {translations?.identificationNumber}{\" \"}\n                  {ciData?.consigneeEIN}\n                </PDFText>\n                <PDFText style={{ ...pdfStyles.tableColumn, marginTop: 5 }}>\n                  {ciData?.consigneeName}\n                  {\"\\n\"}\n                  {ciData?.consigneeAddress}\n                  {\"\\n\"}\n                  {ciData?.consigneeCountryCode}\n                  {\"\\n\"}\n                  {!stringIsNullOrEmpty(ciData?.consigneeState) &&\n                    ciData?.consigneeState !== \"NS\" && (\n                      <>\n                        {ciData?.consigneeState}\n                        {\"\\n\"}\n                      </>\n                    )}\n                  {ciData?.consigneeZip}, {ciData?.consigneeCity}\n                </PDFText>\n              </View>\n            </PDFTableCell>\n            <PDFTableCell\n              width=\"51%\"\n              borderRight={false}\n              style={{ padding: 0 }}\n            >\n              <View style={{ padding: 10, paddingBottom: 25 }}>\n                <PDFRow style={{ marginBottom: 30 }}>\n                  <View style={{ flex: 1 }}>\n                    <PDFText\n                      style={{ ...pdfStyles.tableHeader, textAlign: \"left\" }}\n                    >\n                      {translations?.referenceNo}:\n                    </PDFText>\n                    <PDFText style={pdfStyles.tableColumn}>\n                      {ciData?.ciRefNo}\n                    </PDFText>\n                  </View>\n                  <View style={{ flex: 1 }}>\n                    <PDFText\n                      style={{ ...pdfStyles.tableHeader, textAlign: \"left\" }}\n                    >\n                      {translations?.customRelease}\n                    </PDFText>\n                    <PDFText style={pdfStyles.tableColumn}>\n                      {ciData?.releaseReferenceNo}\n                    </PDFText>\n                  </View>\n                </PDFRow>\n                <PDFRow>\n                  <View style={{ flex: 1 }}>\n                    <PDFText\n                      style={{ ...pdfStyles.tableHeader, textAlign: \"left\" }}\n                    >\n                      {translations?.referenceDate}\n                    </PDFText>\n                    <PDFText style={pdfStyles.tableColumn}>\n                      {formateWithMoment(ciData?.ciRefNoDate)}\n                    </PDFText>\n                  </View>\n                  <View style={{ flex: 1 }}>\n                    <PDFText\n                      style={{ ...pdfStyles.tableHeader, textAlign: \"left\" }}\n                    >\n                      {translations?.releaseDate}\n                    </PDFText>\n                    <PDFText style={pdfStyles.tableColumn}>\n                      {formateWithMoment(ciData?.releaseReferenceNoDate)}\n                    </PDFText>\n                  </View>\n                </PDFRow>\n              </View>\n              <PDFDarkHeader>{translations?.soldTo}</PDFDarkHeader>\n              <View style={{ paddingVertical: 8, paddingHorizontal: 6 }}>\n                <PDFText\n                  style={{\n                    ...pdfStyles.tableHeader,\n                    textAlign: \"left\",\n                    fontSize: 12,\n                  }}\n                >\n                  {translations?.export} {translations?.identificationNumber}{\" \"}\n                  {ciData?.consigneeEIN}\n                </PDFText>\n                <PDFText style={{ ...pdfStyles.tableColumn, marginTop: 5 }}>\n                  {!stringIsNullOrEmpty(ciData?.saiName) &&\n                  !stringIsNullOrEmpty(ciData?.saiAddress) ? (\n                    <>\n                      {ciData?.saiName}\n                      {\"\\n\"}\n                      {ciData?.saiAddress}\n                      {\"\\n\"}\n                      {ciData?.saiCountryCode}\n                      {\"\\n\"}\n                      {!stringIsNullOrEmpty(ciData?.saiState) &&\n                        ciData?.saiState !== \"NS\" && (\n                          <>\n                            {ciData?.saiState}\n                            {\"\\n\"}\n                          </>\n                        )}\n                      {ciData?.saiZip}, {ciData?.saiCity}\n                    </>\n                  ) : (\n                    <>\n                      {ciData?.consigneeName}\n                      {\"\\n\"}\n                      {ciData?.consigneeAddress}\n                      {\"\\n\"}\n                      {ciData?.consigneeCountryCode}\n                      {\"\\n\"}\n                      {!stringIsNullOrEmpty(ciData?.consigneeState) &&\n                        ciData?.consigneeState !== \"NS\" && (\n                          <>\n                            {ciData?.consigneeState}\n                            {\"\\n\"}\n                          </>\n                        )}\n                      {ciData?.consigneeZip}, {ciData?.consigneeCity}\n                    </>\n                  )}\n                </PDFText>\n              </View>\n            </PDFTableCell>\n          </PDFTableRow>\n          <PDFTableRow>\n            <PDFTableCell borderLeft={false} width=\"11%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.productCode}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"16%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.productDesc}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"9%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.htsCode}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"7%\">\n              <PDFText style={pdfStyles.tableHeader}>ECCN</PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"5%\">\n              <PDFText style={pdfStyles.tableHeader}>COO</PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"7%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.license}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"8%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.quantity}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"13%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.quantityUOM}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"10%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.unitPrice}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"12%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.totalAmount}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"8%\" borderRight={false}>\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.currency}\n              </PDFText>\n            </PDFTableCell>\n          </PDFTableRow>\n          {ciData?.products?.map((row, key) => (\n            <PDFTableRow key={key}>\n              <PDFTableCell borderLeft={false} width=\"11%\">\n                <PDFText style={pdfStyles.tableCol}>{row.productCode}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"16%\">\n                <PDFText style={pdfStyles.tableCol}>\n                  {row.productDescription}\n                </PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"9%\">\n                <PDFText style={pdfStyles.tableCol}>{row.hts}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"7%\">\n                <PDFText style={pdfStyles.tableCol}>{row.eccn}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"5%\">\n                <PDFText style={pdfStyles.tableCol}>\n                  {row.countryOfOrigin}\n                </PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"7%\">\n                <PDFText style={pdfStyles.tableCol}>{row.license}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"8%\">\n                <PDFText style={pdfStyles.tableCol}>{row.quantity}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"13%\">\n                <PDFText style={pdfStyles.tableCol}>{row.unitMeasure}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"10%\">\n                <PDFText style={pdfStyles.tableCol}>{row.unitPrice}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"12%\">\n                <PDFText style={pdfStyles.tableCol}>{row.totalAmount}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"8%\" borderRight={false}>\n                <PDFText style={pdfStyles.tableCol}>\n                  {ciData?.currencyCode}\n                </PDFText>\n              </PDFTableCell>\n            </PDFTableRow>\n          ))}\n          <PDFTableRow>\n            <PDFTableCell width=\"101%\" borderRight={false} borderLeft={false}>\n              <PDFRow justify=\"flex-end\">\n                <View style={{ paddingVertical: 10, paddingHorizontal: 30 }}>\n                  <PDFRow>\n                    <View>\n                      <PDFText style={pdfStyles.tableHeader}>\n                        {translations?.invoiceLine}\n                      </PDFText>\n                    </View>\n                    <View style={{ marginLeft: 10 }}>\n                      <PDFText style={pdfStyles.tableCol}>\n                        {invoiceLineTotal} {ciData?.currencyCode}\n                      </PDFText>\n                    </View>\n                  </PDFRow>\n                  <PDFRow>\n                    <View>\n                      <PDFText style={pdfStyles.tableHeader}>\n                        {translations?.insurance}\n                      </PDFText>\n                    </View>\n                    <View style={{ marginLeft: 10 }}>\n                      <PDFText style={pdfStyles.tableCol}>\n                        {convertToFloat(ciData?.insurance)}{\" \"}\n                        {ciData?.currencyCode}\n                      </PDFText>\n                    </View>\n                  </PDFRow>\n                  <PDFRow>\n                    <View>\n                      <PDFText style={pdfStyles.tableHeader}>\n                        {translations?.freight}\n                      </PDFText>\n                    </View>\n                    <View style={{ marginLeft: 10 }}>\n                      <PDFText style={pdfStyles.tableCol}>\n                        {convertToFloat(ciData?.rateShopCost)}{\" \"}\n                        {ciData?.currencyCode}\n                      </PDFText>\n                    </View>\n                  </PDFRow>\n                  <PDFRow>\n                    <View>\n                      <PDFText style={pdfStyles.tableHeader}>\n                        {translations?.totalInvoice}\n                      </PDFText>\n                    </View>\n                    <View style={{ marginLeft: 10 }}>\n                      <PDFText style={pdfStyles.tableCol}>\n                        {convertToFloat(\n                          valueToNumber(invoiceLineTotal) +\n                            valueToNumber(ciData?.insurance) +\n                            valueToNumber(ciData?.rateShopCost)\n                        )}{\" \"}\n                        {ciData?.currencyCode}\n                      </PDFText>\n                    </View>\n                  </PDFRow>\n                </View>\n              </PDFRow>\n            </PDFTableCell>\n          </PDFTableRow>\n          <PDFTableRow>\n            <PDFTableCell\n              width=\"103%\"\n              borderRight={false}\n              borderLeft={false}\n              borderBottom={false}\n              borderTop={false}\n            >\n              <PDFText\n                style={{\n                  ...pdfStyles.tableHeader,\n                  textAlign: \"left\",\n                  paddingVertical: 20,\n                  paddingHorizontal: 2,\n                }}\n              >\n                {translations?.legalText}\n              </PDFText>\n            </PDFTableCell>\n          </PDFTableRow>\n        </PDFTable>\n      </View>\n      <PDFRow justify=\"center\" fixed>\n        <View style={{ display: \"flex\", flexDirection: \"row\", marginTop: 5 }}>\n          <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}>\n            {translations?.page}\n          </PDFText>\n          <PDFText\n            style={{ fontSize: 10, fontWeight: \"700\" }}\n            fixed\n            render={({ pageNumber }) => {\n              return pageNumber;\n            }}\n          />\n          <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}> of </PDFText>\n          <PDFText\n            style={{ fontSize: 10, fontWeight: \"700\" }}\n            fixed\n            render={({ totalPages }) => {\n              return totalPages;\n            }}\n          />\n        </View>\n      </PDFRow>\n    </PDFPage>\n  );\n};\n\nexport default CIPrintDocument;\n","import React from \"react\";\r\nimport { Document } from \"@react-pdf/renderer\";\r\nimport CIPrintDocument from \"../../CIPrintDocument\";\r\n\r\nconst PDF = ({ ciData }) => {\r\n  return (\r\n    <Document>\r\n      <CIPrintDocument ciData={ciData} />\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PDF;\r\n","import { pdf } from \"@react-pdf/renderer\";\r\nimport PDF from \"./PDF\";\r\n\r\nconst generateCIPDF = async (props) => {\r\n  console.log(\"started CI\");\r\n  const data = JSON.parse(props);\r\n  console.log(\"props\", data);\r\n  const result = await pdf(<PDF ciData={data} />).toBlob();\r\n  console.log(\"ended CI\");\r\n  return result;\r\n};\r\n\r\nexport default generateCIPDF;\r\n","import { View } from \"@react-pdf/renderer\";\nimport { sumBy, uniq } from \"lodash\";\nimport React, { Fragment, useMemo } from \"react\";\nimport { formateWithMoment } from \"../../../../../utilz/dates\";\nimport {\n  convertToFloat,\n  stringIsNullOrEmpty,\n  valueToNumber,\n} from \"../../../../../utilz/utilz\";\nimport {\n  PDFDarkHeader,\n  PDFPage,\n  PDFRow,\n  pdfStyles,\n  PDFTable,\n  PDFTableCell,\n  PDFTableRow,\n  PDFText,\n} from \"../../components/CommonPdfComponents\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PLPrintDocument = ({ plData: { translations, ...plData } }) => {\n  const { t } = useTranslation();\n\n  return (\n    <PDFPage paddingHorizontal={5} paddingVertical={10}>\n      <View style={{ ...pdfStyles.border, borderTop: \"none\" }}>\n        <View\n          fixed\n          style={{\n            ...pdfStyles.header,\n            ...pdfStyles.borderBottom,\n            ...pdfStyles.borderTop,\n          }}\n        >\n          <PDFRow style={pdfStyles.headerRow}>\n            <View>\n              <PDFText>\n                {translations?.date}: {formateWithMoment(plData?.shipdate)}\n              </PDFText>\n            </View>\n            <View>\n              <PDFText style={pdfStyles.title}>\n                {translations?.packingList}\n              </PDFText>\n            </View>\n            <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}>\n              {translations?.plNo} : {plData?.shipmentNo}\n            </PDFText>\n          </PDFRow>\n        </View>\n        <PDFTable>\n          <PDFTableRow>\n            <PDFTableCell\n              style={{ padding: 0, flex: 1 }}\n              justify={\"flex-start\"}\n              borderRight={false}\n            >\n              <PDFDarkHeader isFirst={true}>\n                {translations?.shipFrom}\n              </PDFDarkHeader>\n              <View style={{ paddingVertical: 12, paddingHorizontal: 6 }}>\n                <PDFText style={{ ...pdfStyles.tableColumn }}>\n                  {plData?.shipperName}\n                  {\"\\n\"}\n                  {plData?.shipperAddress}\n                  {\"\\n\"}\n                  {plData?.shipperCountryCode}\n                  {\"\\n\"}\n                  {!stringIsNullOrEmpty(plData?.shipperState) &&\n                    plData?.shipperState !== \"NS\" && (\n                      <>\n                        {plData?.shipperState}\n                        {\"\\n\"}\n                      </>\n                    )}\n                  {plData?.shipperZip}, {plData?.shipperCity}\n                </PDFText>\n              </View>\n            </PDFTableCell>\n            <PDFTableCell\n              style={{\n                padding: 0,\n                flex: 1,\n              }}\n              justify={\"flex-start\"}\n              borderRight={false}\n            >\n              <PDFDarkHeader isFirst={true}>\n                {translations?.billTo}\n              </PDFDarkHeader>\n              <View style={{ paddingVertical: 12, paddingHorizontal: 6 }}>\n                <PDFText style={{ ...pdfStyles.tableColumn }}>\n                  {!stringIsNullOrEmpty(plData?.billToName) &&\n                  !stringIsNullOrEmpty(plData?.billToCountryCode) ? (\n                    <>\n                      {plData?.billToName}\n                      {\"\\n\"}\n                      {plData?.billToAddress}\n                      {\"\\n\"}\n                      {plData?.billToCountryCode}\n                      {\"\\n\"}\n                      {!stringIsNullOrEmpty(plData?.billToState) &&\n                        plData?.billToState !== \"NS\" && (\n                          <>\n                            {plData?.billToState}\n                            {\"\\n\"}\n                          </>\n                        )}\n                      {plData?.billToZip}, {plData?.billToCity}\n                    </>\n                  ) : (\n                    <>\n                      {plData?.consigneeName}\n                      {\"\\n\"}\n                      {plData?.consigneeAddress}\n                      {\"\\n\"}\n                      {plData?.consigneeCountryCode}\n                      {\"\\n\"}\n                      {!stringIsNullOrEmpty(plData?.consigneeState) &&\n                        plData?.consigneeState !== \"NS\" && (\n                          <>\n                            {plData?.consigneeState}\n                            {\"\\n\"}\n                          </>\n                        )}\n                      {plData?.consigneeZip}, {plData?.consigneeCity}\n                    </>\n                  )}\n                </PDFText>\n              </View>\n            </PDFTableCell>\n            <PDFTableCell\n              style={{ padding: 0, flex: 1 }}\n              justify={\"flex-start\"}\n              borderRight={false}\n            >\n              <PDFDarkHeader isFirst={true}>\n                {translations?.vendorAdress}\n              </PDFDarkHeader>\n              <View style={{ paddingVertical: 12, paddingHorizontal: 6 }}>\n                <PDFText style={{ ...pdfStyles.tableColumn }}>\n                  {plData?.vendorName}\n                  {\"\\n\"}\n                  {plData?.vendorAddress}\n                  {\"\\n\"}\n                  {plData?.vendorCountryCode}\n                  {\"\\n\"}\n                  {!stringIsNullOrEmpty(plData?.vendorState) &&\n                    plData?.vendorState !== \"NS\" && (\n                      <>\n                        {plData?.vendorState}\n                        {\"\\n\"}\n                      </>\n                    )}\n                  {plData?.vendorZip}, {plData?.vendorCity}\n                </PDFText>\n              </View>\n            </PDFTableCell>\n          </PDFTableRow>\n          <PDFTableRow>\n            <PDFTableCell width=\"10%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.poNumber}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"8%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.lineNo}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"8%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.productCode}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"14%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.productDesc}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"7%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.packageID}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"8%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.packageQty}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"8%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.totalWeight}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"10%\">\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.totalItemQty}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell width=\"22%\" style={{ padding: 0 }}>\n              <View style={{ borderBottom: \"1px solid black\" }}>\n                <PDFText style={{ ...pdfStyles.tableHeader, paddingBottom: 2 }}>\n                  {translations?.packageDimensions}\n                </PDFText>\n              </View>\n              <PDFTableRow>\n                <PDFTableCell width=\"32.85%\" borderBottom={false}>\n                  <PDFText style={pdfStyles.tableHeader}> L</PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"33.55%\" borderBottom={false}>\n                  <PDFText style={pdfStyles.tableHeader}>W</PDFText>\n                </PDFTableCell>\n                <PDFTableCell\n                  width=\"33.38%\"\n                  borderBottom={false}\n                  borderRight={false}\n                >\n                  <PDFText style={pdfStyles.tableHeader}>H</PDFText>\n                </PDFTableCell>\n              </PDFTableRow>\n            </PDFTableCell>\n            <PDFTableCell width=\"7%\" borderRight={false}>\n              <PDFText style={pdfStyles.tableHeader}>\n                {translations?.cube}\n              </PDFText>\n            </PDFTableCell>\n          </PDFTableRow>\n          {plData?.products?.map((row, key) => (\n            <PDFTableRow key={key}>\n              <PDFTableCell width=\"10%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>{row.poNumber}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"8%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>{row.lineNos}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"8%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>{row.productCode}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"14%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>\n                  {row.productDescription}\n                </PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"7%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>{row.packageId}</PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"8%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>\n                  {convertToFloat(row.billQty)} {row.billQtyUOMDesc}\n                </PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"8%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>\n                  {convertToFloat(row.weight)} {row.weightUOM}\n                </PDFText>\n              </PDFTableCell>\n              <PDFTableCell width=\"10%\" borderLeft={false}>\n                <PDFText style={pdfStyles.tableCol}>\n                  {convertToFloat(row.quantity)} {row.unitMeasure}\n                </PDFText>\n              </PDFTableCell>\n              <PDFTableCell\n                style={{ padding: 0 }}\n                width=\"22%\"\n                borderLeft={false}\n              >\n                <PDFTableRow style={{ flex: 1 }}>\n                  <PDFTableCell\n                    width=\"33.34%\"\n                    borderBottom={false}\n                    borderLeft={false}\n                  >\n                    <PDFText style={pdfStyles.tableCol}>\n                      {convertToFloat(row.length)} {row.dimUOM}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell width=\"33.34%\" borderBottom={false}>\n                    <PDFText style={pdfStyles.tableCol}>\n                      {convertToFloat(row.width)} {row.dimUOM}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell\n                    width=\"33.34%\"\n                    borderBottom={false}\n                    borderRight={false}\n                  >\n                    <PDFText style={pdfStyles.tableCol}>\n                      {convertToFloat(row.height)} {row.dimUOM}\n                    </PDFText>\n                  </PDFTableCell>\n                </PDFTableRow>\n              </PDFTableCell>\n              <PDFTableCell width=\"7%\" borderLeft={false} borderRight={false}>\n                <PDFText style={pdfStyles.tableCol}>\n                  {convertToFloat(row.cube)} {row.dimUOMDesc}\n                </PDFText>\n              </PDFTableCell>\n            </PDFTableRow>\n          ))}\n\n          <PDFTableRow>\n            <PDFTableCell\n              borderBottom={false}\n              width=\"46.5%\"\n              borderRight={true}\n              borderLeft={false}\n            >\n              <PDFText style={{ ...pdfStyles.tableHeader, textAlign: \"right\" }}>\n                {translations?.total}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell borderBottom={false} width=\"8%\">\n              <PDFText style={pdfStyles.tableCol}>\n                {convertToFloat(\n                  sumBy(plData?.products, ({ billQty }) =>\n                    valueToNumber(billQty)\n                  )\n                )}{\" \"}\n                {uniq(\n                  plData?.products.map(({ billQtyUOMDesc }) => billQtyUOMDesc)\n                ).join(\", \")}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell borderBottom={false} width=\"8%\">\n              <PDFText style={pdfStyles.tableCol}>\n                {convertToFloat(\n                  sumBy(plData?.products, ({ weight }) => valueToNumber(weight))\n                )}{\" \"}\n                {uniq(plData?.products.map(({ weightUOM }) => weightUOM)).join(\n                  \", \"\n                )}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell borderBottom={false} width=\"32%\">\n              <PDFText style={pdfStyles.tableCol}>\n                {convertToFloat(\n                  sumBy(plData?.products, ({ quantity }) =>\n                    valueToNumber(quantity)\n                  )\n                )}{\" \"}\n                {uniq(\n                  plData?.products.map(({ unitMeasure }) => unitMeasure)\n                ).join(\", \")}\n              </PDFText>\n            </PDFTableCell>\n            <PDFTableCell borderBottom={false} width=\"7%\" borderRight={false}>\n              <PDFText style={pdfStyles.tableCol}>\n                {convertToFloat(\n                  sumBy(plData?.products, ({ cube }) => valueToNumber(cube))\n                )}{\" \"}\n                {uniq(\n                  plData?.products.map(({ dimUOMDesc }) => dimUOMDesc)\n                ).join(\", \")}\n              </PDFText>\n            </PDFTableCell>\n          </PDFTableRow>\n        </PDFTable>\n      </View>\n      <PDFRow justify=\"center\" fixed>\n        <View style={{ display: \"flex\", flexDirection: \"row\", marginTop: 5 }}>\n          <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}>\n            {translations?.page}{\" \"}\n          </PDFText>\n          <PDFText\n            style={{ fontSize: 10, fontWeight: \"700\" }}\n            fixed\n            render={({ pageNumber }) => {\n              return pageNumber;\n            }}\n          />\n          <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}> of </PDFText>\n          <PDFText\n            style={{ fontSize: 10, fontWeight: \"700\" }}\n            fixed\n            render={({ totalPages }) => {\n              return totalPages;\n            }}\n          />\n        </View>\n      </PDFRow>\n    </PDFPage>\n  );\n};\n\nexport default PLPrintDocument;\n","import React from \"react\";\r\nimport { Document } from \"@react-pdf/renderer\";\r\nimport PLPrintDocument from \"../../PLPrintDocument\";\r\n\r\nconst PDF = ({ plData }) => {\r\n  return (\r\n    <Document>\r\n      <PLPrintDocument plData={plData} />\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PDF;\r\n","import { pdf } from \"@react-pdf/renderer\";\r\nimport PDF from \"./PDF\";\r\n\r\nconst generatePLPDF = async (props) => {\r\n  console.log(\"started PL\");\r\n  const data = JSON.parse(props);\r\n  console.log(\"props\", data);\r\n  const result = await pdf(<PDF plData={data} />).toBlob();\r\n  console.log(\"ended PL\");\r\n  return result;\r\n};\r\n\r\nexport default generatePLPDF;\r\n","import { Image, StyleSheet, View } from \"@react-pdf/renderer\";\nimport { sumBy, uniq } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport { formateWithMoment } from \"../../../../../utilz/dates\";\n\nimport { convertToFloat } from \"../../../../../utilz/utilz\";\nimport {\n  PDFCheckBox,\n  PDFDarkHeader,\n  PDFDivider,\n  PdfGetTextUnderline,\n  PDFPage,\n  PDFRow,\n  pdfStyles,\n  PDFTable,\n  PDFTableCell,\n  PDFTableRow,\n  PDFText,\n} from \"../../components/CommonPdfComponents\";\nimport PDFCheckBoxImg from \"../../components/PDFCheckBoxImg\";\n\nconst BolPrintDocument = ({\n  bolData,\n  inputData,\n  barCodeImage,\n  translations,\n  freightChargeTerms,\n  thirdPartyShipmentData,\n}) => {\n  return (\n    <PDFPage>\n      <View style={{ ...pdfStyles.border, borderTop: \"none\" }}>\n        <View\n          fixed\n          style={{\n            ...styles.header,\n            ...pdfStyles.borderBottom,\n            ...pdfStyles.borderTop,\n          }}\n        >\n          <PDFRow style={styles.headerRow}>\n            <View>\n              <PDFText>\n                {translations?.date}: {formateWithMoment(bolData?.shipmentDate)}\n              </PDFText>\n            </View>\n            <View>\n              <PDFText style={styles.title}>\n                {translations?.billOfLanding}\n              </PDFText>\n            </View>\n            <PDFText\n              style={{ fontSize: 10, fontWeight: \"700\" }}\n              fixed\n              render={({ pageNumber }) => {\n                if (pageNumber > 1) {\n                  return `${translations?.bolNo} : ${inputData?.bolNo}`;\n                }\n                return <Fragment></Fragment>;\n              }}\n            />\n          </PDFRow>\n        </View>\n\n        <View>\n          <PDFRow>\n            <View\n              style={{\n                ...{ height: \"100%\", width: \"50%\" },\n                ...pdfStyles.borderRight,\n              }}\n            >\n              <PDFDarkHeader isFirst={true}>\n                {translations?.shipFrom}\n              </PDFDarkHeader>\n              <View style={styles.section}>\n                <PDFText>\n                  {translations?.name}: {bolData?.shipperName}\n                </PDFText>\n                <PDFText>\n                  {translations?.address}: {bolData?.shipperAddress}\n                </PDFText>\n                <PDFText>\n                  {translations?.countryCityStateZip}{\" \"}\n                  {bolData?.shipperCountryCode}/ {bolData?.shipperCity} /{\" \"}\n                  {bolData?.shipperState} / {bolData?.shipperZip}\n                </PDFText>\n                <PDFText>\n                  {translations?.contact}: {bolData?.shipperContactName}\n                </PDFText>\n                <PDFText>\n                  {translations?.phone}: {bolData?.shipperBusinessPhone}\n                </PDFText>\n                <PDFRow style={{ justifyContent: \"space-between\" }}>\n                  <View>\n                    <PDFText>\n                      {translations?.docNumberConfirmationNumber}{\" \"}\n                      {bolData?.shipperReferenceNo}\n                    </PDFText>\n                  </View>\n                  <PDFRow style={{ alignItems: \"center\" }}>\n                    <PDFText>{translations?.SID} </PDFText>\n                    {bolData?.fobCode != null && (\n                      <PDFCheckBoxImg isChecked={bolData?.fobCode === \"ORIG\"} />\n                    )}\n                  </PDFRow>\n                </PDFRow>\n                <PDFText>\n                  {translations?.FOB} {bolData?.shipperDockNo}\n                </PDFText>\n              </View>\n              <PDFDarkHeader>{translations?.shipTo}</PDFDarkHeader>\n              <View style={styles.section}>\n                <PDFRow style={{ justifyContent: \"space-between\" }}>\n                  <View>\n                    <PDFText>\n                      {translations?.name}: {bolData?.consigneeName}\n                    </PDFText>\n                  </View>\n                  <View style={{ marginLeft: 10, minWidth: 100 }}>\n                    <PDFText>\n                      {translations?.location} #: {inputData?.consigneeLocation}\n                    </PDFText>\n                  </View>\n                </PDFRow>\n                <PDFText>\n                  {translations?.address}: {bolData?.consigneeAddress}\n                </PDFText>\n                <PDFText>\n                  {translations?.countryCityStateZip}{\" \"}\n                  {bolData?.consigneeCountryCode}/ {bolData?.consigneeCity} /{\" \"}\n                  {bolData?.consigneeState} / {bolData?.consigneeZip}\n                </PDFText>\n                <PDFText>\n                  {translations?.location2}: {bolData?.consigneeContactName}\n                </PDFText>\n                <PDFText>\n                  {translations?.phone}: {bolData?.consigneeBusinessPhone}\n                </PDFText>\n                <PDFRow style={{ justifyContent: \"space-between\" }}>\n                  <View>\n                    <PDFText>\n                      {translations?.SID} {bolData?.consigneeReferenceNo}\n                    </PDFText>\n                  </View>\n                  <PDFRow style={{ alignItems: \"center\" }}>\n                    <PDFText>{translations?.FOB} </PDFText>\n                    {bolData?.fobCode != null && (\n                      <PDFCheckBoxImg isChecked={bolData?.fobCode === \"DEST\"} />\n                    )}\n                  </PDFRow>\n                </PDFRow>\n                <PDFText>\n                  {translations?.docNumberConfirmationNumber}{\" \"}\n                  {bolData?.consigneeDockNo}\n                </PDFText>\n              </View>\n              <PDFDarkHeader>{translations?.thirdParty}</PDFDarkHeader>\n              <View style={styles.section}>\n                <ThirdPartyShipmentTerms\n                  thirdPartyShipmentData={thirdPartyShipmentData}\n                  translations={translations}\n                />\n              </View>\n            </View>\n            <View\n              style={{\n                width: \"50%\",\n              }}\n            >\n              <View style={{ paddingHorizontal: 5, paddingVertical: 10 }}>\n                <PDFRow style={{ marginBottom: 20 }} justify=\"space-between\">\n                  <PDFText style={{ width: \"50%\" }}>\n                    {translations?.billOfLadingNumber}\n                  </PDFText>\n                  <PDFText\n                    style={{ borderBottom: \"1px solid black\", width: \"50%\" }}\n                  >\n                    {inputData?.bolNo}\n                  </PDFText>\n                </PDFRow>\n                <View>\n                  <PDFRow>\n                    <PDFText style={{ fontWeight: \"700\" }}>\n                      {translations?.carrierName}\n                    </PDFText>\n                    <PDFText>{bolData?.carrierName}</PDFText>\n                  </PDFRow>\n                  <PDFText>\n                    {translations?.trailerNumber} {bolData?.trailerNumber}\n                  </PDFText>\n                  <PDFText>\n                    {translations?.sealNumber} {bolData?.sealNumber}\n                  </PDFText>\n                </View>\n              </View>\n              <PDFDivider />\n              <View style={{ paddingHorizontal: 5, paddingVertical: 10 }}>\n                <PDFRow>\n                  <PDFText style={{ fontWeight: \"700\" }}>\n                    {translations?.scac}{\" \"}\n                  </PDFText>\n                  <PDFText>{bolData?.scac}</PDFText>\n                </PDFRow>\n                <PDFText style={{ marginBottom: 20 }}>\n                  {translations?.proNumber}\n                  {bolData?.proNo}\n                </PDFText>\n\n                <PDFText>\n                  {translations?.serviceDescription}{\" \"}\n                  {bolData?.serviceDescription}\n                </PDFText>\n\n                <PDFText>\n                  {translations?.freightChargeTerms}{\" \"}\n                  <PDFText style={{ fontFamily: \"Open Sans Italic\" }}>\n                    {translations?.freightChargesArePrepaid}\n                  </PDFText>\n                </PDFText>\n\n                <PDFText style={{ marginTop: 5 }}>{freightChargeTerms}</PDFText>\n              </View>\n              <PDFDivider /> /\n              {/* ------------------------------------------------------------ */}\n              <View style={styles.section}>\n                <PDFRow align=\"center\">\n                  <View>\n                    <PDFText>\n                      <PDFCheckBoxImg\n                        isChecked={inputData?.masterBillOfLadingAttached}\n                      />\n                    </PDFText>\n                  </View>\n                  <View style={{ flex: 1, marginLeft: 10 }}>\n                    <PDFText>{translations?.masterBillOfLading}</PDFText>\n                  </View>\n                </PDFRow>\n                <View style={styles.imageSection}>\n                  <View style={styles.image}>\n                    {barCodeImage ? <Image src={barCodeImage} /> : null}\n                  </View>\n                  <View>\n                    <PDFText style={{ fontSize: 16, fontWeight: \"700\" }}>\n                      {bolData?.proNo}\n                    </PDFText>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </PDFRow>\n          <PDFDivider />\n          {/* ------------------------------------------------------------ */}\n          <View style={{ padding: 5, minHeight: 40 }}>\n            <PDFText>\n              {translations?.specialInstructions}:{\" \"}\n              {bolData?.specialInstructions ? bolData?.specialInstructions : \"\"}\n            </PDFText>\n          </View>\n          {/* ------------------------------------------------------------ */}\n          <PDFDarkHeader isFirst={false}>\n            {translations?.customerOrderInformation}\n          </PDFDarkHeader>\n          <View>\n            <PDFTable>\n              <PDFTableRow>\n                <PDFTableCell width=\"23.2%\">\n                  <PDFText style={styles.tableHeader}>\n                    {translations?.customerOrderNumber}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"10%\">\n                  <PDFText style={styles.tableHeader}># PKGS</PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"10%\">\n                  <PDFText style={styles.tableHeader}>\n                    {translations?.weightTable}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"15%\">\n                  <PDFText style={styles.tableHeader}>\n                    {translations?.palletSlip}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"43%\" borderRight={false}>\n                  <PDFText style={styles.tableHeader}>\n                    {translations?.additionalShipperInfo}\n                  </PDFText>\n                </PDFTableCell>\n              </PDFTableRow>\n              {bolData?.items.map((row, key) => (\n                <PDFTableRow key={key}>\n                  <PDFTableCell width=\"23.2%\">\n                    <PDFText style={styles.tableCol}>{row?.poNumber}</PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell width=\"10%\">\n                    <PDFText style={styles.tableCol}>\n                      {convertToFloat(row.quantity)}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell width=\"10%\">\n                    <PDFText style={styles.tableCol}>\n                      {convertToFloat(row.weight)} {\"  \"} {row.weightUOM}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell width=\"15%\">\n                    <PDFText style={styles.tableHeader}>\n                      {row.billQtyUOM === \"PT\" ? \"Y\" : \"N\"}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell width=\"43%\" borderRight={false}>\n                    <PDFText style={styles.tableCol}>\n                      DIM {row.length} X {row.width} X {row.height}{\" \"}\n                      {row.dimUOMDesc}; {row.cube} CUBE ; {row.palletLoadType}\n                    </PDFText>\n                  </PDFTableCell>\n                </PDFTableRow>\n              ))}\n              <PDFTableRow>\n                <PDFTableCell width=\"100%\" borderRight={false}>\n                  <PDFText style={{ ...styles.tableCol, height: 12 }}></PDFText>\n                </PDFTableCell>\n              </PDFTableRow>\n              <PDFTableRow>\n                <PDFTableCell width=\"23.2%\" borderBottom={false}>\n                  <PDFText style={{ fontWeight: \"700\" }}>\n                    {translations?.grandTotal}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"10%\" borderBottom={false}>\n                  <PDFText>\n                    {convertToFloat(\n                      sumBy(bolData?.items, ({ quantity }) => quantity)\n                    )}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell\n                  width=\"67.8%\"\n                  borderRight={false}\n                  borderBottom={false}\n                >\n                  <PDFText>\n                    {convertToFloat(\n                      sumBy(bolData?.items, ({ weight }) => weight)\n                    )}{\" \"}\n                    {uniq(\n                      bolData?.items.map(({ weightUOM }) => weightUOM)\n                    ).join(\", \")}\n                  </PDFText>\n                </PDFTableCell>\n              </PDFTableRow>\n            </PDFTable>\n          </View>\n          {/* ------------------------------------------------------------ */}\n          <PDFDarkHeader isFirst={false}>\n            {translations?.carrierInfo}\n          </PDFDarkHeader>\n          <View>\n            <PDFTable>\n              <PDFTableRow>\n                <PDFTableCell\n                  width=\"40%\"\n                  style={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                >\n                  <View\n                    style={{\n                      flex: 1,\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <PDFTableRow style={{ flex: 1 }}>\n                      <PDFTableCell\n                        borderTop={false}\n                        borderBottom={false}\n                        borderLeft={false}\n                        borderRight={false}\n                        style={{ flex: 1 }}\n                      >\n                        <PDFRow\n                          style={{\n                            height: \"100%\",\n                          }}\n                          align=\"center\"\n                          justify=\"center\"\n                        >\n                          <PDFText style={styles.tableHeader}>\n                            {translations?.handlingUnit}\n                          </PDFText>\n                        </PDFRow>\n                      </PDFTableCell>\n                      <PDFTableCell\n                        borderTop={false}\n                        borderBottom={false}\n                        style={{ flex: 1 }}\n                      >\n                        <PDFRow\n                          style={{\n                            height: \"100%\",\n                          }}\n                          align=\"center\"\n                          justify=\"center\"\n                        >\n                          <PDFText style={styles.tableHeader}>\n                            {translations?.package}\n                          </PDFText>\n                        </PDFRow>\n                      </PDFTableCell>\n                      <PDFTableCell\n                        borderTop={false}\n                        borderBottom={false}\n                        borderLeft={false}\n                        borderRight={false}\n                        style={{ flex: 1 }}\n                      >\n                        <PDFRow\n                          style={{\n                            height: \"100%\",\n                          }}\n                          align=\"center\"\n                          justify=\"center\"\n                        >\n                          <PDFText style={styles.tableHeader}>\n                            {translations?.additionalUnit}\n                          </PDFText>\n                        </PDFRow>\n                      </PDFTableCell>\n                    </PDFTableRow>\n                    <PDFTableRow>\n                      <View style={{ flex: 1 }}>\n                        <PDFTableRow>\n                          <PDFTableCell\n                            borderLeft={false}\n                            borderBottom={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableHeader}>\n                              {translations?.qty}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderRight={false}\n                            borderBottom={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableHeader}>\n                              {translations?.type}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </View>\n                      <View style={{ flex: 1 }}>\n                        <PDFTableRow>\n                          <PDFTableCell\n                            borderRight={false}\n                            borderBottom={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableHeader}>QTY</PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderRight={false}\n                            borderBottom={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableHeader}>\n                              {translations?.type}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </View>\n                      <View style={{ flex: 1 }}>\n                        <PDFTableRow>\n                          <PDFTableCell\n                            borderRight={false}\n                            borderBottom={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableHeader}>\n                              {translations?.qty}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableHeader}>\n                              {translations?.type}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </View>\n                    </PDFTableRow>\n                  </View>\n                </PDFTableCell>\n                <PDFTableCell width=\"11%\">\n                  <PDFText style={styles.tableHeader}>\n                    {translations?.weightTable}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"9%\">\n                  <PDFText style={styles.tableHeader}>\n                    {translations?.hazmat}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell width=\"28%\">\n                  <PDFText style={styles.tableHeader}>\n                    {translations?.commodityDescription}\n                  </PDFText>\n                  <PDFText style={{ ...styles.tableCol, fontSize: 6 }}>\n                    {translations?.commodityText}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell\n                  width=\"13%\"\n                  borderRight={false}\n                  style={{ padding: 0 }}\n                >\n                  <PDFRow direction=\"column\" style={{ flex: 1 }}>\n                    <View style={{ flex: 1 }}>\n                      <PDFRow\n                        style={{\n                          height: \"100%\",\n                        }}\n                        align=\"center\"\n                        justify=\"center\"\n                      >\n                        <PDFText style={styles.tableHeader}>\n                          {translations?.ltlOnly}\n                        </PDFText>\n                      </PDFRow>\n                    </View>\n                    <PDFTableRow>\n                      <PDFTableCell\n                        borderRight={false}\n                        borderBottom={false}\n                        style={{ flex: 1 }}\n                      >\n                        <PDFText\n                          style={{\n                            ...styles.tableHeader,\n                            whiteSpace: \"nowrap\",\n                          }}\n                        >\n                          NMFC #\n                        </PDFText>\n                      </PDFTableCell>\n                      <PDFTableCell\n                        borderBottom={false}\n                        borderRight={false}\n                        style={{ flex: 1 }}\n                      >\n                        <PDFText style={styles.tableHeader}>\n                          {translations?.classTable}\n                        </PDFText>\n                      </PDFTableCell>\n                    </PDFTableRow>\n                  </PDFRow>\n                </PDFTableCell>\n              </PDFTableRow>\n              {bolData.items.map((row, key) => (\n                <PDFTableRow key={key}>\n                  <PDFTableCell\n                    borderLeft={false}\n                    borderRight={false}\n                    width=\"40%\"\n                    style={{ padding: 0 }}\n                  >\n                    <PDFTableRow style={{ flex: 1 }}>\n                      <PDFTableRow style={{ flex: 1 }}>\n                        <PDFTableRow style={{ height: \"100%\" }}>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {convertToFloat(row.billQty)}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {row.billQtyUOMDesc}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </PDFTableRow>\n                      <PDFTableRow style={{ flex: 1 }}>\n                        <PDFTableRow style={{ height: \"100%\" }}>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {convertToFloat(row.quantity)}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {row.unitMeasure}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </PDFTableRow>\n                      <PDFTableRow style={{ flex: 1 }}>\n                        <PDFTableRow style={{ height: \"100%\" }}>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {convertToFloat(row.cartonQty)}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {row.cartonUOMDesc}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </PDFTableRow>\n                    </PDFTableRow>\n                  </PDFTableCell>\n                  <PDFTableCell borderRight={false} width=\"11%\">\n                    <PDFText style={styles.tableCol}>\n                      {convertToFloat(row.weight)} {\"  \"} {row.weightUOM}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell borderRight={false} width=\"9%\">\n                    <PDFText style={styles.tableCol}>\n                      {row.hazmat && String(row.hazmat).toLowerCase() === \"y\"\n                        ? \"X\"\n                        : \"\"}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell width=\"28%\" borderRight={false}>\n                    <PDFText style={styles.tableCol}>\n                      {row.productCode} : {row.productDescription}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell\n                    width=\"13%\"\n                    borderRight={false}\n                    style={{ padding: 0 }}\n                  >\n                    <PDFTableRow>\n                      <PDFTableRow>\n                        <PDFTableCell\n                          borderTop={false}\n                          borderBottom={false}\n                          borderRight={false}\n                          style={{ flex: 1 }}\n                        >\n                          <PDFText style={styles.tableCol}>\n                            {row.nmfcClassNumber}\n                          </PDFText>\n                        </PDFTableCell>\n                        <PDFTableCell\n                          borderTop={false}\n                          borderBottom={false}\n                          borderRight={false}\n                          style={{ flex: 1 }}\n                        >\n                          <PDFText style={styles.tableCol}>{row.class}</PDFText>\n                        </PDFTableCell>\n                      </PDFTableRow>\n                    </PDFTableRow>\n                  </PDFTableCell>\n                </PDFTableRow>\n              ))}\n              <PDFTableRow>\n                <PDFTableCell\n                  borderRight={false}\n                  borderTop={false}\n                  borderLeft={false}\n                  borderBottom={false}\n                  width=\"105%\"\n                  style={{ height: 13 }}\n                ></PDFTableCell>\n              </PDFTableRow>\n              {bolData?.items?.length > 0 && (\n                <PDFTableRow>\n                  <PDFTableCell\n                    borderLeft={false}\n                    borderRight={false}\n                    width=\"40%\"\n                    style={{ padding: 0 }}\n                  >\n                    <PDFTableRow style={{ flex: 1 }}>\n                      <PDFTableRow style={{ flex: 1 }}>\n                        <PDFTableRow style={{ height: \"100%\" }}>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {convertToFloat(\n                                sumBy(bolData?.items, ({ billQty }) => billQty)\n                              )}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {uniq(\n                                bolData?.items.map(\n                                  ({ billQtyUOMDesc }) => billQtyUOMDesc\n                                )\n                              ).join(\", \")}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </PDFTableRow>\n                      <PDFTableRow style={{ flex: 1 }}>\n                        <PDFTableRow style={{ height: \"100%\" }}>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {convertToFloat(\n                                sumBy(\n                                  bolData?.items,\n                                  ({ cartonQty }) => cartonQty\n                                )\n                              )}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {uniq(\n                                bolData?.items.map(\n                                  ({ cartonUOMDesc }) => cartonUOMDesc\n                                )\n                              ).join(\", \")}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </PDFTableRow>\n                      <PDFTableRow style={{ flex: 1 }}>\n                        <PDFTableRow style={{ height: \"100%\" }}>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            borderRight={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {uniq(\n                                bolData?.items.map(\n                                  ({ cartonUOMDesc }) => cartonUOMDesc\n                                )\n                              ).join(\", \")}\n                            </PDFText>\n                          </PDFTableCell>\n                          <PDFTableCell\n                            borderTop={false}\n                            borderBottom={false}\n                            style={{ flex: 1 }}\n                          >\n                            <PDFText style={styles.tableCol}>\n                              {uniq(\n                                bolData?.items.map(\n                                  ({ cartonUOMDesc }) => cartonUOMDesc\n                                )\n                              ).join(\", \")}\n                            </PDFText>\n                          </PDFTableCell>\n                        </PDFTableRow>\n                      </PDFTableRow>\n                    </PDFTableRow>\n                  </PDFTableCell>\n                  <PDFTableCell borderRight={false} width=\"11%\">\n                    <PDFText style={styles.tableCol}>\n                      {convertToFloat(\n                        sumBy(bolData?.items, ({ weight }) => weight)\n                      )}{\" \"}\n                      {uniq(\n                        bolData?.items.map(({ weightUOM }) => weightUOM)\n                      ).join(\", \")}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell borderRight={false} width=\"9%\">\n                    <PDFText style={styles.tableCol}></PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell width=\"28%\" borderRight={false}>\n                    <PDFText\n                      style={{ ...styles.tableHeader, textAlign: \"left\" }}\n                    >\n                      {translations?.grandTotal}\n                    </PDFText>\n                  </PDFTableCell>\n                  <PDFTableCell\n                    width=\"13%\"\n                    borderRight={false}\n                    style={{ padding: 0 }}\n                  >\n                    <PDFTableRow style={{ flex: 1 }}>\n                      <PDFTableCell\n                        borderTop={false}\n                        borderBottom={false}\n                        borderRight={false}\n                        style={{ flex: 1 }}\n                      >\n                        <PDFText style={styles.tableCol}></PDFText>\n                      </PDFTableCell>\n                      <PDFTableCell\n                        borderTop={false}\n                        borderBottom={false}\n                        borderRight={false}\n                        style={{ flex: 1 }}\n                      >\n                        <PDFText style={styles.tableCol}></PDFText>\n                      </PDFTableCell>\n                    </PDFTableRow>\n                  </PDFTableCell>\n                </PDFTableRow>\n              )}\n              <PDFTableRow>\n                <CodSection inputData={inputData} translations={translations} />\n              </PDFTableRow>\n              <PDFTableRow>\n                <PDFTableCell\n                  borderRight={false}\n                  borderTop={false}\n                  borderLeft={false}\n                  borderBottom={false}\n                  width=\"105%\"\n                  style={{ paddingVertical: 5 }}\n                  justify={\"flex-start\"}\n                >\n                  <PDFText style={{ ...styles.tableHeader, textAlign: \"left\" }}>\n                    {translations?.noteLiability}\n                  </PDFText>\n                </PDFTableCell>\n              </PDFTableRow>\n              <PDFTableRow>\n                <PDFTableCell justify={\"flex-start\"} width=\"55%\">\n                  <PDFText\n                    style={{\n                      ...styles.tableCol,\n                      textAlign: \"left\",\n                      paddingVertical: 3,\n                    }}\n                  >\n                    {translations?.received}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell\n                  justify={\"flex-start\"}\n                  width=\"48%\"\n                  borderRight={false}\n                >\n                  <PDFRow\n                    direction=\"column\"\n                    style={{\n                      flex: 1,\n                      paddingVertical: 4,\n                    }}\n                    justify={\"space-between\"}\n                  >\n                    <View>\n                      <PDFText\n                        style={{ ...styles.tableCol, textAlign: \"left\" }}\n                      >\n                        {translations?.carrierShall}\n                      </PDFText>\n                    </View>\n                    <View>\n                      <PDFText\n                        style={{ ...styles.tableCol, textAlign: \"left\" }}\n                      >\n                        <PdfGetTextUnderline\n                          fontWeight={\"700\"}\n                          value={inputData?.shipperSignature}\n                        />\n                        {translations?.shipperSignature}\n                      </PDFText>\n                    </View>\n                  </PDFRow>\n                </PDFTableCell>\n              </PDFTableRow>\n              <PDFTableRow>\n                <PDFTableCell\n                  style={{ flex: 5, paddingVertical: 5 }}\n                  borderBottom={false}\n                  borderRight={false}\n                  justify={\"flex-start\"}\n                >\n                  <PDFText\n                    style={{\n                      ...styles.tableHeader,\n                      textAlign: \"left\",\n                      fontSize: 8,\n                    }}\n                  >\n                    {translations?.shipperSignatureDate}\n                  </PDFText>\n                  <PDFText style={{ ...styles.tableCol, fontSize: 7 }}>\n                    {translations?.certify}\n                  </PDFText>\n                </PDFTableCell>\n                <PDFTableCell\n                  justify={\"flex-start\"}\n                  style={{ flex: 6, paddingVertical: 5 }}\n                  borderBottom={false}\n                  borderRight={false}\n                >\n                  <PDFRow>\n                    <View style={{ marginRight: 10 }}>\n                      <PDFText\n                        style={{\n                          ...styles.tableHeader,\n                          textAlign: \"left\",\n                          fontSize: 8,\n                          textDecoration: \"underline\",\n                        }}\n                      >\n                        {translations?.trailerLoaded}\n                      </PDFText>\n                      <View style={{ paddingVertical: 4, paddingLeft: 2 }}>\n                        <View style={{ paddingBottom: 3 }}>\n                          <PDFCheckBox\n                            fontWeight={\"400\"}\n                            label={translations?.byShipper}\n                            isReverse={true}\n                            value={inputData?.trailerByShipper}\n                            colon={false}\n                          />\n                        </View>\n                        <View style={{ paddingBottom: 3 }}>\n                          <PDFCheckBox\n                            fontWeight={\"400\"}\n                            label={translations?.byDriver}\n                            isReverse={true}\n                            value={inputData?.trailerByDriver}\n                            colon={false}\n                          />\n                        </View>\n                      </View>\n                    </View>\n                    <View style={{ marginRight: 10 }}>\n                      <PDFText\n                        style={{\n                          ...styles.tableHeader,\n                          textAlign: \"left\",\n                          fontSize: 8,\n                          textDecoration: \"underline\",\n                        }}\n                      >\n                        {translations?.freightCounted}\n                      </PDFText>\n                      <View style={{ paddingVertical: 4, paddingLeft: 2 }}>\n                        <View style={{ paddingBottom: 3 }}>\n                          <PDFCheckBox\n                            fontWeight={\"400\"}\n                            label={translations?.byShipper}\n                            isReverse={true}\n                            value={inputData?.freightByShipper}\n                            colon={false}\n                          />\n                        </View>\n                        <View style={{ paddingBottom: 3 }}>\n                          <PDFCheckBox\n                            fontWeight={\"400\"}\n                            label={translations?.byDriverPallets}\n                            isReverse={true}\n                            value={inputData?.freightByDriverPallets}\n                            colon={false}\n                          />\n                        </View>\n                        <View style={{ paddingBottom: 3 }}>\n                          <PDFCheckBox\n                            fontWeight={\"400\"}\n                            label={translations?.byDriverPieces}\n                            isReverse={true}\n                            value={inputData?.freightByDriverPieces}\n                            colon={false}\n                          />\n                        </View>\n                      </View>\n                    </View>\n                  </PDFRow>\n                </PDFTableCell>\n                <PDFTableCell\n                  style={{ flex: 5, paddingVertical: 5 }}\n                  borderBottom={false}\n                  borderRight={false}\n                  justify={\"flex-start\"}\n                >\n                  <PDFText\n                    style={{\n                      ...styles.tableHeader,\n                      textAlign: \"left\",\n                      fontSize: 10,\n                    }}\n                  >\n                    {translations?.carrierPickupDate}\n                  </PDFText>\n                  <PDFText style={{ ...styles.tableCol, fontSize: 7 }}>\n                    {translations?.carrierAcknowledges}\n                  </PDFText>\n                </PDFTableCell>\n              </PDFTableRow>\n            </PDFTable>\n          </View>\n        </View>\n      </View>\n      <PDFRow justify=\"center\" fixed>\n        <View style={{ display: \"flex\", flexDirection: \"row\", marginTop: 5 }}>\n          <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}>\n            {translations?.page}{\" \"}\n          </PDFText>\n          <PDFText\n            style={{ fontSize: 10, fontWeight: \"700\" }}\n            fixed\n            render={({ pageNumber }) => {\n              return pageNumber;\n            }}\n          />\n          <PDFText style={{ fontSize: 10, fontWeight: \"700\" }}>\n            {\" \"}\n            {translations?.of}{\" \"}\n          </PDFText>\n          <PDFText\n            style={{ fontSize: 10, fontWeight: \"700\" }}\n            fixed\n            render={({ totalPages }) => {\n              return totalPages;\n            }}\n          />\n        </View>\n      </PDFRow>\n    </PDFPage>\n  );\n};\n\nexport default BolPrintDocument;\n\nconst styles = StyleSheet.create({\n  header: { paddingHorizontal: 10, paddingVertical: 5 },\n  title: { fontSize: 16, fontWeight: \"700\" },\n  headerRow: {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  section: {\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n  },\n  imageSection: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 10,\n  },\n  image: {\n    width: \"60%\",\n  },\n  tableHeader: {\n    fontWeight: \"700\",\n    fontSize: 8,\n    textAlign: \"center\",\n  },\n  tableCol: {\n    fontSize: 8,\n  },\n});\n\nconst ThirdPartyShipmentTerms = ({ thirdPartyShipmentData, translations }) => {\n  return (\n    <View className=\"border-none w-100\">\n      <PDFText>\n        {translations?.name}: {thirdPartyShipmentData.name}\n      </PDFText>\n      <PDFText>\n        {translations?.address}: {thirdPartyShipmentData.address1}\n      </PDFText>\n      <PDFText>\n        {thirdPartyShipmentData?.address2Label\n          ? thirdPartyShipmentData?.address2Label\n          : translations?.countryCityStateZip}\n        : {thirdPartyShipmentData.address2}\n      </PDFText>\n    </View>\n  );\n};\n\nconst CodSection = ({ inputData, translations }) => {\n  return (\n    <>\n      <PDFTableCell\n        width=\"55%\"\n        style={{ paddingVertical: 6 }}\n        justify={\"flex-start\"}\n      >\n        <PDFText style={styles.tableCol}>{translations?.whereTheRate}</PDFText>\n        <View style={{ flexDirection: \"row\" }}>\n          <PDFText style={styles.tableCol}>\n            {translations?.theAgreed}{\" \"}\n            <PdfGetTextUnderline value={inputData?.agreedValue1} /> per{\" \"}\n            <PdfGetTextUnderline value={inputData?.agreedValue2} /> .\n          </PDFText>\n        </View>\n      </PDFTableCell>\n      <PDFTableCell\n        justify={\"flex-start\"}\n        width=\"48%\"\n        borderRight={false}\n        style={{ padding: 6 }}\n      >\n        <View style={{ flex: 1 }}>\n          <PDFText style={styles.tableHeader}>\n            {translations?.codAmount} ${\" \"}\n            <PDFText style={{ textDecoration: \"underline\" }}>\n              {convertToFloat(inputData?.codAmount)}\n            </PDFText>\n          </PDFText>\n          <PDFRow\n            justify=\"center\"\n            style={{ marginHorizontal: 10, marginTop: 10, flexWrap: \"nowrap\" }}\n          >\n            <View style={{ flex: 1 }}>\n              <PDFText style={styles.tableHeader}>\n                {translations?.feeTerms}\n              </PDFText>\n            </View>\n            <PDFRow style={{ flexWrap: \"wrap\", flex: 2 }}>\n              <View>\n                <PDFCheckBox\n                  label={translations?.option_c}\n                  value={inputData?.freeTermsCollect}\n                />\n              </View>\n              <View style={{ marginHorizontal: 10 }}>\n                <PDFCheckBox\n                  label={translations?.option_p}\n                  value={inputData?.freeTermsPrePaid}\n                />\n              </View>\n              <View>\n                <PDFCheckBox\n                  label={translations?.customerCheck}\n                  value={inputData?.freeTermsCustomerCheque}\n                />\n              </View>\n            </PDFRow>\n          </PDFRow>\n        </View>\n      </PDFTableCell>\n    </>\n  );\n};\n","import React from \"react\";\r\nimport { Document } from \"@react-pdf/renderer\";\r\nimport BolPrintDocument from \"../../BolPrintDocument\";\r\n\r\nconst PDF = (props) => {\r\n  return (\r\n    <Document>\r\n      <BolPrintDocument {...props} />\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PDF;\r\n","import { pdf } from \"@react-pdf/renderer\";\r\nimport PDF from \"./PDF\";\r\n\r\nconst generateBOLPDF = async (props) => {\r\n  console.log(\"started BOL\");\r\n  const data = JSON.parse(props);\r\n  console.log(\"props\", data);\r\n  const result = await pdf(<PDF {...data} />).toBlob();\r\n  console.log(\"ended BOL\");\r\n  return result;\r\n};\r\n\r\nexport default generateBOLPDF;\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"@react-pdf/renderer\";\r\nimport {\r\n  PDFDarkHeader,\r\n  PDFPage,\r\n  PDFRow,\r\n  pdfStyles,\r\n  PDFTable,\r\n  PDFTableCell,\r\n  PDFTableRow,\r\n  PDFText,\r\n} from \"../../components/CommonPdfComponents\";\r\nimport { getShipmentOriginDestinationDetails } from \"../../../../../utilz/shipmentDataManupulation\";\r\nimport { convertToFloat } from \"../../../../../utilz/utilz\";\r\nimport { formateWithMoment } from \"../../../../../utilz/dates\";\r\n\r\nconst ImoPrintDocument = ({ shipmentDetails, inputData, productList }) => {\r\n  const { origin, destination } = useMemo(\r\n    () =>\r\n      getShipmentOriginDestinationDetails(shipmentDetails?.transportationList),\r\n    [shipmentDetails?.transportationList]\r\n  );\r\n  return (\r\n    <PDFPage>\r\n      <View style={{ ...pdfStyles.border, borderTop: \"none\" }}>\r\n        <View\r\n          fixed\r\n          style={{\r\n            ...styles.header,\r\n            ...pdfStyles.borderBottom,\r\n            ...pdfStyles.borderTop,\r\n          }}\r\n        >\r\n          <PDFRow style={styles.headerRow}>\r\n            <View></View>\r\n            <View>\r\n              <PDFText style={styles.title}>\r\n                IMO DANGEROUS GOODS DECLARATION\r\n              </PDFText>\r\n            </View>\r\n            <View>\r\n              <PDFText\r\n                style={{ fontSize: 10, fontWeight: \"700\" }}\r\n                fixed\r\n                render={(data) => {\r\n                  return `Page ${data.pageNumber} of ${data.totalPages}`;\r\n                }}\r\n              />\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                ...{ height: \"100%\", width: \"50%\" },\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFDarkHeader isFirst={true}>Shipper</PDFDarkHeader>\r\n              <View style={styles.section}>\r\n                <PDFText>{origin?.name}</PDFText>\r\n                <PDFText>{origin?.address1}</PDFText>\r\n                <PDFText>\r\n                  {origin?.city}, {origin?.stateCode} {origin?.zipCode}{\" \"}\r\n                  {origin?.countryName}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n            <View\r\n              style={{\r\n                ...{ height: \"100%\", width: \"50%\" },\r\n              }}\r\n            >\r\n              <PDFRow direction={\"column\"} justify=\"space-between\">\r\n                <View style={{ ...styles.section, ...pdfStyles.borderBottom }}>\r\n                  <PDFText>Transportation Document Number</PDFText>\r\n                  <PDFText>{shipmentDetails?.shipmentNo}</PDFText>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <PDFText>Shipper's Reference</PDFText>\r\n                  <PDFText>{inputData?.shippersRef}</PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                ...{ height: \"100%\", width: \"50%\" },\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFDarkHeader isFirst={true}>Consignee</PDFDarkHeader>\r\n              <View style={styles.section}>\r\n                <PDFText>{destination?.name}</PDFText>\r\n                <PDFText>{destination?.address1}</PDFText>\r\n                <PDFText>\r\n                  {destination?.city}, {destination?.stateCode}{\" \"}\r\n                  {destination?.zipCode} {destination?.countryName}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n            <View\r\n              style={{\r\n                ...{ height: \"100%\", width: \"50%\" },\r\n              }}\r\n            >\r\n              <PDFRow direction={\"column\"} justify=\"space-between\">\r\n                <View style={{ ...styles.section, ...pdfStyles.borderBottom }}>\r\n                  <PDFText>Freight Forwarder's Reference</PDFText>\r\n                  <PDFText>{shipmentDetails?.freightForwardRef}</PDFText>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <PDFText> Carrier (to be declared by the Carrier)</PDFText>\r\n                  <PDFText>{inputData?.carrierDeclare}</PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFDarkHeader isFirst={true}>SHIPPER'S DECLARATION</PDFDarkHeader>\r\n          <View style={styles.section}>\r\n            <PDFText style={{ fontSize: 8 }}>\r\n              I hereby declare that the contents of this consignment are fully\r\n              and accurately described above by the proper shipping name(s), and\r\n              are classified, packaged, marked and labeled/placarded, and are in\r\n              all respects in proper condition for transport according to\r\n              applicable international and national governmental regulations.\r\n            </PDFText>\r\n            <PDFText>{inputData?.shipperDeclaration}</PDFText>\r\n          </View>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                ...{ height: \"100%\", width: \"50%\" },\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFRow direction={\"column\"} justify=\"space-between\">\r\n                <View style={{ ...styles.section, ...pdfStyles.borderBottom }}>\r\n                  <PDFText>Vessel/Flight and Date</PDFText>\r\n                  <PDFText>\r\n                    {inputData?.vesselFlight}\r\n                    {\"     \"}\r\n                    {formateWithMoment(inputData?.vesselDate)}\r\n                  </PDFText>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <PDFText>Port/Place Handling</PDFText>\r\n                  <PDFText>{inputData?.portHandling}</PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </View>\r\n            <View\r\n              style={{\r\n                ...{ height: \"100%\", width: \"50%\" },\r\n              }}\r\n            >\r\n              <View style={styles.section}>\r\n                <PDFText style={{ marginBottom: 5 }}>\r\n                  Additional Handling Information\r\n                </PDFText>\r\n                <PDFText>{inputData?.additionalHandlingInfo}</PDFText>\r\n              </View>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View>\r\n          <PDFTable>\r\n            <PDFTableRow>\r\n              <PDFTableCell width=\"20%\">\r\n                <PDFText style={styles.tableHeader}>Shipping Marks</PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"60%\">\r\n                <PDFText style={styles.tableHeader}>\r\n                  Number and Kind of Packages, Description of Goods\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"13%\">\r\n                <PDFText style={styles.tableHeader}>GW (kg)</PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell width=\"13%\" borderRight={false}>\r\n                <PDFText style={styles.tableHeader}>CUBE (m3)</PDFText>\r\n              </PDFTableCell>\r\n            </PDFTableRow>\r\n            {productList.map((product) => (\r\n              <PDFTableRow key={product.productCode}>\r\n                <PDFTableCell width=\"20%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {product?.productCode}\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"60%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {product?.productDescription}, ({product?.billQty}{\" \"}\r\n                    {product?.billQtyUomName})\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"13%\">\r\n                  <PDFText style={styles.tableCol}>\r\n                    {convertToFloat(\r\n                      String(product?.weightUom).trim().toUpperCase() === \"LB\"\r\n                        ? product?.weight * 0.45359237\r\n                        : product?.weight\r\n                    )}\r\n                  </PDFText>\r\n                </PDFTableCell>\r\n                <PDFTableCell width=\"13%\" borderRight={false}>\r\n                  <PDFText style={styles.tableCol}>{product?.cube}</PDFText>\r\n                </PDFTableCell>\r\n              </PDFTableRow>\r\n            ))}\r\n          </PDFTable>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                width: \"15%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>CTU ID No.</PDFText>\r\n              <PDFText>{inputData?.ctuIdNo}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"15%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Seal No.</PDFText>\r\n              <PDFText>{inputData?.sealNo}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"22%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>CTU Size and Type</PDFText>\r\n              <PDFText>{inputData?.ctuSizeAndType}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"22%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Tare Mass (kg)</PDFText>\r\n              <PDFText>{inputData?.totalWeight}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"22%\",\r\n                ...styles.section,\r\n              }}\r\n            >\r\n              <PDFText>Total Gross Mass (kg)</PDFText>\r\n              <PDFText>{inputData?.shipmentTotalWeight}</PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText style={{ marginBottom: 5 }}>\r\n                Container/Vehicle packing Certificate\r\n              </PDFText>\r\n              <PDFText style={{ fontSize: 8 }}>\r\n                I hereby declare that the goods described above have been\r\n                packed/loaded into the container/vehicle identified above in\r\n                accordance with the applicable provisions\r\n              </PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"68%\",\r\n                ...styles.section,\r\n              }}\r\n            >\r\n              <PDFText style={{ marginBottom: 5 }}>\r\n                Receiving Organization Receipt\r\n              </PDFText>\r\n              <PDFText style={{ fontSize: 8 }}>\r\n                Received the above number of packages/containers/trailers in\r\n                apparent good order and condition, unless stated hereon:\r\n              </PDFText>\r\n              <PDFText style={{ fontWeight: 700 }}>\r\n                RECEIVING ORGANIZATION REMARKS:\r\n              </PDFText>\r\n              <PDFText>{inputData?.organizationRemarks}</PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Name of Company:</PDFText>\r\n              <PDFText>{inputData?.companyName}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Hauler's Name:</PDFText>\r\n              <PDFText>{inputData?.haulersName}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n              }}\r\n            >\r\n              <PDFText>Name of Company Preparing Note:</PDFText>\r\n              <PDFText>{inputData?.pnCompanyName}</PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Name/Status of Declarant:</PDFText>\r\n              <PDFText>{inputData?.nameStatusDeclarant}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Vehicle Registration No.:</PDFText>\r\n              <PDFText>{inputData?.vehicleRegNo}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n              }}\r\n            >\r\n              <PDFText>Name/Status of Declarant:</PDFText>\r\n              <PDFText>{inputData?.pnNameStatusDeclarant}</PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={pdfStyles.borderBottom}>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Place and Date:</PDFText>\r\n              <PDFText>\r\n                {inputData?.place}\r\n                {\"     \"}\r\n                {formateWithMoment(inputData?.date)}\r\n              </PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Driver Name and Date.:</PDFText>\r\n              <PDFText>\r\n                {inputData?.driverName}\r\n                {\"     \"}\r\n                {formateWithMoment(inputData?.driverDate)}\r\n              </PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n              }}\r\n            >\r\n              <PDFText>Place and Date:</PDFText>\r\n              <PDFText>\r\n                {inputData?.pnPlace}\r\n                {\"     \"}\r\n                {formateWithMoment(inputData?.pnDate)}\r\n              </PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View>\r\n          <PDFRow>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Signature of Declarant:</PDFText>\r\n              <PDFText>{inputData?.signature}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n                ...pdfStyles.borderRight,\r\n              }}\r\n            >\r\n              <PDFText>Driver's Signature:</PDFText>\r\n              <PDFText>{inputData?.driverSignature}</PDFText>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"34%\",\r\n                ...styles.section,\r\n              }}\r\n            >\r\n              <PDFText>Signature of Declarant:</PDFText>\r\n              <PDFText>{inputData?.pnSignature}</PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n      </View>\r\n    </PDFPage>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: { paddingHorizontal: 10, paddingVertical: 5 },\r\n  title: { fontSize: 16, fontWeight: \"700\" },\r\n  headerRow: {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  section: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 10,\r\n  },\r\n  imageSection: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  image: {\r\n    width: \"60%\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: 8,\r\n    textAlign: \"center\",\r\n  },\r\n  tableCol: {\r\n    fontSize: 8,\r\n  },\r\n});\r\n\r\nexport default ImoPrintDocument;\r\n","import React from \"react\";\r\nimport { Document } from \"@react-pdf/renderer\";\r\nimport ImoPrintDocument from \"../../ImoPrintDocument\";\r\n\r\nconst PDF = (props) => {\r\n  return (\r\n    <Document>\r\n      <ImoPrintDocument {...props} />\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PDF;\r\n","import { pdf } from \"@react-pdf/renderer\";\r\nimport PDF from \"./PDF\";\r\n\r\nconst generateIMOPDF = async (props) => {\r\n  const result = await pdf(<PDF {...JSON.parse(props)} />).toBlob();\r\n  return result;\r\n};\r\n\r\nexport default generateIMOPDF;\r\n","import React, { useMemo } from \"react\";\r\nimport { StyleSheet, View } from \"@react-pdf/renderer\";\r\nimport {\r\n  PDFPage,\r\n  PDFRow,\r\n  pdfStyles,\r\n  PDFTable,\r\n  PDFTableCell,\r\n  PDFTableRow,\r\n  PDFText,\r\n} from \"../../components/CommonPdfComponents\";\r\nimport { getShipmentOriginDestinationDetails } from \"../../../../../utilz/shipmentDataManupulation\";\r\nimport { convertToFloat } from \"../../../../../utilz/utilz\";\r\nimport { formateWithMoment } from \"../../../../../utilz/dates\";\r\nimport PDFCheckBoxImg from \"../../components/PDFCheckBoxImg\";\r\n\r\nconst SedPrintDocument = ({\r\n  shipmentDetails,\r\n  inputData,\r\n  productList,\r\n  productInputs,\r\n}) => {\r\n  const { origin, destination } = useMemo(\r\n    () =>\r\n      getShipmentOriginDestinationDetails(shipmentDetails?.transportationList),\r\n    [shipmentDetails?.transportationList]\r\n  );\r\n  return (\r\n    <PDFPage>\r\n      <View>\r\n        <PDFText style={{ fontSize: 6, textAlign: \"center\" }}>\r\n          <PDFText style={{ fontWeight: 800, fontSize: 6 }}>\r\n            U.S. DEPARTMENT OF COMMERCE — U.S. CENSUS BUREAU –\r\n          </PDFText>{\" \"}\r\n          Economics and Statistics Administration —{\" \"}\r\n          <PDFText style={{ fontWeight: 800, fontSize: 6 }}>\r\n            BUREAU OF EXPORT ADMINISTRATION\r\n          </PDFText>\r\n        </PDFText>\r\n      </View>\r\n      <View\r\n        fixed\r\n        style={{\r\n          ...styles.header,\r\n          ...pdfStyles.borderBottom,\r\n        }}\r\n      >\r\n        <PDFRow style={styles.headerRow}>\r\n          <View>\r\n            <PDFText style={{ fontSize: 8 }}>\r\n              FORM{\" \"}\r\n              <PDFText style={{ fontWeight: 800, fontSize: 12 }}>\r\n                7525-V\r\n              </PDFText>{\" \"}\r\n              (7-25-2000)\r\n            </PDFText>\r\n          </View>\r\n          <View>\r\n            <PDFText style={styles.title}>SHIPPER’S EXPORT DECLARATION</PDFText>\r\n          </View>\r\n          <View>\r\n            <PDFText style={{ fontSize: 10 }}>OMB No. 0607-0152</PDFText>\r\n          </View>\r\n        </PDFRow>\r\n      </View>\r\n      <View style={pdfStyles.borderBottom}>\r\n        <PDFRow>\r\n          <View style={{ flex: 1, borderTop: \"3px solid black\" }}>\r\n            <View style={{ position: \"absolute\" }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  1a.\r\n                </PDFText>{\" \"}\r\n                U.S. PRINCIPAL PARTY IN INTEREST (USPPI){\" \"}\r\n                <PDFText\r\n                  style={{ ...styles.tableCol, fontFamily: \"Open Sans Italic\" }}\r\n                >\r\n                  (Complete name and address)\r\n                </PDFText>\r\n              </PDFText>\r\n            </View>\r\n            <PDFRow>\r\n              <View\r\n                style={{\r\n                  ...{ height: \"100%\", flex: 1 },\r\n                }}\r\n              >\r\n                <View style={{ ...styles.section, marginTop: 5 }}>\r\n                  <PDFText style={styles.tableCol}>{destination?.name}</PDFText>\r\n                  <PDFText style={styles.tableCol}>\r\n                    {destination?.address1}\r\n                  </PDFText>\r\n                  <PDFText style={styles.tableCol}>\r\n                    {destination?.city}, {destination?.stateCode}{\" \"}\r\n                    {destination?.zipCode} {destination?.countryCode}\r\n                  </PDFText>\r\n                </View>\r\n              </View>\r\n              <View>\r\n                <PDFRow direction={\"column\"} justify=\"space-between\">\r\n                  <View\r\n                    style={{ height: 30, borderRight: \"3px solid black\" }}\r\n                  ></View>\r\n                  <View\r\n                    style={{\r\n                      height: 32,\r\n                      ...pdfStyles.borderTop,\r\n                      ...pdfStyles.borderLeft,\r\n                      ...pdfStyles.borderRight,\r\n                      padding: \"3px 10px 5px 5px\",\r\n                    }}\r\n                  >\r\n                    <PDFText style={styles.tableCol}>ZIP CODE</PDFText>\r\n                    <PDFText style={{ ...styles.tableCol, marginLeft: 15 }}>\r\n                      {origin?.zipCode}\r\n                    </PDFText>\r\n                  </View>\r\n                </PDFRow>\r\n              </View>\r\n            </PDFRow>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <PDFRow direction={\"column\"} justify=\"space-between\">\r\n              <View\r\n                style={{ height: 34, borderBottom: \"4px solid black\" }}\r\n              ></View>\r\n              <View\r\n                style={{\r\n                  height: 30,\r\n                }}\r\n              >\r\n                <PDFRow style={{ height: \"100%\" }}>\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      ...pdfStyles.borderRight,\r\n                      padding: \"1px 3px\",\r\n                    }}\r\n                  >\r\n                    <PDFText style={styles.tableCol}>\r\n                      <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                        2.\r\n                      </PDFText>{\" \"}\r\n                      DATE OF EXPORTATION\r\n                    </PDFText>\r\n                    <PDFText\r\n                      style={{\r\n                        ...styles.tableCol,\r\n                        marginLeft: 15,\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {formateWithMoment(origin?.actualDate)}\r\n                    </PDFText>\r\n                  </View>\r\n                  <View style={{ flex: 1, padding: \"1px 3px\" }}>\r\n                    <PDFText style={styles.tableCol}>\r\n                      <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                        3.\r\n                      </PDFText>{\" \"}\r\n                      TRANSPORTATION REFERENCE NO.\r\n                    </PDFText>\r\n                    <PDFText\r\n                      style={{\r\n                        ...styles.tableCol,\r\n                        marginLeft: 15,\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {inputData?.transportationReferenceNo}\r\n                    </PDFText>\r\n                  </View>\r\n                </PDFRow>\r\n              </View>\r\n            </PDFRow>\r\n          </View>\r\n        </PDFRow>\r\n      </View>\r\n      <View>\r\n        <PDFRow>\r\n          <View style={{ width: \"50%\" }}>\r\n            <PDFRow>\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  ...pdfStyles.borderRight,\r\n                }}\r\n              >\r\n                <PDFText style={styles.tableCol}>\r\n                  <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                    b.\r\n                  </PDFText>{\" \"}\r\n                  USPPI EIN (IRS) OR ID NO.\r\n                </PDFText>\r\n                <PDFText\r\n                  style={{\r\n                    ...styles.tableCol,\r\n                    marginLeft: 15,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {inputData?.idNo}\r\n                </PDFText>\r\n              </View>\r\n              <View style={{ flex: 1 }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                    c.\r\n                  </PDFText>{\" \"}\r\n                  PARTIES TO TRANSACTION\r\n                </PDFText>\r\n                <PDFRow justify=\"center\">\r\n                  <View style={{ marginRight: 10 }}>\r\n                    <PDFText>\r\n                      <PDFCheckBoxImg\r\n                        size={8}\r\n                        isChecked={inputData?.partiesToTransactionYes}\r\n                      />{\" \"}\r\n                      Yes\r\n                    </PDFText>\r\n                  </View>\r\n                  <View>\r\n                    <PDFText>\r\n                      <PDFCheckBoxImg\r\n                        size={8}\r\n                        isChecked={inputData?.partiesToTransactionNo}\r\n                      />{\" \"}\r\n                      No\r\n                    </PDFText>\r\n                  </View>\r\n                </PDFRow>\r\n              </View>\r\n            </PDFRow>\r\n            <View\r\n              style={{\r\n                ...pdfStyles.borderTop,\r\n                borderBottom: \"1px dashed black\",\r\n              }}\r\n            >\r\n              <View>\r\n                <PDFText style={styles.tableCol}>\r\n                  <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                    4a.\r\n                  </PDFText>{\" \"}\r\n                  ULTIMATE CONSIGNEE{\" \"}\r\n                  <PDFText\r\n                    style={{\r\n                      ...styles.tableCol,\r\n                      fontFamily: \"Open Sans Italic\",\r\n                    }}\r\n                  >\r\n                    (Complete name and address)\r\n                  </PDFText>\r\n                </PDFText>\r\n              </View>\r\n              <View style={{ ...styles.section, marginTop: 1 }}>\r\n                <PDFText style={styles.tableCol}>{destination?.name}</PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.address1}\r\n                </PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.city}, {destination?.stateCode}{\" \"}\r\n                  {destination?.zipCode} {destination?.countryCode}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n            <View\r\n              style={{\r\n                ...pdfStyles.borderBottom,\r\n              }}\r\n            >\r\n              <View>\r\n                <PDFText style={styles.tableCol}>\r\n                  <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                    b.\r\n                  </PDFText>{\" \"}\r\n                  INTERMEDIATE CONSIGNEE{\" \"}\r\n                  <PDFText\r\n                    style={{\r\n                      ...styles.tableCol,\r\n                      fontFamily: \"Open Sans Italic\",\r\n                    }}\r\n                  >\r\n                    (Complete name and address)\r\n                  </PDFText>\r\n                </PDFText>\r\n              </View>\r\n              <View style={{ ...styles.section, marginTop: 2 }}>\r\n                <PDFText style={styles.tableCol}>{destination?.name}</PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.address1}\r\n                </PDFText>\r\n                <PDFText style={styles.tableCol}>\r\n                  {destination?.city}, {destination?.stateCode}{\" \"}\r\n                  {destination?.zipCode} {destination?.countryCode}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n            <View>\r\n              <View>\r\n                <PDFText style={styles.tableCol}>\r\n                  <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                    5.\r\n                  </PDFText>{\" \"}\r\n                  FORWARDING AGENT{\" \"}\r\n                  <PDFText\r\n                    style={{\r\n                      ...styles.tableCol,\r\n                      fontFamily: \"Open Sans Italic\",\r\n                    }}\r\n                  >\r\n                    (Complete name and address)\r\n                  </PDFText>\r\n                </PDFText>\r\n              </View>\r\n              <View style={{ ...styles.section, minHeight: 40, marginTop: 2 }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  {inputData?.forwardingAgent}\r\n                </PDFText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"50%\" }}>\r\n            <PDFRow style={{ flex: 1 }} direction=\"column\">\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  borderLeft: \"4px solid black\",\r\n                  borderTop: \"3px solid black\",\r\n                  borderBottom: \"4px solid black\",\r\n                }}\r\n              ></View>\r\n              <View\r\n                style={{\r\n                  ...pdfStyles.borderLeft,\r\n                  borderBottom: \"3px solid black\",\r\n                }}\r\n              >\r\n                <PDFRow>\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      ...pdfStyles.borderRight,\r\n                      padding: \"1px 3px\",\r\n                    }}\r\n                  >\r\n                    <PDFText style={styles.tableCol}>\r\n                      <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                        6.\r\n                      </PDFText>{\" \"}\r\n                      POINT (STATE) OF ORIGIN OR FTZ NO.\r\n                    </PDFText>\r\n                    <PDFText\r\n                      style={{\r\n                        ...styles.tableCol,\r\n                        marginLeft: 15,\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {inputData?.point}\r\n                    </PDFText>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      padding: \"1px 3px\",\r\n                    }}\r\n                  >\r\n                    <PDFText style={styles.tableCol}>\r\n                      <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                        7.\r\n                      </PDFText>{\" \"}\r\n                      COUNTRY OF ULTIMATE DESTINATION\r\n                    </PDFText>\r\n                    <PDFText\r\n                      style={{\r\n                        ...styles.tableCol,\r\n                        marginLeft: 15,\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {destination?.countryName}\r\n                    </PDFText>\r\n                  </View>\r\n                </PDFRow>\r\n              </View>\r\n            </PDFRow>\r\n          </View>\r\n        </PDFRow>\r\n      </View>\r\n      {/* ---------------------------------------------------- */}\r\n      <PDFRow>\r\n        <View style={{ width: \"50%\", ...pdfStyles.borderTop }}>\r\n          <PDFRow>\r\n            <View style={{ width: \"50%\", ...pdfStyles.borderRight }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  8.\r\n                </PDFText>{\" \"}\r\n                LOADING PIER{\" \"}\r\n                <PDFText\r\n                  style={{\r\n                    ...styles.tableCol,\r\n                    fontFamily: \"Open Sans Italic\",\r\n                  }}\r\n                >\r\n                  (Vessel only)\r\n                </PDFText>\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                {inputData?.loadingPier}\r\n              </PDFText>\r\n            </View>\r\n            <View style={{ width: \"50%\", padding: \"1px 3px\" }}>\r\n              <PDFText style={{ ...styles.tableCol }}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  9.\r\n                </PDFText>{\" \"}\r\n                METHOD OF TRANSPORTATION{\" \"}\r\n                <PDFText\r\n                  style={{\r\n                    ...styles.tableCol,\r\n                    fontFamily: \"Open Sans Italic\",\r\n                  }}\r\n                >\r\n                  (Specify)\r\n                </PDFText>\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                {shipmentDetails?.cargoType}\r\n              </PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View style={{ width: \"50%\", borderLeft: \"3px solid black\" }}>\r\n          <PDFRow style={{ flex: 1 }}>\r\n            <View\r\n              style={{\r\n                width: \"50%\",\r\n                ...pdfStyles.borderRight,\r\n                padding: \"1px 3px\",\r\n              }}\r\n            >\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  14.\r\n                </PDFText>{\" \"}\r\n                CARRIER IDENTIFICATION CODE\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                {shipmentDetails?.carrierShortName}\r\n              </PDFText>\r\n            </View>\r\n            <View style={{ width: \"50%\", padding: \"1px 3px\" }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  15.\r\n                </PDFText>{\" \"}\r\n                SHIPMENT REFERENCE NO.\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                {shipmentDetails?.shipmentNo}\r\n              </PDFText>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n      </PDFRow>\r\n      {/* ------------------------------------------------------- */}\r\n      {/* ---------------------------------------------------- */}\r\n      <PDFRow style={pdfStyles.borderTop}>\r\n        <View style={{ width: \"50%\" }}>\r\n          <PDFRow>\r\n            <View style={{ width: \"50%\", ...pdfStyles.borderRight }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  10.\r\n                </PDFText>{\" \"}\r\n                EXPORTING CARRIER\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                {shipmentDetails?.carrierName}\r\n              </PDFText>\r\n            </View>\r\n            <View style={{ width: \"50%\", padding: \"1px 3px\" }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  11.\r\n                </PDFText>{\" \"}\r\n                PORT OF EXPORT\r\n              </PDFText>\r\n              <View style={{ ...styles.section, marginTop: 1 }}>\r\n                {origin?.portName ? (\r\n                  <PDFText style={styles.tableCol}>\r\n                    {origin?.portName},{origin?.portCode} ({origin?.portType})\r\n                  </PDFText>\r\n                ) : (\r\n                  <>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {destination?.name}\r\n                    </PDFText>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {destination?.address1}\r\n                    </PDFText>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {destination?.city}, {destination?.stateCode}{\" \"}\r\n                      {destination?.zipCode} {destination?.countryCode}\r\n                    </PDFText>\r\n                  </>\r\n                )}\r\n              </View>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View\r\n          style={{\r\n            width: \"50%\",\r\n            borderLeft: \"3px solid black\",\r\n          }}\r\n        >\r\n          <PDFRow style={{ flex: 1 }}>\r\n            <View\r\n              style={{\r\n                width: \"50%\",\r\n                ...pdfStyles.borderRight,\r\n                padding: \"1px 3px\",\r\n              }}\r\n            >\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  16.\r\n                </PDFText>{\" \"}\r\n                ENTRY NUMBER\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                {inputData?.entryNo}\r\n              </PDFText>\r\n            </View>\r\n            <View style={{ width: \"50%\", padding: \"1px 3px\" }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  17.\r\n                </PDFText>{\" \"}\r\n                HAZARDOUS MATERIALS\r\n              </PDFText>\r\n              <PDFRow justify=\"center\">\r\n                <View style={{ marginRight: 10 }}>\r\n                  <PDFText>\r\n                    <PDFCheckBoxImg\r\n                      size={8}\r\n                      isChecked={inputData?.hazardousMaterialsYes}\r\n                    />{\" \"}\r\n                    Yes\r\n                  </PDFText>\r\n                </View>\r\n                <View>\r\n                  <PDFText>\r\n                    <PDFCheckBoxImg\r\n                      size={8}\r\n                      isChecked={inputData?.hazardousMaterialsNo}\r\n                    />{\" \"}\r\n                    No\r\n                  </PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n      </PDFRow>\r\n      {/* ------------------------------------------------------- */}{\" \"}\r\n      {/* ---------------------------------------------------- */}\r\n      <PDFRow style={pdfStyles.borderTop}>\r\n        <View style={{ width: \"50%\", borderBottom: \"4px solid black\" }}>\r\n          <PDFRow>\r\n            <View style={{ width: \"50%\", ...pdfStyles.borderRight }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  12.\r\n                </PDFText>{\" \"}\r\n                PORT OF UNLOADING{\" \"}\r\n                <PDFText\r\n                  style={{\r\n                    ...styles.tableCol,\r\n                    fontFamily: \"Open Sans Italic\",\r\n                  }}\r\n                >\r\n                  (Vessel and air only)\r\n                </PDFText>\r\n              </PDFText>\r\n              <View style={{ ...styles.section, marginTop: 1 }}>\r\n                {destination?.portName ? (\r\n                  <PDFText style={styles.tableCol}>\r\n                    {destination?.portName},{destination?.portCode} (\r\n                    {destination?.portType})\r\n                  </PDFText>\r\n                ) : (\r\n                  <>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {destination?.name}\r\n                    </PDFText>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {destination?.address1}\r\n                    </PDFText>\r\n                    <PDFText style={styles.tableCol}>\r\n                      {destination?.city}, {destination?.stateCode}{\" \"}\r\n                      {destination?.zipCode} {destination?.countryCode}\r\n                    </PDFText>\r\n                  </>\r\n                )}\r\n              </View>\r\n            </View>\r\n            <View style={{ width: \"50%\", padding: \"1px 3px\" }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  13.\r\n                </PDFText>{\" \"}\r\n                CONTAINERIZED{\" \"}\r\n                <PDFText\r\n                  style={{\r\n                    ...styles.tableCol,\r\n                    fontFamily: \"Open Sans Italic\",\r\n                  }}\r\n                >\r\n                  (Vessel only)\r\n                </PDFText>\r\n              </PDFText>\r\n              <PDFRow justify=\"center\">\r\n                <View style={{ marginRight: 10 }}>\r\n                  <PDFText>\r\n                    <PDFCheckBoxImg\r\n                      size={8}\r\n                      isChecked={inputData?.containerizedYes}\r\n                    />{\" \"}\r\n                    Yes\r\n                  </PDFText>\r\n                </View>\r\n                <View>\r\n                  <PDFText>\r\n                    <PDFCheckBoxImg\r\n                      size={8}\r\n                      isChecked={inputData?.containerizedNo}\r\n                    />{\" \"}\r\n                    No\r\n                  </PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n        <View\r\n          style={{\r\n            width: \"50%\",\r\n            borderLeft: \"3px solid black\",\r\n            ...pdfStyles.borderBottom,\r\n          }}\r\n        >\r\n          <PDFRow style={{ flex: 1 }}>\r\n            <View\r\n              style={{\r\n                width: \"50%\",\r\n                ...pdfStyles.borderRight,\r\n                padding: \"1px 3px\",\r\n              }}\r\n            >\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  18.\r\n                </PDFText>{\" \"}\r\n                IN BOND CODE\r\n              </PDFText>\r\n              <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                {inputData?.inBondCode}\r\n              </PDFText>\r\n            </View>\r\n            <View style={{ width: \"50%\", padding: \"1px 3px\" }}>\r\n              <PDFText style={styles.tableCol}>\r\n                <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                  19.\r\n                </PDFText>{\" \"}\r\n                ROUTED EXPORT TRANSACTION\r\n              </PDFText>\r\n              <PDFRow justify=\"center\">\r\n                <View style={{ marginRight: 10 }}>\r\n                  <PDFText>\r\n                    <PDFCheckBoxImg\r\n                      size={8}\r\n                      isChecked={inputData?.routedExportTransactionYes}\r\n                    />{\" \"}\r\n                    Yes\r\n                  </PDFText>\r\n                </View>\r\n                <View>\r\n                  <PDFText>\r\n                    <PDFCheckBoxImg\r\n                      size={8}\r\n                      isChecked={inputData?.routedExportTransactionNo}\r\n                    />{\" \"}\r\n                    No\r\n                  </PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </View>\r\n          </PDFRow>\r\n        </View>\r\n      </PDFRow>\r\n      {/* ------------------------------------------------------- */}\r\n      <PDFRow style={{ borderBottom: \"4px solid black\" }}>\r\n        <View style={{ width: \"50%\", height: 30 }}></View>\r\n        <View\r\n          style={{ width: \"50%\", height: 30, ...pdfStyles.borderLeft }}\r\n        ></View>\r\n      </PDFRow>\r\n      {/* ---------------------------------------------------------- */}\r\n      <View style={pdfStyles.borderBottom}>\r\n        <PDFTable>\r\n          <PDFTableRow>\r\n            <PDFTableCell\r\n              borderLeft={false}\r\n              borderTop={false}\r\n              width=\"70%\"\r\n              padding={0}\r\n            >\r\n              <View style={{ ...pdfStyles.borderBottom }}>\r\n                <PDFText style={styles.tableCol}>\r\n                  <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                    20.\r\n                  </PDFText>{\" \"}\r\n                  SCHEDULE B DESCRIPTION OF COMMODITIES{\" \"}\r\n                  <PDFText\r\n                    style={{\r\n                      ...styles.tableCol,\r\n                      fontFamily: \"Open Sans Italic\",\r\n                    }}\r\n                  >\r\n                    (Use columns 22–24)\r\n                  </PDFText>\r\n                </PDFText>\r\n              </View>\r\n              <PDFRow>\r\n                <View style={{ width: \"5%\", ...pdfStyles.borderRight }}>\r\n                  <PDFRow direction=\"column\" justify=\"space-between\">\r\n                    <View style={{ marginBottom: 10 }}>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        D/F or M\r\n                      </PDFText>\r\n                    </View>\r\n                    <View>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        (21)\r\n                      </PDFText>\r\n                    </View>\r\n                  </PDFRow>\r\n                </View>\r\n                <View style={{ width: \"50%\", ...pdfStyles.borderRight }}>\r\n                  <PDFRow direction=\"column\" justify=\"space-between\">\r\n                    <View style={{ marginBottom: 10 }}>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        SCHEDULE B NUMBER\r\n                      </PDFText>\r\n                    </View>\r\n                    <View>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        (22)\r\n                      </PDFText>\r\n                    </View>\r\n                  </PDFRow>\r\n                </View>\r\n                <View style={{ width: \"27%\", ...pdfStyles.borderRight }}>\r\n                  <PDFRow direction=\"column\" justify=\"space-between\">\r\n                    <View style={{ marginBottom: 10 }}>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        QUANTITY – SCHEDULE B UNIT(S)\r\n                      </PDFText>\r\n                    </View>\r\n                    <View>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        (23)\r\n                      </PDFText>\r\n                    </View>\r\n                  </PDFRow>\r\n                </View>\r\n                <View style={{ width: \"22%\" }}>\r\n                  <PDFRow direction=\"column\" justify=\"space-between\">\r\n                    <View style={{ marginBottom: 10 }}>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        SHIPPING WEIGHT{\" \"}\r\n                        <PDFText\r\n                          style={{\r\n                            ...styles.tableCol,\r\n                            textAlign: \"center\",\r\n                            fontFamily: \"Open Sans Italic\",\r\n                          }}\r\n                        >\r\n                          (Kilograms)\r\n                        </PDFText>\r\n                      </PDFText>\r\n                    </View>\r\n                    <View>\r\n                      <PDFText\r\n                        style={{ ...styles.tableCol, textAlign: \"center\" }}\r\n                      >\r\n                        (24)\r\n                      </PDFText>\r\n                    </View>\r\n                  </PDFRow>\r\n                </View>\r\n              </PDFRow>\r\n            </PDFTableCell>\r\n            <PDFTableCell width=\"20%\" borderTop={false}>\r\n              <PDFRow direction=\"column\" justify=\"space-between\">\r\n                <View style={{ marginBottom: 10 }}>\r\n                  <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                    VIN/PRODUCT NUMBER/ VEHICLE TITLE NUMBER\r\n                  </PDFText>\r\n                </View>\r\n                <View>\r\n                  <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                    (25)\r\n                  </PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </PDFTableCell>\r\n            <PDFTableCell width=\"15%\" borderTop={false} borderRight={false}>\r\n              <PDFRow direction=\"column\" justify=\"space-between\">\r\n                <View style={{ marginBottom: 10 }}>\r\n                  <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                    VALUE{\" \"}\r\n                    <PDFText\r\n                      style={{\r\n                        ...styles.tableCol,\r\n                        textAlign: \"center\",\r\n                        fontFamily: \"Open Sans Italic\",\r\n                      }}\r\n                    >\r\n                      (U.S. dollars, omit cents) (Selling price or cost if not\r\n                      sold)\r\n                    </PDFText>\r\n                  </PDFText>\r\n                </View>\r\n                <View>\r\n                  <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n                    (26)\r\n                  </PDFText>\r\n                </View>\r\n              </PDFRow>\r\n            </PDFTableCell>\r\n          </PDFTableRow>\r\n          {(productList ? productList : []).map((product, key) => (\r\n            <PDFTableRow key={key}>\r\n              <PDFTableCell\r\n                width=\"3.222%\"\r\n                borderBottom={false}\r\n                borderTop={false}\r\n                borderLeft={false}\r\n              >\r\n                <PDFText style={{ ...styles.tableCol }}>\r\n                  {productInputs?.[key]?.dOrM}\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell\r\n                width=\"32.296%\"\r\n                borderBottom={false}\r\n                borderTop={false}\r\n              >\r\n                <PDFText style={{ ...styles.tableCol }}>\r\n                  {product?.productCode} ({product?.productDescription})\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell\r\n                width=\"17.55%\"\r\n                borderBottom={false}\r\n                borderTop={false}\r\n              >\r\n                <PDFText style={{ ...styles.tableCol }}>\r\n                  {product?.billQty}\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell\r\n                width=\"14.506%\"\r\n                borderBottom={false}\r\n                borderTop={false}\r\n              >\r\n                <PDFText style={{ ...styles.tableCol }}>\r\n                  {convertToFloat(\r\n                    String(product?.weightUom).trim().toUpperCase() === \"LB\"\r\n                      ? product?.weight * 0.45359237\r\n                      : product?.weight\r\n                  )}\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell\r\n                width=\"19.13%\"\r\n                borderBottom={false}\r\n                borderTop={false}\r\n              >\r\n                <PDFText style={{ ...styles.tableCol }}>\r\n                  {productInputs?.[key]?.vehicleNo}\r\n                </PDFText>\r\n              </PDFTableCell>\r\n              <PDFTableCell\r\n                width=\"13%\"\r\n                borderBottom={false}\r\n                borderTop={false}\r\n                borderRight={false}\r\n              >\r\n                <PDFText style={{ ...styles.tableCol }}>\r\n                  {String(\r\n                    Number(product?.billQty ? product.billQty : 0) *\r\n                      Number(product?.unitPrice ? product.unitPrice : 0)\r\n                  )}\r\n                </PDFText>\r\n              </PDFTableCell>\r\n            </PDFTableRow>\r\n          ))}\r\n        </PDFTable>\r\n      </View>\r\n      <View\r\n        style={{\r\n          width: \"70%\",\r\n          borderRight: \"4px solid black\",\r\n          borderBottom: \"4px solid black\",\r\n        }}\r\n      >\r\n        <PDFRow style={{ borderBottom: \"4px solid black\" }}>\r\n          <View\r\n            style={{\r\n              width: \"70%\",\r\n              ...pdfStyles.borderRight,\r\n              minHeight: 30,\r\n            }}\r\n          >\r\n            <PDFText style={styles.tableCol}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                27.\r\n              </PDFText>{\" \"}\r\n              LICENSE NO./LICENSE EXCEPTION SYMBOL/AUTHORIZATION\r\n            </PDFText>\r\n            <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n              {inputData?.licenseNo}\r\n            </PDFText>\r\n          </View>\r\n          <View style={{ width: \"30%\" }}>\r\n            <PDFText style={styles.tableCol}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                28.\r\n              </PDFText>{\" \"}\r\n              ECCN{\" \"}\r\n              <PDFText\r\n                style={{\r\n                  ...styles.tableCol,\r\n                  fontFamily: \"Open Sans Italic\",\r\n                }}\r\n              >\r\n                (When required)\r\n              </PDFText>\r\n            </PDFText>\r\n            <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n              {inputData?.eccn}\r\n            </PDFText>\r\n          </View>\r\n        </PDFRow>\r\n        <PDFRow style={{ ...pdfStyles.borderBottom }}>\r\n          <View style={{ width: \"50%\", ...pdfStyles.borderRight }}>\r\n            <PDFText style={styles.tableCol}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                29.\r\n              </PDFText>{\" \"}\r\n              Duly authorized officer or employee\r\n            </PDFText>\r\n            <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n              {inputData?.authorizedOfficer}\r\n            </PDFText>\r\n          </View>\r\n          <View\r\n            style={{ width: \"50%\", position: \"relative\", padding: \"3px 2px\" }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: \"#ffffff\",\r\n                width: 2,\r\n                height: 5,\r\n                position: \"absolute\",\r\n                left: -2,\r\n                top: 7,\r\n              }}\r\n            ></View>\r\n            <PDFText style={styles.tableCol}>\r\n              The USPPI authorizes the forwarder named above to act as\r\n              forwarding agent for export control and customs purposes.\r\n            </PDFText>\r\n          </View>\r\n        </PDFRow>\r\n        <PDFRow style={pdfStyles.borderBottom}>\r\n          <View>\r\n            <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n              30.\r\n            </PDFText>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <PDFText style={styles.tableCol}>\r\n              I certify that all statements made and all information contained\r\n              herein are true and correct and that I have read and understand\r\n              the instructions for preparation of this document, set forth in\r\n              the{\" \"}\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                \"Correct Way to Fill Out the Shipper’s Export Declaration.\"\r\n              </PDFText>{\" \"}\r\n              I understand that civil and criminal penalties, including\r\n              forfeiture and sale, may be imposed for making false or fraudulent\r\n              statements herein, failing to provide the requested information or\r\n              for violation of U.S. laws on exportation (13 U.S.C. Sec. 305; 22\r\n              U.S.C. Sec. 401; 18 U.S.C. Sec. 1001; 50 U.S.C. App. 2410).\r\n            </PDFText>\r\n          </View>\r\n        </PDFRow>\r\n        <PDFRow style={pdfStyles.borderBottom}>\r\n          <View style={{ width: \"50%\", ...pdfStyles.borderRight }}>\r\n            <PDFText style={styles.tableCol}>Signature</PDFText>\r\n          </View>\r\n          <View style={{ width: \"50%\", padding: \"3px 2px\" }}>\r\n            <PDFText style={styles.tableCol}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                Confidential –\r\n              </PDFText>{\" \"}\r\n              For use solely for official purposes authorized by the Secretary\r\n              of Commerce (13 U.S.C. 301 (g)).\r\n            </PDFText>\r\n          </View>\r\n        </PDFRow>\r\n        <PDFRow style={pdfStyles.borderBottom}>\r\n          <View style={{ width: \"50%\", ...pdfStyles.borderRight }}>\r\n            <PDFText style={styles.tableCol}>Title</PDFText>\r\n            <PDFText style={styles.tableCol}>{inputData?.title}</PDFText>\r\n          </View>\r\n          <View style={{ width: \"50%\" }}>\r\n            <PDFText\r\n              style={{ ...styles.tableCol, fontFamily: \"Open Sans Italic\" }}\r\n            >\r\n              Export shipments are subject to inspection by U.S. Customs Service\r\n              and/or Office of Export Enforcement.\r\n            </PDFText>\r\n          </View>\r\n        </PDFRow>\r\n        <PDFRow style={pdfStyles.borderBottom}>\r\n          <View\r\n            style={{ width: \"50%\", ...pdfStyles.borderRight, minHeight: 30 }}\r\n          >\r\n            <PDFText style={styles.tableCol}>Date</PDFText>\r\n            <PDFText style={styles.tableCol}>\r\n              {formateWithMoment(inputData?.Date)}\r\n            </PDFText>\r\n          </View>{\" \"}\r\n          <View style={{ width: \"50%\" }}>\r\n            <PDFText style={styles.tableCol}>\r\n              <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n                31.\r\n              </PDFText>{\" \"}\r\n              AUTHENTICATION{\" \"}\r\n              <PDFText\r\n                style={{\r\n                  ...styles.tableCol,\r\n                  fontFamily: \"Open Sans Italic\",\r\n                }}\r\n              >\r\n                (When required)\r\n              </PDFText>\r\n            </PDFText>\r\n            <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n              {inputData?.authentication}\r\n            </PDFText>\r\n          </View>\r\n        </PDFRow>\r\n        <PDFRow>\r\n          <View\r\n            style={{ width: \"50%\", ...pdfStyles.borderRight, minHeight: 30 }}\r\n          >\r\n            <PDFText style={styles.tableCol}>\r\n              Telephone No.{\" \"}\r\n              <PDFText\r\n                style={{\r\n                  ...styles.tableCol,\r\n                  fontFamily: \"Open Sans Italic\",\r\n                }}\r\n              >\r\n                (Include Area Code)\r\n              </PDFText>\r\n            </PDFText>\r\n            <PDFText style={styles.tableCol}>{inputData?.telephone}</PDFText>\r\n          </View>{\" \"}\r\n          <View style={{ width: \"50%\" }}>\r\n            <PDFText style={styles.tableCol}>E-mail address</PDFText>\r\n            <PDFText style={{ ...styles.tableCol, textAlign: \"center\" }}>\r\n              {inputData?.emailAddress}\r\n            </PDFText>\r\n          </View>\r\n        </PDFRow>\r\n      </View>\r\n      <PDFRow justify=\"center\">\r\n        <View style={{ width: \"70%\", marginTop: 15 }}>\r\n          <PDFText style={styles.tableCol}>\r\n            This form may be printed by private parties provided it conforms to\r\n            the official form. For sale by the Superintendent of Documents,\r\n            Government Printing Office, Washington, DC 20402, and local Customs\r\n            District Directors. The{\" \"}\r\n            <PDFText style={{ ...styles.tableCol, fontWeight: 800 }}>\r\n              \"Correct Way to Fill Out the Shipper’s Export Declaration\"\r\n            </PDFText>{\" \"}\r\n            is available from the U.S. Census Bureau, Washington, DC 20233.\r\n          </PDFText>\r\n        </View>\r\n      </PDFRow>\r\n    </PDFPage>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: { paddingHorizontal: 10, paddingBottom: 2 },\r\n  title: { fontSize: 16, fontWeight: \"700\" },\r\n  headerRow: {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  section: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 3,\r\n  },\r\n  imageSection: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 10,\r\n  },\r\n  image: {\r\n    width: \"60%\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"700\",\r\n    fontSize: 8,\r\n    textAlign: \"center\",\r\n  },\r\n  tableCol: {\r\n    fontSize: 7,\r\n  },\r\n});\r\n\r\nexport default SedPrintDocument;\r\n","import React from \"react\";\r\nimport { Document } from \"@react-pdf/renderer\";\r\nimport SedPrintDocument from \"../../SedPrintDocument\";\r\n\r\nconst PDF = (props) => {\r\n  return (\r\n    <Document>\r\n      <SedPrintDocument {...props} />\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PDF;\r\n","import { expose } from \"comlink\";\r\nimport generateCMRPDF from \"../views/screens/Print/Shipment/components/workers/CMRWorker/pdf.worker\";\r\nimport generateCIPDF from \"../views/screens/Print/Shipment/components/workers/CIWorker/pdf.worker\";\r\nimport generatePLPDF from \"../views/screens/Print/Shipment/components/workers/PLWorker/pdf.worker\";\r\nimport generateBOLPDF from \"../views/screens/Print/Shipment/components/workers/BOLWorker/pdf.worker\";\r\nimport generateIMOPDF from \"../views/screens/Print/Shipment/components/workers/IMOWorker/pdf.worker\";\r\nimport generateSEDPDF from \"../views/screens/Print/Shipment/components/workers/SEDWorker/pdf.worker\";\r\nimport constructDataForRateEngine from \"../views/screens/Shipment/components/Tabs/RateShopDetails/worker/constructForRateEngine.worker\";\r\n\r\nconst exports = {\r\n  generateCMRPDF,\r\n  generateCIPDF,\r\n  generatePLPDF,\r\n  generateBOLPDF,\r\n  generateIMOPDF,\r\n  generateSEDPDF,\r\n  constructDataForRateEngine,\r\n};\r\n\r\nexpose(exports);\r\n","import { pdf } from \"@react-pdf/renderer\";\r\nimport PDF from \"./PDF\";\r\n\r\nconst generateSEDPDF = async (props) => {\r\n  console.log(\"started SED\");\r\n  const data = JSON.parse(props);\r\n  console.log(\"props\", data);\r\n  const result = await pdf(<PDF {...data} />).toBlob();\r\n  console.log(\"ended SED\");\r\n  return result;\r\n};\r\n\r\nexport default generateSEDPDF;\r\n","import { filter, find } from \"lodash\";\r\nimport { shipmentRateShopLocalToRateEngineAPI } from \"../../../../../../../utilz/shipmentDataManupulation\";\r\n\r\nconst constructDataForRateEngine = async (props) => {\r\n  console.log(\"started data construction for RateEngine\");\r\n  const {\r\n    shipmentDetailsLocal,\r\n    filterData,\r\n    shipmentBranches,\r\n    accountingFormData,\r\n    havingAccessForMenu,\r\n    isAPIRateShop,\r\n  } = JSON.parse(props);\r\n  // console.log(\"props\", props);\r\n  let accessorials = [];\r\n  if (accountingFormData?.accessorials) {\r\n    accessorials = filter(\r\n      accountingFormData?.accessorials,\r\n      havingAccessForMenu\r\n        ? {\r\n            isChecked: true,\r\n          }\r\n        : {}\r\n    )?.map((row) => ({\r\n      AccessorialCode: row.accChargeType?.trim(),\r\n      Description: row.codeDesc,\r\n      BilledAmount: 0,\r\n      CurrencyCode: null,\r\n    }));\r\n  }\r\n\r\n  const branchDetails = find(shipmentBranches.data, {\r\n    branchKey: shipmentDetailsLocal.branchKey,\r\n  });\r\n  filterData.cargoType = filterData.cargoType?.length\r\n    ? filterData.cargoType.join(\",\")\r\n    : \"\";\r\n  let formData = shipmentRateShopLocalToRateEngineAPI(\r\n    accessorials,\r\n    shipmentDetailsLocal,\r\n    filterData,\r\n    branchDetails?.currencyCode ? branchDetails?.currencyCode : \"**\",\r\n    isAPIRateShop\r\n  );\r\n  formData.isNeedToSave = true;\r\n  formData.isAPIRateShop = isAPIRateShop;\r\n  // formData.carrierKey = String(formData.carrierKey);\r\n  console.log(\"ended data construction for RateEngine\");\r\n  return formData;\r\n};\r\n\r\nexport default constructDataForRateEngine;\r\n"],"names":["Trans","i18n","valueToString","val","String","valueToNumber","Number","stringToNull","_val$trim","trim","length","getRateShopStringAll","toLocaleUpperCase","stringIsNullOrEmpty","convertToFloat","decimal","arguments","undefined","parseFloat","toFixed","_ref","isChecked","size","_jsx","Image","src","style","width","height","Font","register","family","fonts","fontWeight","opnSansItalic","registerHyphenationCallback","word","PDFRow","children","justify","align","direction","rest","styles","StyleSheet","create","row","display","flexDirection","justifyContent","alignItems","View","PDFText","_ref2","text","fontFamily","fontSize","wordWrap","Text","PDFDarkHeader","_ref3","textStyles","isFirst","header","backgroundColor","paddingBottom","paddingVertical","color","textAlign","PDFTable","_ref4","overflow","PDFTableRow","_ref5","flexWrap","PDFTableCell","_ref6","borderTop","borderRight","borderBottom","borderLeft","padding","view","marginTop","marginLeft","paddingHorizontal","getTableCellBorder","PDFDivider","_ref7","PdfGetTextUnderline","_ref8","value","textDecoration","PDFCheckBox","_ref9","label","isReverse","colon","_jsxs","concat","marginRight","PDFCheckBoxImg","PDFPage","_ref10","page","ontFamily","Page","orientation","pdfStyles","border","title","headerRow","section","imageSection","image","tableHeader","tableCol","SHIPMENT_RATE_SHOP_RATTING_PREFERENCES","formateWithMoment","date","format","dateStringFormat","moment","getShipmentOriginDestinationDetails","stops","origin","orderBy","destination","marginBottom","cellPadding","shipmentDetails","inputData","productList","productInputs","documentList","carrierData","useMemo","transportationList","position","flex","marginVertical","name","address1","city","stateCode","zipCode","countryCode","carrierName","carrierAddress1","carrierCity","carrierStateCode","carrierZip","carrierCountryName","successiveCarriers","requestedDate","carriersReservations","map","file","key","fileDescription","referenceNo","product","_productInputs$key","_productInputs$key2","marksAndNumbers","billQty","billQtyUomName","productDescription","statisticalNumber","weightUom","toUpperCase","weight","weightUOM","shipmentTotalWeight","sumBy","proNo","sendersInstructions","carrierChargesSender","carrierChargesCurrency","carrierChargesConsignee","supplementChargesSender","supplementChargesCurrency","supplementChargesConsignee","otherChargesSender","otherChargesCurrency","otherChargesConsignee","totalChargesSender","totalChargesCurrency","totalChargesConsignee","cashOnDelivery","directionPayment","shipmentNotes","detailNotes","stateName","countryName","goodReceived","actualDate","transform","transformOrigin","left","bottom","fixed","render","pageNumber","Fragment","Document","CMRPrintDocument","async","console","log","data","JSON","parse","props","result","pdf","PDF","toBlob","_ciData$products","ciData","translations","t","useTranslation","invoiceLineTotal","products","totalAmount","shipDate","commercialInvoice","ciNo","commercialInvoiceNo","shipFrom","export","identificationNumber","shipperEIN","tableColumn","shipperName","shipperAddress","shipperCountryCode","shipperState","_Fragment","shipperZip","shipperCity","consigneeEIN","consigneeName","consigneeAddress","consigneeCountryCode","consigneeState","consigneeZip","consigneeCity","ciRefNo","customRelease","releaseReferenceNo","referenceDate","ciRefNoDate","releaseDate","releaseReferenceNoDate","soldTo","saiName","saiAddress","saiCountryCode","saiState","saiZip","saiCity","productCode","productDesc","htsCode","license","quantity","quantityUOM","unitPrice","currency","hts","eccn","countryOfOrigin","unitMeasure","currencyCode","invoiceLine","insurance","freight","rateShopCost","totalInvoice","legalText","totalPages","CIPrintDocument","_plData$products","plData","shipdate","packingList","plNo","shipmentNo","billTo","billToName","billToCountryCode","billToAddress","billToState","billToZip","billToCity","vendorAdress","vendorName","vendorAddress","vendorCountryCode","vendorState","vendorZip","vendorCity","poNumber","lineNo","packageID","packageQty","totalWeight","totalItemQty","packageDimensions","cube","lineNos","packageId","billQtyUOMDesc","dimUOM","dimUOMDesc","total","uniq","join","_ref11","PLPrintDocument","_bolData$items","bolData","barCodeImage","freightChargeTerms","thirdPartyShipmentData","shipmentDate","billOfLanding","bolNo","address","countryCityStateZip","contact","shipperContactName","phone","shipperBusinessPhone","docNumberConfirmationNumber","shipperReferenceNo","SID","fobCode","FOB","shipperDockNo","shipTo","minWidth","location","consigneeLocation","location2","consigneeContactName","consigneeBusinessPhone","consigneeReferenceNo","consigneeDockNo","thirdParty","ThirdPartyShipmentTerms","billOfLadingNumber","trailerNumber","sealNumber","scac","proNumber","serviceDescription","freightChargesArePrepaid","masterBillOfLadingAttached","masterBillOfLading","minHeight","specialInstructions","customerOrderInformation","customerOrderNumber","weightTable","palletSlip","additionalShipperInfo","items","billQtyUOM","palletLoadType","grandTotal","carrierInfo","handlingUnit","package","additionalUnit","qty","type","hazmat","commodityDescription","commodityText","ltlOnly","whiteSpace","classTable","cartonQty","cartonUOMDesc","toLowerCase","nmfcClassNumber","class","_ref12","_ref13","CodSection","noteLiability","received","carrierShall","shipperSignature","shipperSignatureDate","certify","trailerLoaded","paddingLeft","byShipper","trailerByShipper","byDriver","trailerByDriver","freightCounted","freightByShipper","byDriverPallets","freightByDriverPallets","byDriverPieces","freightByDriverPieces","carrierPickupDate","carrierAcknowledges","_ref14","of","_ref15","_ref16","className","address2Label","address2","_ref17","whereTheRate","theAgreed","agreedValue1","agreedValue2","codAmount","marginHorizontal","feeTerms","option_c","freeTermsCollect","option_p","freeTermsPrePaid","customerCheck","freeTermsCustomerCheque","BolPrintDocument","shippersRef","freightForwardRef","carrierDeclare","shipperDeclaration","vesselFlight","vesselDate","portHandling","additionalHandlingInfo","ctuIdNo","sealNo","ctuSizeAndType","organizationRemarks","companyName","haulersName","pnCompanyName","nameStatusDeclarant","vehicleRegNo","pnNameStatusDeclarant","place","driverName","driverDate","pnPlace","pnDate","signature","driverSignature","pnSignature","ImoPrintDocument","transportationReferenceNo","idNo","partiesToTransactionYes","partiesToTransactionNo","forwardingAgent","point","loadingPier","cargoType","carrierShortName","portName","portCode","portType","entryNo","hazardousMaterialsYes","hazardousMaterialsNo","containerizedYes","containerizedNo","inBondCode","routedExportTransactionYes","routedExportTransactionNo","dOrM","vehicleNo","licenseNo","authorizedOfficer","top","Date","authentication","telephone","emailAddress","SedPrintDocument","exports","generateCMRPDF","generateCIPDF","generatePLPDF","generateBOLPDF","generateIMOPDF","generateSEDPDF","constructDataForRateEngine","_filterData$cargoType","shipmentDetailsLocal","filterData","shipmentBranches","accountingFormData","havingAccessForMenu","isAPIRateShop","accessorials","_filter","filter","_row$accChargeType","AccessorialCode","accChargeType","Description","codeDesc","BilledAmount","CurrencyCode","branchDetails","find","branchKey","formData","_shipmentDate","_originList$","_originList$2","_destList","Accessorials","shipmentOrigin","shipmentDestination","originList","stopType","destList","getValuesFromMoment","_value","get","deliveryDate","_deliveryDate","_destList2","_destList3","set","hour","requestedTime","minute","second","millisecond","splice","mainData","Details","_ref21","index","SequenceNumber","NumberOfPieces","ActualWeight","BilledWeight","BilledWeightUOM","RatingClass","MeasurementType","BilledQuantity","Length","Width","Height","Cube","CubeUOM","dimUom","Lanes","Id","LaneKey","Origin","Port","Key","portRecKey","Type","Code","primaryKey","Address1","Address2","City","StateCode","CountryCode","Postal","PostalTo","BranchKey","Destination","MileageMile","Stops","LaneId","Sequence","sequence","ShipRecKey","shipmentKey","Location","Taxes","taxes","taxAmount","taxTypeDesc","TaxCode","taxTypeCode","CriteriaId","Source","AuditType","CustomerKey","customerKey","CarrierKey","requiredCarrierKey","TrailerKey","trailerKey","ShipmentDate","valueOf","DeliveryDate","PricingType","PricingBasis","pricingBasis","CargoType","WeightUnitOfMeasure","ServiceKey","serviceKey","ServiceCode","IntercompanyType","shipmentTerms","DiscountMode","shipmentType","ShipmentTerms","TimeFrame","TransportationMode","LinerCode","LinerType","AccountNumber","accountNumber","IsShipmentRateshop","PackageBranchKeys","totalMileage","MileageKilometer","Weight","totalCube","ProductCode","Debug","TaxableValue","DeclaredValue","CODValue","LDMValue","ItemLevelRating","ContractNumber","FreightChargeBilled","TotalAccessorialBilled","havingLeastCost","carrierRequirements","RateQuote","CarrierKeys","AccountNos","nVision_request","AppsName","LoginID","Password","ApplicationID","ConnectionString","DNSIdentifier","EndPointAddress","LicenceKey","ModuleName","OwnerID","ServiceExpiryDate","ServiceModuleID","UserID","UserName","AccessToken","Action","AuthenticationToken","LoadOptions","RequestId","Version","ErrorMessage","RateShopCriteria","shipmentRateShopLocalToRateEngineAPI","isNeedToSave","expose"],"sourceRoot":""}