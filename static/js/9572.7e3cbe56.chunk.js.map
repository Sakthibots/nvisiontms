{"version":3,"file":"static/js/9572.7e3cbe56.chunk.js","mappings":"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","sources":["assets/icons/mail.svg","views/components/Inputs/TextEditor.jsx","assets/icons/full-screen.svg","assets/logo.svg","views/layouts/components/DynamicFontSize.jsx","views/screens/MessageCenter/components/MessageCenterFolders/FolderButton.jsx","views/screens/MessageCenter/components/MessageCenterFolders/MessageCenterFolders.jsx","views/screens/MessageCenter/components/MessageContents/MessageList.jsx","views/screens/MessageCenter/components/MessageContents/MessageContent.jsx","views/components/Modals/DraggableModal.jsx","views/screens/MessageCenter/components/ComposeMessage/FilterComponents/EmailFilterCard.jsx","views/screens/MessageCenter/components/ComposeMessage/FilterComponents/EmailFilterHeader.jsx","views/screens/MessageCenter/components/ComposeMessage/FilterComponents/FilterEmailList.jsx","views/screens/MessageCenter/components/ComposeMessage/FilterComponents/SelectedEmailList.jsx","views/screens/MessageCenter/components/ComposeMessage/EmailsFilterComponent.jsx","views/screens/MessageCenter/components/ComposeMessage/EmailsFilterModal.jsx","views/screens/MessageCenter/components/ComposeMessage/ComposeMessageForm.jsx","views/screens/MessageCenter/MessageComposeModal.jsx","views/screens/MessageCenter/MessageCenterModal.jsx","views/layouts/PrimaryMenu.jsx","views/layouts/SecondaryMenu.jsx","views/layouts/AppLayouts.jsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMail(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 18,\n    viewBox: \"0 0 24 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.75 0H2.25002C1.00928 0 0 1.00928 0 2.25002V15.75C0 16.9907 1.00928 18 2.25002 18H21.75C22.9907 18 24 16.9907 24 15.75V2.25002C24 1.00928 22.9907 0 21.75 0ZM21.75 1.49999C21.8519 1.49999 21.9488 1.52114 22.0374 1.55806L12 10.2576L1.9625 1.55806C2.05113 1.52119 2.14807 1.49999 2.24997 1.49999H21.75ZM21.75 16.5H2.25002C1.8362 16.5 1.49999 16.1638 1.49999 15.75V3.14282L11.5085 11.8169C11.6499 11.9392 11.825 12 12 12C12.175 12 12.3501 11.9392 12.4915 11.8169L22.5 3.14282V15.75C22.5 16.1638 22.1638 16.5 21.75 16.5Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMail);\nexport default __webpack_public_path__ + \"static/media/mail.d42d083c2023de6e599a41a9ba4b4d54.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { Spin } from \"antd\";\nimport { useState } from \"react\";\n\nconst TextEditor = ({ value = \"\", onChange = () => {} }) => {\n  const [editorReady, setEditorReady] = useState(false);\n  return (\n    <div className=\"text-editor-container\">\n      <Spin spinning={!editorReady}>\n        <CKEditor\n          editor={ClassicEditor}\n          data={String(value)}\n          onReady={(editor) => {\n            setEditorReady(true);\n          }}\n          onChange={(event, editor) => onChange(editor.getData())}\n          config={{\n            fontFamily: {\n              options: [\n                \"default\",\n                \"Ubuntu, Arial, sans-serif\",\n                \"Ubuntu Mono, Courier New, Courier, monospace\",\n              ],\n            },\n            toolbar: {\n              fontFamily: {\n                options: [\n                  \"default\",\n                  \"Ubuntu, Arial, sans-serif\",\n                  \"Ubuntu Mono, Courier New, Courier, monospace\",\n                ],\n              },\n              items: [\n                \"heading\",\n                \"|\",\n                \"fontFamily\",\n                \"bold\",\n                \"italic\",\n                \"link\",\n                \"bulletedList\",\n                \"numberedList\",\n                \"|\",\n                \"outdent\",\n                \"indent\",\n                \"|\",\n                \"imageUpload\",\n                \"blockQuote\",\n                \"insertTable\",\n                \"mediaEmbed\",\n\n                \"alignment\",\n                \"code\",\n                \"codeBlock\",\n                \"findAndReplace\",\n                \"fontColor\",\n                \"fontFamily\",\n                \"fontSize\",\n                \"fontBackgroundColor\",\n                \"highlight\",\n                \"horizontalLine\",\n                \"htmlEmbed\",\n                \"imageInsert\",\n                \"|\",\n                \"undo\",\n                \"redo\",\n              ],\n            },\n\n            language: \"en\",\n            image: {\n              toolbar: [\n                \"imageTextAlternative\",\n                \"toggleImageCaption\",\n                \"imageStyle:inline\",\n                \"imageStyle:block\",\n                \"imageStyle:side\",\n              ],\n            },\n            table: {\n              contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\n            },\n          }}\n        />\n      </Spin>\n    </div>\n  );\n};\n\nexport default TextEditor;\n","var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFullScreen(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7 0H1H0V0.974138V6.81897H1V0.974138H7V0Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9 15.5862L15 15.5862L16 15.5862L16 14.6121L16 8.76724L15 8.76724L15 14.6121L9 14.6121L9 15.5862Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16 6.81897L16 0.974138L16 0L15 -4.37114e-08L9 -3.0598e-07L9 0.974138L15 0.974138L15 6.81897L16 6.81897Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9.1794e-07 8.76724L1.31135e-07 14.6121L0 15.5862L1 15.5862L7 15.5862L7 14.6121L1 14.6121L1 8.76724L9.1794e-07 8.76724Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFullScreen);\nexport default __webpack_public_path__ + \"static/media/full-screen.772601bd813d13894ad2fc1562c568e1.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 147,\n    height: 17,\n    viewBox: \"0 0 147 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.61 16.2187H7.23V10.2765C7.23 8.62042 6.62 7.7924 5.41 7.7924C4.82 7.7924 4.34 8.01645 3.96 8.45482C3.58 8.88344 3.39 9.43869 3.39 10.1109V16.209H0V5.52266H3.39V7.21766H3.43C4.24 5.91232 5.41 5.25964 6.96 5.25964C9.39 5.25964 10.61 6.73059 10.61 9.67249V16.2187Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.4202 1.23657L21.1202 16.2188H17.2002L11.9702 1.23657H15.7002L18.9102 11.6598C19.0802 12.2248 19.1802 12.7217 19.2202 13.1503H19.2802C19.3302 12.6827 19.4402 12.1761 19.6102 11.6111L22.8002 1.23657H26.4202Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.6502 3.82774C29.0802 3.82774 28.6102 3.66214 28.2502 3.33093C27.8902 2.99973 27.7002 2.59059 27.7002 2.11326C27.7002 1.61645 27.8802 1.21705 28.2502 0.90533C28.6202 0.593606 29.0802 0.437744 29.6502 0.437744C30.2302 0.437744 30.7002 0.593606 31.0602 0.90533C31.4202 1.21705 31.6002 1.62619 31.6002 2.11326C31.6002 2.61007 31.4202 3.02895 31.0602 3.35042C30.7002 3.66214 30.2302 3.82774 29.6502 3.82774ZM31.3302 16.2188H27.9402V5.52274H31.3302V16.2188Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.4602 15.9363V13.2574C34.0202 13.5886 34.5702 13.8321 35.1302 13.988C35.6802 14.1439 36.2102 14.2315 36.7002 14.2315C37.3002 14.2315 37.7702 14.1536 38.1202 13.988C38.4702 13.8321 38.6402 13.5886 38.6402 13.2574C38.6402 13.0528 38.5602 12.8775 38.4002 12.7314C38.2402 12.595 38.0402 12.4683 37.7902 12.3612C37.5402 12.254 37.2702 12.1664 36.9802 12.0787C36.6902 11.991 36.4002 11.9033 36.1302 11.7962C35.6902 11.6403 35.3102 11.465 34.9802 11.2799C34.6502 11.0948 34.3702 10.8805 34.1402 10.637C33.9102 10.3934 33.7402 10.1109 33.6302 9.78946C33.5102 9.46799 33.4502 9.08808 33.4502 8.64972C33.4502 8.04575 33.5802 7.5392 33.8502 7.10084C34.1202 6.66248 34.4802 6.31179 34.9202 6.03903C35.3702 5.76627 35.8802 5.5617 36.4502 5.43506C37.0202 5.30842 37.6202 5.24023 38.2502 5.24023C38.7402 5.24023 39.2302 5.2792 39.7302 5.34739C40.2302 5.41558 40.7202 5.52273 41.2102 5.66886V8.2211C40.7802 7.97756 40.3202 7.79248 39.8302 7.67558C39.3402 7.55868 38.8602 7.49049 38.3902 7.49049C38.1702 7.49049 37.9602 7.50998 37.7602 7.54894C37.5602 7.58791 37.3902 7.64636 37.2402 7.71455C37.0902 7.79248 36.9702 7.88015 36.8902 7.99705C36.8002 8.11394 36.7602 8.24058 36.7602 8.3867C36.7602 8.58153 36.8202 8.74713 36.9502 8.88351C37.0802 9.01989 37.2502 9.14653 37.4502 9.24394C37.6602 9.34136 37.8902 9.43877 38.1402 9.5167C38.3902 9.59463 38.6502 9.6823 38.9002 9.76023C39.3502 9.9161 39.7602 10.0817 40.1202 10.257C40.4802 10.4421 40.8002 10.6467 41.0602 10.8902C41.3202 11.1338 41.5202 11.4163 41.6602 11.7475C41.8002 12.0787 41.8702 12.4683 41.8702 12.9164C41.8702 13.5496 41.7302 14.0951 41.4502 14.5433C41.1702 14.9914 40.7902 15.3615 40.3202 15.644C39.8502 15.9265 39.3102 16.1311 38.7002 16.2577C38.0902 16.3844 37.4502 16.4526 36.8002 16.4526C35.6102 16.4818 34.4902 16.2967 33.4602 15.9363Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.5599 3.82774C44.9899 3.82774 44.5199 3.66214 44.1599 3.33093C43.7999 2.99973 43.6099 2.59059 43.6099 2.11326C43.6099 1.61645 43.7899 1.21705 44.1599 0.90533C44.5299 0.593606 44.9899 0.437744 45.5599 0.437744C46.1399 0.437744 46.6099 0.593606 46.9699 0.90533C47.3299 1.21705 47.5099 1.62619 47.5099 2.11326C47.5099 2.61007 47.3299 3.02895 46.9699 3.35042C46.6099 3.66214 46.1399 3.82774 45.5599 3.82774ZM47.2299 16.2188H43.8399V5.52274H47.2299V16.2188Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.3202 16.4817C53.4902 16.4817 52.0502 15.9849 51.0002 14.9815C49.9502 13.9782 49.4302 12.6241 49.4302 10.9096C49.4302 9.13671 49.9702 7.75344 51.0602 6.75982C52.1502 5.75645 53.6202 5.25964 55.4702 5.25964C57.2902 5.25964 58.7202 5.75645 59.7602 6.75982C60.8002 7.76318 61.3202 9.07826 61.3202 10.7246C61.3202 12.4975 60.7902 13.9002 59.7202 14.9328C58.6502 15.9654 57.1702 16.4817 55.3202 16.4817ZM55.4002 7.78266C54.6002 7.78266 53.9802 8.05542 53.5302 8.5912C53.0902 9.12697 52.8702 9.8868 52.8702 10.8707C52.8702 12.9261 53.7202 13.949 55.4202 13.949C57.0402 13.949 57.8502 12.8969 57.8502 10.783C57.8602 8.78602 57.0402 7.78266 55.4002 7.78266Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.1198 16.2187H70.7398V10.2765C70.7398 8.62042 70.1298 7.7924 68.9198 7.7924C68.3298 7.7924 67.8498 8.01645 67.4698 8.45482C67.0898 8.88344 66.8998 9.43869 66.8998 10.1109V16.209H63.5098V5.52266H66.8998V7.21766H66.9398C67.7498 5.91232 68.9198 5.25964 70.4698 5.25964C72.8998 5.25964 74.1198 6.73059 74.1198 9.67249V16.2187Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95.8102 15.2153C94.3102 16.0531 92.4402 16.4817 90.2102 16.4817C87.7402 16.4817 85.7902 15.8193 84.3602 14.4847C82.9302 13.1502 82.2202 11.3188 82.2202 8.97111C82.2202 6.6137 83.0002 4.69464 84.5602 3.21395C86.1202 1.73326 88.1902 0.99292 90.7802 0.99292C92.4102 0.99292 93.8502 1.21697 95.0902 1.65533V4.82128C93.9002 4.14913 92.4502 3.81792 90.7402 3.81792C89.3002 3.81792 88.1302 4.27576 87.2302 5.18171C86.3302 6.08766 85.8702 7.30533 85.8702 8.82499C85.8702 10.3641 86.2802 11.5526 87.0902 12.4001C87.9002 13.2476 89.0002 13.6665 90.3802 13.6665C91.2102 13.6665 91.8702 13.5496 92.3502 13.3255V10.4031H89.2702V7.68525H95.8102V15.2153Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M101.86 16.2188H98.4702V0.379272H101.86V16.2188Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M109.94 16.4817C108.11 16.4817 106.67 15.9849 105.62 14.9815C104.57 13.9782 104.05 12.6241 104.05 10.9096C104.05 9.13671 104.59 7.75344 105.68 6.75982C106.77 5.75645 108.24 5.25964 110.09 5.25964C111.91 5.25964 113.34 5.75645 114.38 6.75982C115.42 7.76318 115.94 9.07826 115.94 10.7246C115.94 12.4975 115.41 13.9002 114.34 14.9328C113.27 15.9654 111.8 16.4817 109.94 16.4817ZM110.03 7.78266C109.23 7.78266 108.61 8.05542 108.16 8.5912C107.72 9.12697 107.5 9.8868 107.5 10.8707C107.5 12.9261 108.35 13.949 110.05 13.949C111.67 13.949 112.48 12.8969 112.48 10.783C112.49 8.78602 111.67 7.78266 110.03 7.78266Z\",\n    fill: \"white\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.57 14.9719H121.53V16.2188H118.14V0.379272H121.53V7.13005H121.57C122.41 5.88315 123.6 5.2597 125.14 5.2597C126.56 5.2597 127.65 5.73703 128.41 6.68194C129.17 7.62686 129.56 8.92246 129.56 10.5688C129.56 12.3514 129.11 13.7834 128.22 14.8647C127.33 15.946 126.13 16.4818 124.64 16.4818C123.29 16.4818 122.26 15.9752 121.57 14.9719ZM121.47 10.4616V11.5624C121.47 12.254 121.67 12.819 122.08 13.2769C122.49 13.725 123.01 13.9588 123.65 13.9588C124.42 13.9588 125.02 13.6665 125.45 13.082C125.88 12.4975 126.09 11.6793 126.09 10.6077C126.09 9.72126 125.9 9.02962 125.51 8.53281C125.12 8.036 124.56 7.78272 123.84 7.78272C123.16 7.78272 122.6 8.02626 122.15 8.52307C121.7 9.01988 121.47 9.66281 121.47 10.4616Z\",\n    fill: \"white\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.68 16.2187H137.47V14.6796H137.43C136.69 15.8777 135.6 16.472 134.16 16.472C133.09 16.472 132.26 16.1797 131.65 15.5855C131.04 15.001 130.73 14.212 130.73 13.2281C130.73 11.1532 131.99 9.95499 134.52 9.63352L137.5 9.24387C137.5 8.0749 136.85 7.49042 135.55 7.49042C134.24 7.49042 133 7.87033 131.82 8.63016V6.15585C132.29 5.92206 132.94 5.70775 133.76 5.5324C134.58 5.34732 135.32 5.25964 136 5.25964C139.13 5.25964 140.7 6.7793 140.7 9.82835V16.2187H140.68ZM137.5 11.874V11.1532L135.51 11.4065C134.41 11.5428 133.86 12.0299 133.86 12.8579C133.86 13.2378 133.99 13.5398 134.26 13.7834C134.53 14.0269 134.89 14.1438 135.35 14.1438C135.99 14.1438 136.5 13.9295 136.91 13.5009C137.3 13.0625 137.5 12.5267 137.5 11.874Z\",\n    fill: \"white\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.75 16.2188H143.36V0.379272H146.75V16.2188Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.7ad388e75f0b21e17f9a2c8127d5c856.svg\";\nexport { ForwardRef as ReactComponent };","import { Col, Row } from \"antd\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport IconButton from \"../../components/Buttons/IconButton\";\nimport { useLocation } from \"react-router-dom\";\nimport { routeFileSelector } from \"../../../utilz/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nconst lowest = \"-30%\";\nconst middle = \"-10%\";\nconst highest = \"10%\";\n\nconst DynamicFontSize = () => {\n  const [percent, setPercent] = useState(middle);\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, 'translation']);\n\n  useEffect(() => {\n    const p = localStorage.getItem(\"fontZoomLevel\");\n    if (p) {\n      handleClick(p);\n    }\n  }, []);\n\n  const handleClick = (p) => {\n    localStorage.setItem(\"fontZoomLevel\", p);\n    setPercent(p);\n    document.documentElement.style.setProperty(\"--fontSizePercent\", p);\n  };\n  return (\n    <div className=\"dynamic-font-size-container\">\n      <Row className=\"text-container\" gutter={5} justify={\"space-between\"}>\n        <Col>\n          <IconButton\n            onClick={() => handleClick(lowest)}\n            className={`${percent === lowest && \"active\"}`}\n          >\n            A\n          </IconButton>\n        </Col>\n        <Col>\n          <IconButton\n            onClick={() => handleClick(middle)}\n            className={`${percent === middle && \"active\"}`}\n          >\n            A\n          </IconButton>\n        </Col>\n        <Col>\n          <IconButton\n            onClick={() => handleClick(highest)}\n            className={`${percent === highest && \"active\"}`}\n          >\n            A\n          </IconButton>\n        </Col>\n      </Row>\n      <div className=\"line-container\">\n        <span className={`${percent === lowest && \"active\"}`}></span>\n        <span className={`${percent === middle && \"active\"}`}></span>\n        <span className={`${percent === highest && \"active\"}`}></span>\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicFontSize;\n","import React from \"react\";\n\nconst FolderButton = ({ title, active, badge = false, onClick = () => {} }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={`email-folder-button f-14 ${active ? \"active\" : \"\"} ${\n        badge ? \"fw-800\" : \"\"\n      }`}\n    >\n      {title}\n      {badge ? `(${badge})` : \"\"}\n    </button>\n  );\n};\n\nexport default FolderButton;\n","import React, { useEffect } from \"react\";\nimport FolderButton from \"./FolderButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setMessageCenterActiveFolderId } from \"../../../../../redux/MessageCenter/MessageCenterActions\";\n\nconst MessageCenterFolders = () => {\n  const dispatch = useDispatch();\n  const { folders, activeFolderId } = useSelector(\n    (state) => state.messageCenter\n  );\n\n  useEffect(() => {\n    if (folders.success && folders?.data?.length && !activeFolderId) {\n      handleFolderClick(folders.data[0].folderID)();\n    }\n  }, [folders.success, activeFolderId]);\n\n  const handleFolderClick = (folderID) => () => {\n    dispatch(setMessageCenterActiveFolderId(folderID));\n  };\n\n  return (\n    <div className=\"h-100 custom-scroll-bar email-folder-container border-right-border\">\n      {folders.data.map((row) => (\n        <FolderButton\n          key={row.folderID}\n          title={row.folderName}\n          badge={row.unReadMail}\n          active={row.folderID === activeFolderId}\n          onClick={handleFolderClick(row.folderID)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default MessageCenterFolders;\n","import { Col, Form, Popconfirm, Row, Spin } from \"antd\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport FormInput from \"../../../../components/Inputs/FormInput\";\n\nimport { ReactComponent as SearchIcon } from \"../../../../../assets/icons/zoom-input.svg\";\nimport { ReactComponent as DeleteIcon } from \"../../../../../assets/icons/delete-icon.svg\";\nimport SvgConverter from \"../../../../components/Common/SvgConverter\";\nimport PrimaryLabel from \"../../../../components/Labels/PrimaryLabel\";\nimport SecondaryLabel from \"../../../../components/Labels/SecondaryLabel\";\nimport IconButton from \"../../../../components/Buttons/IconButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectActiveFolderDetails } from \"../../../../../redux/MessageCenter/MessageCenterReducer\";\nimport {\n  deleteMessageInProgress,\n  getMessageListInProgress,\n  setMessageCenterActiveMessageId,\n} from \"../../../../../redux/MessageCenter/MessageCenterActions\";\nimport parse from \"html-react-parser\";\nimport ContentSpinner from \"../../../../components/Spinners/ContentSpinner\";\nimport { useLocation } from \"react-router\";\nimport { routeFileSelector } from \"../../../../../utilz/i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  checkIsSentItemMessage,\n  stopPropagation,\n} from \"../../../../../utilz/utilz\";\nimport { includes } from \"lodash\";\nimport ScrollPagination from \"../../../../components/Paginations/ScrollPagination\";\nimport { useDebounce } from \"use-debounce\";\n\nconst MessageList = () => {\n  const [form] = Form.useForm();\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, \"translation\"]);\n  const dispatch = useDispatch();\n  const selectedFolderInfo = useSelector(selectActiveFolderDetails);\n  const { messageList, activeMessageId, activeFolderId, deleteMessage } =\n    useSelector((state) => state.messageCenter);\n\n  const searchEmailValue = Form.useWatch(\"searchEmailValue\", form);\n  const [emailDebounced] = useDebounce(searchEmailValue, 1000);\n\n  useEffect(() => {\n    if (selectedFolderInfo) {\n      dispatch(\n        getMessageListInProgress({\n          folderId: selectedFolderInfo.folderID,\n          pageIndex: 1,\n          pageSize: messageList.pageSize,\n          SearchValue: emailDebounced ? emailDebounced : undefined,\n        })\n      );\n    }\n  }, [selectedFolderInfo, emailDebounced]);\n\n  useEffect(() => {\n    if (messageList.success && messageList?.data?.length) {\n      handleMessageClick(messageList.data[0].msgID)();\n    }\n  }, [messageList.success, activeFolderId]);\n\n  const handleMessageClick = (messageId) => () => {\n    dispatch(setMessageCenterActiveMessageId(messageId));\n  };\n\n  const handleDelete = (messageId) => () => {\n    dispatch(\n      deleteMessageInProgress({\n        msgID: messageId,\n        folderId: selectedFolderInfo.folderID,\n      })\n    );\n  };\n\n  const handleNextPage = () => {\n    dispatch(\n      getMessageListInProgress({\n        folderId: selectedFolderInfo.folderID,\n        pageIndex: messageList.pageIndex + 1,\n        pageSize: messageList.pageSize,\n        SearchValue: emailDebounced ? emailDebounced : undefined,\n      })\n    );\n  };\n\n  const isSentItemFolder = useMemo(\n    () => checkIsSentItemMessage(selectedFolderInfo?.folderID),\n    [selectedFolderInfo]\n  );\n\n  return (\n    <div className=\"h-100 overflow-hidden email-list-container border-right-border\">\n      <Row className=\"h-100 overflow-hidden flex-direction-column flex-nowrap pb-10\">\n        <Col className=\"p-10\">\n          <Form form={form}>\n            <FormInput\n              editMode={true}\n              placeholder={\"Search...\"}\n              suffix={<SvgConverter Icon={SearchIcon} color={\"\"} />}\n              margin=\"m-0\"\n              name={\"searchEmailValue\"}\n            />\n          </Form>\n        </Col>\n        <Col className=\"flex-1 overflow-hidden \">\n          {messageList?.progressing && messageList.pageIndex === 1 ? (\n            <div>\n              <ContentSpinner />\n            </div>\n          ) : (\n            <ScrollPagination\n              loadMore={handleNextPage}\n              hasMore={\n                messageList.progressing\n                  ? false\n                  : messageList?.pageIndex <\n                    Math.floor(\n                      (messageList?.totalRecords + (messageList.pageSize - 1)) /\n                        messageList.pageSize\n                    )\n              }\n              className=\"h-100\"\n              isLoading={messageList?.progressing}\n              scrollOffset={10}\n            >\n              {messageList?.data?.length > 0 ? (\n                <>\n                  {messageList.data.map((row) => (\n                    <MessageCard\n                      key={row.msgID}\n                      data={row}\n                      active={row.msgID === activeMessageId}\n                      onClick={handleMessageClick(row.msgID)}\n                      handleDelete={handleDelete(row.msgID)}\n                      isDeleting={includes(\n                        deleteMessage.data ? deleteMessage.data : [],\n                        row.msgID\n                      )}\n                      isSentItemFolder={isSentItemFolder}\n                    />\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-center\">\n                  <SecondaryLabel className=\"f-14 text-danger\">\n                    No messages found!\n                  </SecondaryLabel>\n                </div>\n              )}\n            </ScrollPagination>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default MessageList;\n\nconst MessageCard = ({\n  data,\n  active,\n  onClick = () => {},\n  handleDelete = () => {},\n  isDeleting = false,\n  isSentItemFolder,\n}) => {\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, \"translation\"]);\n  const parsedMessage = parse(data.msgBody);\n\n  return (\n    <Spin spinning={isDeleting}>\n      <div\n        onClick={onClick}\n        className={`message-card px-10 py-5 ${active ? \"active\" : \"\"}`}\n      >\n        <div>\n          <PrimaryLabel\n            className={`${data.isRead || isSentItemFolder ? \"fw-400\" : \"\"}`}\n          >\n            {data.fromEmail}\n          </PrimaryLabel>\n        </div>\n        <div>\n          <SecondaryLabel className=\"lh-10\">\n            <span\n              className={`${\n                data.isRead || isSentItemFolder ? \"fw-400\" : \"fw-800\"\n              }`}\n            >\n              Subject:\n            </span>\n            {data.msgSubject}\n          </SecondaryLabel>\n        </div>\n        {data.msgBody ? (\n          <div>\n            <SecondaryLabel\n              ellipsis={{\n                rows: 1,\n                expandable: false,\n                tooltip: false,\n              }}\n              className=\"mt-5\"\n            >\n              {typeof parsedMessage === \"string\"\n                ? String(parse(data.msgBody)).replace(/<\\/?[^>]+(>|$)/g, \"\")\n                : \"\"}\n            </SecondaryLabel>\n          </div>\n        ) : (\n          <></>\n        )}\n        <div onClick={stopPropagation}>\n          <Popconfirm\n            placement=\"topRight\"\n            title={t(\"translation:default.popConfirm.title\")}\n            okText={t(\"translation:default.buttons.delete\")}\n            cancelText={t(\"translation:default.options.no\")}\n            overlayClassName=\"delete-popup-container\"\n            onConfirm={handleDelete}\n          >\n            <IconButton onClick={stopPropagation} className=\"delete-button\">\n              <SvgConverter Icon={DeleteIcon} color={\"white\"} />\n            </IconButton>\n          </Popconfirm>\n        </div>\n      </div>\n    </Spin>\n  );\n};\n","import { Col, Divider, Row } from \"antd\";\nimport React, { useEffect, useMemo } from \"react\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectActiveFolderDetails,\n  selectActiveMessageDetails,\n} from \"../../../../../redux/MessageCenter/MessageCenterReducer\";\nimport {\n  getMessageDetailsInProgress,\n  markAsReadMessageInProgress,\n} from \"../../../../../redux/MessageCenter/MessageCenterActions\";\nimport ContentSpinner from \"../../../../components/Spinners/ContentSpinner\";\nimport SecondaryLabel from \"../../../../components/Labels/SecondaryLabel\";\nimport PrimaryLabel from \"../../../../components/Labels/PrimaryLabel\";\nimport parse from \"html-react-parser\";\nimport { formateWithMoment } from \"../../../../../utilz/dates\";\nimport { checkIsSentItemMessage } from \"../../../../../utilz/utilz\";\n\nconst MessageContent = ({ handleReply, handleForward }) => {\n  const dispatch = useDispatch();\n  const selectedFolderInfo = useSelector(selectActiveFolderDetails);\n  const selectedMessageInfo = useSelector(selectActiveMessageDetails);\n  const { messageDetails } = useSelector((state) => state.messageCenter);\n\n  const isSentItemFolder = useMemo(\n    () => checkIsSentItemMessage(selectedFolderInfo?.folderID),\n    [selectedFolderInfo]\n  );\n\n  useEffect(() => {\n    if (selectedFolderInfo?.folderName && selectedMessageInfo?.msgID) {\n      dispatch(\n        getMessageDetailsInProgress({\n          msgId: selectedMessageInfo?.msgID,\n          // folderName: selectedFolderInfo?.folderName,\n        })\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedFolderInfo?.folderName, selectedMessageInfo?.msgID]);\n\n  useEffect(() => {\n    if (\n      selectedMessageInfo?.msgID &&\n      messageDetails?.data?.messsageId &&\n      selectedMessageInfo?.msgID === messageDetails?.data?.messsageId &&\n      !selectedMessageInfo?.isRead &&\n      !isSentItemFolder\n    ) {\n      dispatch(\n        markAsReadMessageInProgress({\n          messageId: messageDetails?.data?.messsageId,\n        })\n      );\n    }\n  }, [messageDetails?.data, selectedMessageInfo, isSentItemFolder]);\n  const parsedMessage = parse(\n    messageDetails?.data?.messageBody ? messageDetails?.data?.messageBody : \"\"\n  );\n\n  return (\n    <div className=\"h-100 overflow-hidden email-list-container border-right-border\">\n      <Row className=\"h-100 overflow-hidden flex-direction-column flex-nowrap pb-10\">\n        {messageDetails?.data ? (\n          <>\n            <Col className=\"px-30 py-10\">\n              <div>\n                <PrimaryLabel>\n                  From: {messageDetails?.data?.fromUserName}\n                </PrimaryLabel>\n              </div>\n              <div>\n                <PrimaryLabel>\n                  Sent:{\" \"}\n                  {formateWithMoment(\n                    messageDetails?.data?.sendingDate + \"Z\",\n                    \"dddd MMMM DD, YYYY hh:mm A\"\n                  )}\n                </PrimaryLabel>\n              </div>\n              <div>\n                <SecondaryLabel>\n                  Subject : {messageDetails?.data?.messageSubject}\n                </SecondaryLabel>\n              </div>\n            </Col>\n            <Col>\n              <Divider className=\"m-0\" />\n            </Col>\n          </>\n        ) : (\n          <></>\n        )}\n        <Col className=\"py-15 px-30 border-bottom-border flex-1 custom-scroll-bar\">\n          {messageDetails?.progressing ? (\n            <ContentSpinner size=\"large\" />\n          ) : (\n            <>\n              {messageDetails?.error ? (\n                <div className=\"text-center\">\n                  <SecondaryLabel className=\"f-14 text-danger\">\n                    {messageDetails.message}\n                  </SecondaryLabel>\n                </div>\n              ) : (\n                <>\n                  {messageDetails?.data ? (\n                    <>\n                      {typeof parsedMessage === \"string\" ? (\n                        <div\n                          className=\"message-details-container\"\n                          dangerouslySetInnerHTML={{\n                            __html: parse(\n                              String(messageDetails?.data?.messageBody)\n                            ),\n                          }}\n                        />\n                      ) : (\n                        <></>\n                      )}\n                    </>\n                  ) : (\n                    <div className=\"text-center\">\n                      <SecondaryLabel className=\"f-14 text-danger\">\n                        Please select A message...\n                      </SecondaryLabel>\n                    </div>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </Col>\n        {messageDetails.success ? (\n          <Col className=\"pt-10 px-15\">\n            {isSentItemFolder ? (\n              <Button\n                onClick={handleForward(messageDetails?.data)}\n                className=\"float-right\"\n              >\n                Forward\n              </Button>\n            ) : (\n              <Button\n                onClick={handleReply(messageDetails?.data)}\n                className=\"float-right\"\n              >\n                Reply\n              </Button>\n            )}\n          </Col>\n        ) : (\n          <></>\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default MessageContent;\n","import React, { useRef, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { Button, Col, Modal, Row } from \"antd\";\nimport CommonModal from \"./CommonModal\";\nimport { ReactComponent as DotsIcon } from \"../../../assets/icons/dots-v.svg\";\nimport SvgConverter from \"../Common/SvgConverter\";\nconst DraggableModal = ({\n  customHeader,\n  title,\n  open = true,\n  setOpen = () => {},\n  children,\n  ...rest\n}) => {\n  const [disabled, setDisabled] = useState(true);\n  const [bounds, setBounds] = useState({\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  });\n  const draggleRef = useRef(null);\n\n  const onStart = (_event, uiData) => {\n    const { clientWidth, clientHeight } = window.document.documentElement;\n    const targetRect = draggleRef.current?.getBoundingClientRect();\n    if (!targetRect) {\n      return;\n    }\n    setBounds({\n      left: -targetRect.left + uiData.x,\n      right: clientWidth - (targetRect.right - uiData.x),\n      top: -targetRect.top + uiData.y,\n      bottom: clientHeight - (targetRect.bottom - uiData.y),\n    });\n  };\n  return (\n    <CommonModal\n      {...rest}\n      draggable={true}\n      customHeader={\n        <Row gutter={30} align={\"middle\"} className=\"flex-nowrap w-100\">\n          <Col>\n            <Row\n              gutter={3}\n              align={\"middle\"}\n              style={{\n                cursor: \"move\",\n              }}\n              className=\"flex-nowrap\"\n              onMouseOver={() => {\n                if (disabled) {\n                  setDisabled(false);\n                }\n              }}\n              onMouseOut={() => {\n                setDisabled(true);\n              }}\n              // fix eslintjsx-a11y/mouse-events-have-key-events\n              // https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/mouse-events-have-key-events.md\n              onFocus={() => {}}\n              onBlur={() => {}}\n              // end\n            >\n              <Col>\n                <SvgConverter\n                  className=\"d-flex\"\n                  Icon={DotsIcon}\n                  color=\"white\"\n                  height={18}\n                  width={5}\n                />\n              </Col>\n              <Col>\n                <SvgConverter\n                  className=\"d-flex\"\n                  Icon={DotsIcon}\n                  color=\"white\"\n                  height={18}\n                  width={5}\n                />\n              </Col>\n              <Col>\n                <SvgConverter\n                  className=\"d-flex\"\n                  Icon={DotsIcon}\n                  color=\"white\"\n                  height={18}\n                  width={5}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"flex-1\">\n            {!customHeader ? (\n              <label className=\"title\">{title}</label>\n            ) : (\n              customHeader\n            )}\n          </Col>\n        </Row>\n      }\n      open={open}\n      modalRender={(modal) => {\n        return (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            nodeRef={draggleRef}\n            onStart={(event, uiData) => onStart(event, uiData)}\n          >\n            <div ref={draggleRef}>{modal}</div>\n          </Draggable>\n        );\n      }}\n    >\n      {children}\n    </CommonModal>\n  );\n};\nexport default DraggableModal;\n","import React, { useEffect } from \"react\";\nimport { MESSAGE_CENTER_EMAIL_FILTER_OPTIONS } from \"../../../../../../contants/common\";\nimport { Col, Form, Row } from \"antd\";\nimport FormInput from \"../../../../../components/Inputs/FormInput\";\nimport { useDebounce } from \"use-debounce\";\n\nconst EmailFilterCard = ({ startingValue, handleFilterChange }) => {\n  const [form] = Form.useForm();\n  const searchValue = Form.useWatch(\"searchValue\", form);\n\n  const [searchValueDeBounce] = useDebounce(searchValue, 800);\n\n  useEffect(() => {\n    handleFilterChange(searchValueDeBounce, true);\n  }, [searchValueDeBounce]);\n\n  const handleStartValueChange = (val) => {\n    handleFilterChange(val, false);\n    form.setFieldValue(\"searchValue\", undefined);\n  };\n\n  return (\n    <Row gutter={30} align={\"middle\"} className=\"flex-nowrap\">\n      <Col className=\"flex-1\">\n        <div className=\"email-filter-char-container\">\n          {MESSAGE_CENTER_EMAIL_FILTER_OPTIONS.map((val) => (\n            <div\n              onClick={() => handleStartValueChange(val)}\n              className={`filter-char-button f-12 ${\n                startingValue === val ? \"active\" : \"\"\n              }`}\n              key={val}\n            >\n              {val}\n            </div>\n          ))}\n        </div>\n      </Col>\n      <Col>\n        <Form form={form} initialValues={{ searchValue: undefined }}>\n          <FormInput\n            editMode={true}\n            label={false}\n            placeholder=\"Search...\"\n            margin=\"m-0\"\n            name=\"searchValue\"\n          />\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default EmailFilterCard;\n","import React from \"react\";\nimport SecondaryLabel from \"../../../../../components/Labels/SecondaryLabel\";\nimport PrimaryLabel from \"../../../../../components/Labels/PrimaryLabel\";\n\nconst EmailFilterHeader = ({ title }) => {\n  return (\n    <div className=\"d-flex flex-direction-row align-items-center\">\n      <SecondaryLabel className=\"f-14 mr-5\">Company Name:</SecondaryLabel>\n      <PrimaryLabel>{title}</PrimaryLabel>\n    </div>\n  );\n};\n\nexport default EmailFilterHeader;\n","import React from \"react\";\nimport FormCheckBox from \"../../../../../components/Inputs/FormCheckBox\";\nimport { find, includes } from \"lodash\";\n\nconst FilterEmailList = ({ emails, handleSelect, selectedEmails }) => {\n  return (\n    <div className=\"pl-40\">\n      {emails.map((email) => (\n        <div key={email.email}>\n          <FormCheckBox\n            checkBoxClass=\"normal-checkbox\"\n            label={`${email.text}`}\n            className={\"mb-5\"}\n            onChange={(e) => handleSelect(e, email)}\n            checked={Boolean(find(selectedEmails, email))}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FilterEmailList;\n","import React from \"react\";\nimport FilterCard from \"../../../../../components/Cards/FilterCard\";\nimport PrimaryLabel from \"../../../../../components/Labels/PrimaryLabel\";\nimport { Col, Row } from \"antd\";\nimport SecondaryLabel from \"../../../../../components/Labels/SecondaryLabel\";\nimport IconButton from \"../../../../../components/Buttons/IconButton\";\nimport { ReactComponent as DeleteIcon } from \"../../../../../../assets/icons/delete-icon.svg\";\nimport SvgConverter from \"../../../../../components/Common/SvgConverter\";\n\nconst SelectedEmailList = ({ selectedEmails = [], handleSelect }) => {\n  const handleDelete = (email) => () => {\n    let e = { target: { checked: false } };\n    handleSelect(e, email);\n  };\n\n  return (\n    <FilterCard\n      showBorder\n      className=\"h-100 overflow-hidden d-flex flex-direction-column\"\n      title={\n        <PrimaryLabel className={\"mb-10 text-header\"}>\n          Selected Emails\n        </PrimaryLabel>\n      }\n    >\n      <div className=\"p-15 flex-1 custom-scroll-bar\">\n        {selectedEmails.map((row) => (\n          <Row className=\"mb-5\" key={row.text} align={\"middle\"}>\n            <Col className=\"flex-1\">\n              <SecondaryLabel className=\"f-14\">\n                {row.text ?? row.userName}\n              </SecondaryLabel>\n            </Col>\n            <Col>\n              <IconButton onClick={handleDelete(row)}>\n                <SvgConverter Icon={DeleteIcon} color=\"danger\" />\n              </IconButton>\n            </Col>\n          </Row>\n        ))}\n      </div>\n    </FilterCard>\n  );\n};\n\nexport default SelectedEmailList;\n","import { Col, Divider, Row } from \"antd\";\nimport React from \"react\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport EmailFilterCard from \"./FilterComponents/EmailFilterCard\";\nimport ScrollPagination from \"../../../../components/Paginations/ScrollPagination\";\nimport CollapsiblePanel from \"../../../../components/Tabs/CollapsiblePanel\";\nimport EmailFilterHeader from \"./FilterComponents/EmailFilterHeader\";\nimport FilterEmailList from \"./FilterComponents/FilterEmailList\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport PrimaryLabel from \"../../../../components/Labels/PrimaryLabel\";\nimport SelectedEmailList from \"./FilterComponents/SelectedEmailList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getComposeEmailIdSearchInProgress } from \"../../../../../redux/MessageCenter/MessageCenterActions\";\nimport { useMemo } from \"react\";\nimport { cloneDeep, groupBy, remove } from \"lodash\";\nimport SecondaryLabel from \"../../../../components/Labels/SecondaryLabel\";\nimport EmptyRecords from \"../../../../components/Common/EmptyRecords\";\n\nconst EmailsFilterComponent = ({\n  defaultUserList = [],\n  handleFilterEmailsApply,\n  handleClose,\n}) => {\n  const dispatch = useDispatch();\n  const [activeKeys, setActiveKeys] = useState([]);\n  const [startingValue, setStartingValue] = useState(\"All\");\n  const [searchValue, setSearchValue] = useState(undefined);\n  const [selectedEmails, setSelectedEmails] = useState([]);\n\n  const { composeEmails } = useSelector((state) => state.messageCenter);\n\n  const groupedEmailListObj = useMemo(\n    () => groupBy(composeEmails?.data, \"companyName\"),\n    [composeEmails?.data]\n  );\n\n  useEffect(() => {\n    setActiveKeys(\n      Object.keys(groupedEmailListObj).map((_, key) => String(key))\n    );\n  }, [groupedEmailListObj]);\n\n  const handleFilterChange = (val, isSearch) => {\n    if (isSearch) {\n      setStartingValue(\"All\");\n      setSearchValue(val);\n    } else {\n      setStartingValue(val);\n      setSearchValue(undefined);\n    }\n    dispatch(\n      getComposeEmailIdSearchInProgress({\n        PageIndex: 1,\n        PageSize: composeEmails.PageSize,\n        StartingSearchValue: !isSearch && val !== \"All\" ? val : undefined,\n        ContainSearchValue: isSearch && val ? val : undefined,\n      })\n    );\n  };\n\n  useEffect(() => {\n    setSelectedEmails(defaultUserList ?? []);\n  }, [defaultUserList]);\n\n  const handleLoadMoreEmails = () => {\n    dispatch(\n      getComposeEmailIdSearchInProgress({\n        PageIndex: composeEmails.PageIndex + 1,\n        PageSize: composeEmails.PageSize,\n        StartingSearchValue:\n          startingValue !== \"All\" ? startingValue : undefined,\n        ContainSearchValue: searchValue,\n      })\n    );\n  };\n\n  const handleSelect = (e, email) => {\n    let selectedEmailsLocal = cloneDeep(selectedEmails);\n    if (e.target.checked) {\n      selectedEmailsLocal.push(email);\n    } else {\n      selectedEmailsLocal = remove(\n        selectedEmails,\n        (row) => JSON.stringify(row) !== JSON.stringify(email)\n      );\n    }\n    setSelectedEmails(selectedEmailsLocal);\n  };\n\n  return (\n    <Row className=\"h-100 overflow-hidden flex-direction-column flex-nowrap\">\n      <Col className=\"px-30 pt-15\">\n        <EmailFilterCard\n          startingValue={startingValue}\n          handleFilterChange={handleFilterChange}\n        />\n      </Col>\n      <Col>\n        <Divider className=\"mt-15 mb-10\" />\n      </Col>\n      <Col className=\"flex-1 overflow-hidden px-30\">\n        <Row className=\"h-100 overflow-hidden\" gutter={30}>\n          <Col className=\"h-100 overflow-hidden\" sm={16}>\n            <Row className=\"flex-direction-column h-100 overflow-hidden\">\n              <Col>\n                <PrimaryLabel className={\"mb-10 text-header\"}>\n                  Email Result\n                </PrimaryLabel>\n              </Col>\n              <Col className=\"flex-1 overflow-hidden\">\n                {composeEmails?.error ? (\n                  <div className=\"text-center pt-10 \">\n                    <SecondaryLabel className=\"text-danger f-16\">\n                      Failed to fetch the data, Please try Again...\n                    </SecondaryLabel>\n                  </div>\n                ) : (\n                  <>\n                    {!composeEmails?.progressing &&\n                    composeEmails?.data?.length === 0 ? (\n                      <EmptyRecords />\n                    ) : (\n                      <ScrollPagination\n                        className=\"h-100\"\n                        loadMore={handleLoadMoreEmails}\n                        isLoading={composeEmails.progressing}\n                        hasMore={\n                          composeEmails.progressing\n                            ? false\n                            : composeEmails?.PageIndex <\n                              Math.floor(\n                                (composeEmails?.totalRecords +\n                                  (composeEmails.PageSize - 1)) /\n                                  composeEmails.PageSize\n                              )\n                        }\n                        scrollOffset={10}\n                      >\n                        <CollapsiblePanel\n                          activeKey={activeKeys}\n                          handleTabClick={(keys) => setActiveKeys(keys)}\n                          tabs={Object.keys(groupedEmailListObj).map(\n                            (companyName, key) => ({\n                              header: <EmailFilterHeader title={companyName} />,\n                              content: (\n                                <FilterEmailList\n                                  emails={groupedEmailListObj[companyName]}\n                                  handleSelect={handleSelect}\n                                  selectedEmails={selectedEmails}\n                                />\n                              ),\n                              tabKey: String(key),\n                            })\n                          )}\n                        />\n                      </ScrollPagination>\n                    )}\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"h-100 overflow-hidden pt-23\" sm={8}>\n            <SelectedEmailList\n              selectedEmails={selectedEmails}\n              handleSelect={handleSelect}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Divider className=\"my-15\" />\n      <Col className=\"px-30 pb-15\">\n        <Row gutter={15} justify={\"end\"}>\n          <Col>\n            <Button variant=\"danger\" type=\"default\" onClick={handleClose}>\n              Cancel\n            </Button>\n          </Col>\n          <Col>\n            <Button onClick={() => handleFilterEmailsApply(selectedEmails)}>\n              Proceed\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default EmailsFilterComponent;\n","import React from \"react\";\nimport CommonModal from \"../../../../components/Modals/CommonModal\";\nimport { useTranslation } from \"react-i18next\";\nimport EmailsFilterComponent from \"./EmailsFilterComponent\";\n\nconst EmailsFilterModal = ({\n  open,\n  handleClose,\n  defaultUserList = [],\n  handleFilterEmailsApply,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <CommonModal\n      title=\"Search Emails\"\n      open={open}\n      className={`w-80 vh-90`}\n      onClose={handleClose}\n      customFooter={<></>}\n      descriptionClassName={\"mb-0 d-flex flex-direction-column\"}\n      contentClassName={\"p-0\"}\n      //   maskClosable={true}\n    >\n      <div className=\"flex-1 overflow-hidden\">\n        <EmailsFilterComponent\n          defaultUserList={defaultUserList}\n          handleFilterEmailsApply={handleFilterEmailsApply}\n          handleClose={handleClose}\n        />\n      </div>\n    </CommonModal>\n  );\n};\n\nexport default EmailsFilterModal;\n","import { Col, Form, Row, Upload, message } from \"antd\";\nimport React, { useEffect, useMemo } from \"react\";\nimport FormSelectBox from \"../../../../components/Inputs/FormSelectBox\";\nimport FormInput from \"../../../../components/Inputs/FormInput\";\nimport Button from \"../../../../components/Buttons/Button\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport SvgConverter from \"../../../../components/Common/SvgConverter\";\nimport { ReactComponent as DeleteIcon } from \"../../../../../assets/icons/delete-icon.svg\";\nimport { ReactComponent as MailIcon } from \"../../../../../assets/icons/mail.svg\";\nimport IconButton from \"../../../../components/Buttons/IconButton\";\nimport SecondaryLabel from \"../../../../components/Labels/SecondaryLabel\";\nimport { find, uniqBy } from \"lodash\";\nimport TextEditor from \"../../../../components/Inputs/TextEditor\";\nimport EmailsFilterModal from \"./EmailsFilterModal\";\nimport { convertBlobToBase64 } from \"../../../../../utilz/utilz\";\nimport {\n  formateWithMoment,\n  getFormattedTimeString,\n} from \"../../../../../utilz/dates\";\nimport HiddenFormInput from \"../../../../components/Inputs/HiddenFormInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendMessageInProgress } from \"../../../../../redux/MessageCenter/MessageCenterActions\";\nimport { MESSAGE_COMPOSE_TYPES } from \"../../../../../contants/common\";\nimport parse from \"html-react-parser\";\nimport { selectActiveFolderDetails } from \"../../../../../redux/MessageCenter/MessageCenterReducer\";\n\nconst ComposeMessageForm = ({\n  handleCancel,\n  defaultMessageBody = \"\",\n  composeType = MESSAGE_COMPOSE_TYPES.NEW,\n  selectedEmailDetails = 0,\n  handleComposeDone,\n}) => {\n  const dispatch = useDispatch();\n  const [fileList, setFileList] = useState([]);\n  const [messageBody, setMessageBody] = useState(defaultMessageBody);\n  const [emailsFilterModal, setEmailsFilterModal] = useState(false);\n  const [form] = Form.useForm();\n\n  const activeFolderDetails = useSelector(selectActiveFolderDetails);\n\n  const handleDelete = (file) => () => {\n    const index = fileList.indexOf(file);\n    const newFileList = fileList.slice();\n    newFileList.splice(index, 1);\n    setFileList(newFileList);\n  };\n\n  const handleOnUpload = (_, files) => {\n    setFileList(\n      uniqBy([...fileList, ...files], function (e) {\n        return e.name;\n      })\n    );\n    return false;\n  };\n\n  const convertAttachmentsForUpload = (blobFiles) =>\n    // eslint-disable-next-line no-async-promise-executor\n    new Promise(async (resolve, reject) => {\n      try {\n        let filesBase64 = await Promise.all(\n          blobFiles.map((file) => convertBlobToBase64(file))\n        );\n        let files = [];\n        blobFiles.forEach(async (file, i) => {\n          files.push({\n            msgAttachmentID: 0,\n            msgID: 0,\n            attachmentName: file.name,\n            attachmentGUID: \"\",\n            attachmentDate: getFormattedTimeString(),\n            serviceModuleID: 0,\n            attachmentBase64Value: filesBase64[i],\n            attachmentExtension: `.${String(file.type).split(\"/\")[1]}`,\n          });\n        });\n        resolve(files);\n      } catch (error) {\n        reject(error);\n        console.log(error);\n      }\n    });\n\n  const handleSubmit = async (data) => {\n    const messageAttachmentDetails = await convertAttachmentsForUpload(\n      fileList\n    );\n    let payload = {\n      folderName: activeFolderDetails.folderName,\n      messageBody,\n      messageSubject: data.messageSubject,\n      parentMessageID:\n        composeType === MESSAGE_COMPOSE_TYPES.NEW\n          ? 0\n          : selectedEmailDetails.messsageId,\n      userList: data.userList.map((email) =>\n        find(\n          data.userListData,\n          ({ userName, text }) => email === userName || email === text\n        )\n      ),\n      messageAttachmentDetails,\n      composeType,\n      handleDone: handleComposeDone,\n    };\n    dispatch(sendMessageInProgress(payload));\n  };\n\n  const userList = Form.useWatch(\"userList\", form);\n\n  const defaultUserList = useMemo(() => {\n    const userListData = form.getFieldValue(\"userListData\");\n    let data = [];\n    if (userList)\n      userList.forEach((row) => {\n        const details = find(userListData, ({ text }) => text === row);\n        if (!details) {\n          data.push({\n            customerID: 0,\n            companyName: null,\n            emailID: null,\n            shortName: null,\n            type: null,\n            userID: 0,\n            userName: row,\n            disabled: false,\n            group: null,\n            selected: false,\n            text: null,\n            value: null,\n          });\n        } else {\n          data.push(details);\n        }\n      });\n    return data;\n  }, [userList]);\n\n  const handleFilterEmailsApply = (emails) => {\n    form.setFieldValue(\n      \"userList\",\n      emails.map(({ text, userName }) => text ?? userName)\n    );\n    let data = [];\n    emails.forEach((row) => {\n      if (row.customerID) {\n        data.push(row);\n      } else {\n        data.push({\n          customerID: 0,\n          companyName: null,\n          emailID: null,\n          shortName: null,\n          type: null,\n          userID: 0,\n          userName: row.userName,\n          disabled: false,\n          group: null,\n          selected: false,\n          text: null,\n          value: null,\n        });\n      }\n    });\n    form.setFieldValue(\"userListData\", data);\n    setEmailsFilterModal(false);\n  };\n\n  useEffect(() => {\n    if (\n      composeType === MESSAGE_COMPOSE_TYPES.REPLY ||\n      composeType === MESSAGE_COMPOSE_TYPES.FORWARD\n    ) {\n      form.setFieldValue(\"messageSubject\", selectedEmailDetails.messageSubject);\n      setMessageBody(\n        `<p></p><br /><p>____________________________________________________________________</p><br /><span><strong>From:</strong> ${\n          selectedEmailDetails?.fromUserName\n        }</span><br /><span><strong>Sent:</strong> ${formateWithMoment(\n          selectedEmailDetails?.sendingDate + \"Z\",\n          \"dddd MMMM DD, YYYY hh:mm A\"\n        )}</span>><span><strong>Subject:</strong> ${\n          selectedEmailDetails?.messageSubject\n        }</span><p>____________________________________________________________________</p><br />${parse(\n          selectedEmailDetails.messageBody\n        )}`\n      );\n    }\n  }, [composeType, selectedEmailDetails]);\n\n  return (\n    <>\n      <Form\n        onFinish={handleSubmit}\n        form={form}\n        className=\"h-100 overflow-hidden d-flex flex-direction-column py-10\"\n        initialValues={{ userList: [], userListData: [], messageSubject: \"\" }}\n      >\n        <div className=\"flex-1 custom-scroll-bar px-15\">\n          <FormSelectBox\n            allowClear={false}\n            tooltip={\n              \"Please click mail icon button to see more emails along with filters\"\n            }\n            label={\"To\"}\n            mode=\"tags\"\n            rules={[{ required: true, message: \"Please enter email Address.\" }]}\n            suffixIcon={\n              <IconButton onClick={() => setEmailsFilterModal(true)}>\n                <SvgConverter Icon={MailIcon} color=\"header\" />\n              </IconButton>\n            }\n            name=\"userList\"\n          />\n          <HiddenFormInput name=\"userListData\" />\n          <FormInput\n            editMode={true}\n            label={\"Subject\"}\n            placeholder={\"Subject...\"}\n            rules={[{ required: true, message: \"Please enter subject.\" }]}\n            name=\"messageSubject\"\n          />\n          <Row justify={\"space-between\"} className=\"mb-15\">\n            <Col>\n              <Upload\n                multiple={true}\n                beforeUpload={handleOnUpload}\n                showUploadList={false}\n              >\n                <Button icon={<UploadOutlined />}>Attach</Button>\n              </Upload>\n            </Col>\n            <Col>\n              <table>\n                <tbody>\n                  {fileList.map((file) => (\n                    <tr key={file.name}>\n                      <td>\n                        <SecondaryLabel>{file.name}</SecondaryLabel>\n                      </td>\n                      <td className=\"pl-10\">\n                        <IconButton onClick={handleDelete(file)}>\n                          <SvgConverter\n                            width={15}\n                            height={15}\n                            Icon={DeleteIcon}\n                            color=\"danger\"\n                          />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n          <div className=\"mb-15\">\n            <TextEditor value={messageBody} onChange={setMessageBody} />\n          </div>\n        </div>\n        <div className=\"pt-15 px-20\">\n          <Row gutter={15} justify={\"end\"}>\n            <Col>\n              <Button onClick={handleCancel} variant=\"danger\" type=\"default\">\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button buttonType=\"submit\">Send</Button>\n            </Col>\n          </Row>\n        </div>\n      </Form>\n      <EmailsFilterModal\n        open={emailsFilterModal}\n        handleClose={() => setEmailsFilterModal(false)}\n        defaultUserList={defaultUserList}\n        handleFilterEmailsApply={handleFilterEmailsApply}\n      />\n    </>\n  );\n};\n\nexport default ComposeMessageForm;\n","import React from \"react\";\nimport CommonModal from \"../../components/Modals/CommonModal\";\nimport { useTranslation } from \"react-i18next\";\nimport DraggableModal from \"../../components/Modals/DraggableModal\";\nimport ComposeMessageForm from \"./components/ComposeMessage/ComposeMessageForm\";\n\nconst MessageComposeModal = ({\n  open,\n  setOpen,\n  composeType,\n  selectedEmailDetails,\n  handleComposeDone,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DraggableModal\n      title=\"Compose Message\"\n      open={open}\n      className={`w-50 vh-90 `}\n      okText={t(\"translation:default.buttons.add\")}\n      cancelText={t(\"translation:default.buttons.cancel\")}\n      onClose={() => setOpen(false)}\n      customFooter={<></>}\n      contentClassName={\"p-0\"}\n      descriptionClassName={\"mb-0 h-100 d-flex flex-direction-column\"}\n      //   contentClassName={\"p-0\"}\n      //   maskClosable={true}\n      destroyOnClose={true}\n    >\n      <div className=\"flex-1 overflow-hidden\">\n        <ComposeMessageForm\n          handleCancel={() => setOpen(false)}\n          composeType={composeType}\n          selectedEmailDetails={selectedEmailDetails}\n          handleComposeDone={handleComposeDone}\n        />\n      </div>\n    </DraggableModal>\n  );\n};\n\nexport default MessageComposeModal;\n","import React from \"react\";\nimport CommonModal from \"../../components/Modals/CommonModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  getMessageDetailsInSuccess,\n  setMessageCenterActiveMessageId,\n  setMessageCenterModalVisible,\n} from \"../../../redux/MessageCenter/MessageCenterActions\";\nimport { Col, Row } from \"antd\";\nimport PrimaryLabel from \"../../components/Labels/PrimaryLabel\";\nimport Button from \"../../components/Buttons/Button\";\nimport MessageCenterFolders from \"./components/MessageCenterFolders/MessageCenterFolders\";\nimport MessageList from \"./components/MessageContents/MessageList\";\nimport MessageContent from \"./components/MessageContents/MessageContent\";\nimport MessageComposeModal from \"./MessageComposeModal\";\nimport { useState } from \"react\";\nimport { MESSAGE_COMPOSE_TYPES } from \"../../../contants/common\";\nimport { uniqueId } from \"lodash\";\nimport { useEffect } from \"react\";\n\nconst MessageCenterModal = () => {\n  const [composeModal, setComposeModal] = useState(false);\n  const dispatch = useDispatch();\n  const { messageCenterVisible } = useSelector((state) => state.messageCenter);\n  const { t } = useTranslation();\n\n  const [composeType, setComposeType] = useState(undefined);\n  const [selectedEmailDetails, setSelectedEmailDetails] = useState(false);\n\n  const handleClose = () => () => dispatch(setMessageCenterModalVisible(false));\n\n  const handleOpenComposeModal = () => () => {\n    setComposeType(MESSAGE_COMPOSE_TYPES.NEW);\n    setComposeModal(true);\n    setSelectedEmailDetails(false);\n  };\n\n  const handleReply = (data) => () => {\n    setComposeType(MESSAGE_COMPOSE_TYPES.REPLY);\n    setComposeModal(true);\n    setSelectedEmailDetails(data);\n  };\n\n  const handleForward = (data) => () => {\n    setComposeType(MESSAGE_COMPOSE_TYPES.FORWARD);\n    setComposeModal(true);\n    setSelectedEmailDetails(data);\n  };\n\n  const handleComposeDone = () => {\n    setComposeType(false);\n    setComposeModal(false);\n    setSelectedEmailDetails(false);\n  };\n\n  const handleAfterOpenChangeModal = (val) => {\n    if (!val) {\n      dispatch(getMessageDetailsInSuccess({ data: false }));\n      dispatch(setMessageCenterActiveMessageId(0));\n    }\n  };\n\n  return (\n    <CommonModal\n      afterOpenChange={handleAfterOpenChangeModal}\n      destroyOnClose={true}\n      customHeader={\n        <ModalHeader handleOpenComposeModal={handleOpenComposeModal} />\n      }\n      open={messageCenterVisible}\n      className={`w-80 `}\n      okText={t(\"translation:default.buttons.add\")}\n      cancelText={t(\"translation:default.buttons.cancel\")}\n      onClose={handleClose()}\n      customFooter={<></>}\n      descriptionClassName={\"mb-0 d-flex flex-direction-column\"}\n      contentClassName={\"p-0\"}\n      maskClosable={true}\n    >\n      <div className=\"flex-1 overflow-hidden\">\n        <Row className=\"h-100 overflow-hidden flex-nowrap\">\n          <Col className=\"h-100 overflow-hidden\" sm={4}>\n            <MessageCenterFolders />\n          </Col>\n          <Col className=\"h-100 overflow-hidden\" sm={6}>\n            <MessageList />\n          </Col>\n          <Col className=\"h-100 overflow-hidden\" sm={14}>\n            <MessageContent\n              handleReply={handleReply}\n              handleForward={handleForward}\n            />\n          </Col>\n        </Row>\n      </div>\n\n      <MessageComposeModal\n        open={composeModal}\n        setOpen={setComposeModal}\n        composeType={composeType}\n        selectedEmailDetails={selectedEmailDetails}\n        handleComposeDone={handleComposeDone}\n      />\n    </CommonModal>\n  );\n};\n\nexport default MessageCenterModal;\n\nconst ModalHeader = ({ handleOpenComposeModal }) => {\n  return (\n    <div className=\"flex-1 mr-30\">\n      <Row justify={\"space-between\"} align={\"middle\"} className=\"flex-nowrap\">\n        <Col>\n          <PrimaryLabel className={\"text-white f-20\"}>\n            Message Center\n          </PrimaryLabel>\n        </Col>\n        <Col>\n          <Button invertMode onClick={handleOpenComposeModal()}>\n            Compose Message\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import {\r\n  Avatar,\r\n  Badge,\r\n  Col,\r\n  Dropdown,\r\n  // Popover,\r\n  Row,\r\n  Select,\r\n  Skeleton,\r\n  Space,\r\n  Spin,\r\n  Typography,\r\n} from \"antd\";\r\nimport React, { useEffect, useState, useMemo, memo } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ReactComponent as FullScreenIcon } from \"../../assets/icons/full-screen.svg\";\r\n// import { ReactComponent as BoxIcon } from \"../../assets/icons/box-icon.svg\";\r\n// import { ReactComponent as NotificationIcon } from \"../../assets/icons/notification.svg\";\r\n// import { ReactComponent as SettingsIcon } from \"../../assets/icons/Settings.svg\";\r\nimport { ReactComponent as MailIcon } from \"../../assets/icons/mail.svg\";\r\nimport ProfileImage from \"../../assets/images/profile.png\";\r\nimport { CaretDownOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"../components/Buttons/IconButton\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\n// import Button from \"../components/Buttons/Button\";\r\nimport {\r\n  changeCompanyInProgress,\r\n  getCompanyListInProgress,\r\n  getUserProfileInProgress,\r\n  getUserMenuInProgress,\r\n  initiateLogout,\r\n  setSelectedCompany,\r\n} from \"../../redux/auth/AuthActions\";\r\n\r\nimport { ReactComponent as LogoIcon } from \"../../assets/logo.svg\";\r\nimport { setFullScreenInstance } from \"../../redux/common/CommonActions\";\r\nimport DynamicFontSize from \"./components/DynamicFontSize\";\r\nimport { APP_ROUTES } from \"../../contants/RoutesEnum\";\r\nimport SvgConverter from \"../components/Common/SvgConverter\";\r\nimport { routeFileSelector } from \"../../utilz/i18n\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import NotificationTabs from \"../screens/Notifications/NotificationTabs\";\r\nimport ContentSpinner from \"../components/Spinners/ContentSpinner\";\r\nimport MessageCenterModal from \"../screens/MessageCenter/MessageCenterModal\";\r\nimport {\r\n  getMessageCenterFoldersInProgress,\r\n  setMessageCenterModalVisible,\r\n} from \"../../redux/MessageCenter/MessageCenterActions\";\r\n\r\nconst PrimaryMenu = () => {\r\n  // console.log(\"PrimaryMenu\");\r\n  const userData = useSelector((state) => state.auth.user.data, shallowEqual);\r\n  const selectedCompany = useSelector(\r\n    (state) => state.auth.selectedCompany,\r\n    shallowEqual\r\n  );\r\n  const companyList = useSelector(\r\n    (state) => state.auth.companyList,\r\n    shallowEqual\r\n  );\r\n\r\n  const changeCompanySuccess = useSelector(\r\n    (state) => state.auth.changeCompany.success,\r\n    shallowEqual\r\n  );\r\n\r\n  const userProfile = useSelector(\r\n    (state) => state.auth.userProfile,\r\n    shallowEqual\r\n  );\r\n\r\n  const fullScreenStatus = useSelector(\r\n    (state) => state.common.fullScreenStatus,\r\n    shallowEqual\r\n  );\r\n  const {\r\n    folders: { progressing: isMessageCenterFetching, unreadMessages },\r\n  } = useSelector((state) => state.messageCenter, shallowEqual);\r\n  const userThemes = useSelector(\r\n    (state) => state.settings.userThemes,\r\n    shallowEqual\r\n  );\r\n  const [selectedCompanyItem, setSelectedCompanyItem] = useState(\"\");\r\n  const handleLogout = () => {\r\n    dispatch(initiateLogout());\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, \"translation\"]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCompanyListInProgress());\r\n    if (userProfile?.success === false) {\r\n      dispatch(getUserProfileInProgress());\r\n    }\r\n    dispatch(getMessageCenterFoldersInProgress());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(setSelectedCompany(false));\r\n    if (companyList?.success && !selectedCompany && companyList?.data) {\r\n      let selectedCompanyId = userData.selectedCompany;\r\n      if (selectedCompanyId && selectedCompanyId != \"\") {\r\n        let findSelectedCompany = companyList?.data?.filter(\r\n          (item) => item.companyId === selectedCompanyId\r\n        );\r\n        if (findSelectedCompany && findSelectedCompany.length) {\r\n          dispatch(setSelectedCompany(findSelectedCompany[0]));\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [companyList?.success]);\r\n\r\n  useEffect(() => {\r\n    if (changeCompanySuccess && selectedCompanyItem != \"\") {\r\n      dispatch(setSelectedCompany(selectedCompanyItem));\r\n    }\r\n  }, [changeCompanySuccess]);\r\n\r\n  const handleClientChange = (e) => {\r\n    let obj = JSON.parse(e);\r\n    setSelectedCompanyItem(obj);\r\n    dispatch(changeCompanyInProgress({ CompanyID: obj.companyId }));\r\n    dispatch(getUserMenuInProgress());\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    var doc = window.document;\r\n    var docEl = doc.documentElement;\r\n\r\n    var requestFullScreen =\r\n      docEl.requestFullscreen ||\r\n      docEl.mozRequestFullScreen ||\r\n      docEl.webkitRequestFullScreen ||\r\n      docEl.msRequestFullscreen;\r\n    var cancelFullScreen =\r\n      doc.exitFullscreen ||\r\n      doc.mozCancelFullScreen ||\r\n      doc.webkitExitFullscreen ||\r\n      doc.msExitFullscreen;\r\n\r\n    if (\r\n      !doc.fullscreenElement &&\r\n      !doc.mozFullScreenElement &&\r\n      !doc.webkitFullscreenElement &&\r\n      !doc.msFullscreenElement\r\n    ) {\r\n      requestFullScreen.call(docEl);\r\n    } else {\r\n      cancelFullScreen.call(doc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document) {\r\n      document.addEventListener(\"fullscreenchange\", handleFullScreenChange);\r\n      document.addEventListener(\"mozfullscreenchange\", handleFullScreenChange);\r\n      document.addEventListener(\r\n        \"webkitfullscreenchange\",\r\n        handleFullScreenChange\r\n      );\r\n      document.addEventListener(\"msfullscreenchange\", handleFullScreenChange);\r\n    }\r\n\r\n    return () => {\r\n      if (document) {\r\n        document.removeEventListener(\r\n          \"fullscreenchange\",\r\n          handleFullScreenChange\r\n        );\r\n        document.removeEventListener(\r\n          \"mozfullscreenchange\",\r\n          handleFullScreenChange\r\n        );\r\n        document.removeEventListener(\r\n          \"webkitfullscreenchange\",\r\n          handleFullScreenChange\r\n        );\r\n        document.removeEventListener(\r\n          \"msfullscreenchange\",\r\n          handleFullScreenChange\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleFullScreenChange = (e) => {\r\n    dispatch(setFullScreenInstance(!fullScreenStatus));\r\n  };\r\n\r\n  const handleCompanySearch = (input, option) => {\r\n    try {\r\n      const companyName = JSON.parse(option.value)?.companyName;\r\n      const regex = new RegExp(`^${input}.*$`, \"gim\");\r\n      return regex.test(companyName);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleMessageCenterOpen = () => () =>\r\n    dispatch(setMessageCenterModalVisible(true));\r\n\r\n  return (\r\n    <div className=\"primary-menu-container\">\r\n      <Row justify=\"space-between\" align={\"middle\"}>\r\n        <Col className=\"website-container lh-0\">\r\n          <Link to={\"/\"} className={\"lh-0 top-menu-button-container\"}>\r\n            <SvgConverter\r\n              Icon={LogoIcon}\r\n              height={16}\r\n              color={userThemes?.data?.topMenuText}\r\n            />\r\n          </Link>\r\n        </Col>\r\n        <Col>\r\n          <Row gutter={30} align=\"middle\" className=\"right-contents-container\">\r\n            <Col className=\"menu-client-select\">\r\n              <div>\r\n                <Select\r\n                  loading={companyList.progressing}\r\n                  showSearch={true}\r\n                  className=\"client-selector\"\r\n                  placeholder={t(\r\n                    \"translation:default.navMenu.clientNameGoesHere\"\r\n                  )}\r\n                  onChange={handleClientChange}\r\n                  {...(selectedCompany\r\n                    ? { value: JSON.stringify(selectedCompany) }\r\n                    : {})}\r\n                  filterOption={handleCompanySearch}\r\n                >\r\n                  {companyList?.success &&\r\n                    companyList.data.map((company, idx) => (\r\n                      <Select.Option\r\n                        value={`${JSON.stringify(company)}`}\r\n                        key={idx}\r\n                      >\r\n                        <span className=\"company-select-option \">\r\n                          <h5 className=\"m-0 p-0 f-14\">\r\n                            {company.companyName}\r\n                          </h5>\r\n                          <h6 className=\"m-0 p-0 f-10 text-black\">\r\n                            {company.customerAddr1}\r\n                          </h6>\r\n                          <h6 className=\"m-0 p-0 f-10 text-black\">\r\n                            Last Activity - 19, Mar 2023\r\n                          </h6>\r\n                        </span>\r\n                      </Select.Option>\r\n                    ))}\r\n                </Select>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Row gutter={30}>\r\n                <Col className=\"lh-0\">\r\n                  <IconButton\r\n                    loading={isMessageCenterFetching}\r\n                    onClick={handleMessageCenterOpen()}\r\n                    className={\"top-menu-button-container\"}\r\n                  >\r\n                    <Badge\r\n                      count={unreadMessages}\r\n                      color={userThemes?.data?.primary}\r\n                      overflowCount={9}\r\n                    >\r\n                      <SvgConverter\r\n                        Icon={MailIcon}\r\n                        color={userThemes?.data?.topMenuText}\r\n                      />\r\n                    </Badge>\r\n                  </IconButton>\r\n                </Col>\r\n                <Col className=\"lh-0\">\r\n                  <IconButton\r\n                    onClick={toggleFullScreen}\r\n                    className={\"top-menu-button-container\"}\r\n                  >\r\n                    <SvgConverter\r\n                      Icon={FullScreenIcon}\r\n                      color={userThemes?.data?.topMenuText}\r\n                    />\r\n                  </IconButton>\r\n                </Col>\r\n                {/* <Col className=\"lh-0\">\r\n                  <IconButton className={\"top-menu-button-container\"}>\r\n                    <SvgConverter\r\n                      Icon={BoxIcon}\r\n                      color={userThemes?.data?.topMenuText}\r\n                    />\r\n                  </IconButton>\r\n                </Col> */}\r\n                {/* <Col className=\"lh-0\">\r\n                  <Popover\r\n                    overlayClassName=\"notification-popup-container\"\r\n                    placement={\"bottom\"}\r\n                    content={<NotificationTabs />}\r\n                    trigger={[\"click\"]}\r\n                  >\r\n                    <Badge\r\n                      count={4}\r\n                      color={userThemes?.data?.primary}\r\n                      overflowCount={9}\r\n                    >\r\n                      <IconButton className={\"top-menu-button-container\"}>\r\n                        <SvgConverter\r\n                          Icon={NotificationIcon}\r\n                          color={userThemes?.data?.topMenuText}\r\n                        />\r\n                      </IconButton>\r\n                    </Badge>\r\n                  </Popover>\r\n                </Col> */}\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <DynamicFontSize />\r\n            </Col>\r\n            <Col>\r\n              {userProfile?.progressing || !userProfile?.data?.firstName ? (\r\n                <Row className=\"flex-nowrap\" gutter={10} align={\"middle\"}>\r\n                  <Col>\r\n                    <Skeleton.Avatar\r\n                      active={true}\r\n                      size={\"default\"}\r\n                      shape={\"circle\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Skeleton.Input\r\n                      active\r\n                      size={\"small\"}\r\n                      style={{ width: 100, minWidth: 100 }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                <div className=\"profile-drop-down-container\">\r\n                  <Dropdown\r\n                    overlayClassName=\"profile-overlay-container\"\r\n                    arrow={true}\r\n                    placement={\"bottom\"}\r\n                    overlay={\r\n                      <div className=\"background-header br-5 py-5 paper-container\">\r\n                        <Link\r\n                          className=\"d-flex w-100 justify-content-center f-16 fw-600 text-topMenuText\"\r\n                          to={APP_ROUTES.USER_PROFILE_PERSONAL}\r\n                        >\r\n                          {t(\"translation:default.fields.profile\")}\r\n                        </Link>\r\n                        <a\r\n                          className=\"d-flex w-100 justify-content-center f-16 fw-600 text-topMenuText\"\r\n                          onClick={handleLogout}\r\n                          href={false}\r\n                        >\r\n                          {t(\"translation:default.fields.logout\")}\r\n                        </a>\r\n                      </div>\r\n                    }\r\n                  >\r\n                    <Space>\r\n                      <Avatar\r\n                        className=\"profile-avatar\"\r\n                        src={\r\n                          userProfile?.data?.profileImage\r\n                            ? userProfile?.data?.profileImage\r\n                            : ProfileImage\r\n                        }\r\n                        shape=\"circle\"\r\n                      />\r\n\r\n                      <div className=\"text-container\">\r\n                        <Typography.Text className=\"profile-name\">\r\n                          {`${userProfile?.data?.firstName} ${userProfile?.data?.lastName} `}\r\n                        </Typography.Text>\r\n                        <CaretDownOutlined className=\"text-topMenuText\" />\r\n                      </div>\r\n                    </Space>\r\n                  </Dropdown>\r\n                </div>\r\n              )}\r\n            </Col>\r\n            {/* <Col className=\"lh-0\">\r\n              <IconButton className=\"top-menu-button-container\">\r\n                <SvgConverter\r\n                  Icon={SettingsIcon}\r\n                  color={userThemes?.data?.topMenuText}\r\n                />\r\n              </IconButton>\r\n            </Col> */}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <MessageCenterModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(PrimaryMenu);\r\n","import React, { useMemo } from \"react\";\nimport { Col, Menu, Row, Skeleton } from \"antd\";\nimport { Link, useLocation } from \"react-router-dom\";\n// import { HeaderSearchBox } from \"../components/Inputs/HeaderSearchBox\";\nimport { CaretDownOutlined, MenuOutlined } from \"@ant-design/icons\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { API_APP_ROUTES, APP_ROUTES } from \"../../contants/RoutesEnum\";\nimport {\n  getUserMenuInProgress,\n  getUserPreferenceInProgress,\n} from \"../../redux/auth/AuthActions\";\nimport { getPrimaryMenu } from \"../../utilz/utilz\";\nimport { setAppLoader } from \"../../redux/common/CommonActions\";\nimport { getTmsSettingsInProgress } from \"../../redux/settings/SettingsActions\";\nimport { getCustomerRoutingSettingsInProgress } from \"../../redux/shipment/ShipmentActions\";\nimport { routeFileSelector } from \"../../utilz/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nconst SecondaryMenu = () => {\n  const { menus, selectedCompany } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, \"translation\"]);\n\n  useEffect(() => {\n    dispatch(getUserMenuInProgress());\n    dispatch(getUserPreferenceInProgress()); // Need to enable this feature for admin users only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (menus.success === true || menus.error === true) {\n      dispatch(setAppLoader(false));\n    }\n  }, [menus]);\n\n  const primaryMenus = useMemo(\n    () => (menus?.data ? getPrimaryMenu(menus?.data) : []),\n    [menus?.data]\n  );\n\n  useEffect(() => {\n    if (selectedCompany?.companyId) {\n      dispatch(\n        getTmsSettingsInProgress({ customerKey: selectedCompany?.companyId })\n      );\n      dispatch(\n        getCustomerRoutingSettingsInProgress({\n          Customerkey: selectedCompany?.companyId,\n        })\n      );\n    }\n  }, [selectedCompany?.companyId]);\n\n  return (\n    <Row\n      className=\"secondary-menu-container\"\n      justify=\"space-between\"\n      align={\"middle\"}\n    >\n      {/* <Col xs={24} sm={15} md={18} lg={20}> */}\n      <Col xs={24}>\n        {menus?.progressing ? (\n          <Skeleton\n            className=\"secondary-menu-skeleton\"\n            active\n            paragraph={{ rows: 0 }}\n            title={{ width: \"100%\" }}\n          />\n        ) : (\n          <>\n            {menus?.success && (\n              <Menu\n                rootClassName=\"secondary-menu-sub\"\n                className=\"secondary-menu\"\n                mode=\"horizontal\"\n                items={primaryMenus.map(\n                  ({ menuText, menuName, hasSubMenu, subMenus }, idx) => ({\n                    label: (\n                      <Link\n                        to={\n                          !hasSubMenu\n                            ? String(\n                                API_APP_ROUTES[menuName]\n                                  ? API_APP_ROUTES[menuName]\n                                  : \"in-development\"\n                              )\n                            : false\n                        }\n                        className={`${\n                          activeTab === API_APP_ROUTES[menuName] ||\n                          (activeTab.includes(API_APP_ROUTES[menuName]) &&\n                            API_APP_ROUTES[menuName] !== \"/\")\n                            ? \"active\"\n                            : \"\"\n                        }`}\n                      >\n                        {menuText} {hasSubMenu && <CaretDownOutlined />}\n                      </Link>\n                    ),\n                    key: idx,\n                    children: hasSubMenu\n                      ? subMenus.map(({ menuName, menuText }, key) => ({\n                          label: (\n                            <Link\n                              to={String(\n                                API_APP_ROUTES[menuName]\n                                  ? API_APP_ROUTES[menuName]\n                                  : \"in-development\"\n                              )}\n                              className={`${\n                                activeTab === API_APP_ROUTES[menuName]\n                                  ? \"active\"\n                                  : \"\"\n                              }`}\n                            >\n                              {menuText}\n                            </Link>\n                          ),\n                          key: key,\n                        }))\n                      : false,\n                  })\n                )}\n                overflowedIndicator={\n                  <MenuOutlined className=\"overflow-indicater\" />\n                }\n                overflowedIndicatorPopupClassName={\n                  \"secondary-menu-overflow-popu\"\n                }\n              />\n            )}\n          </>\n        )}\n      </Col>\n      {/* <Col className={\"flex-1\"}>\n        <div className=\"header-search-box-container\">\n          <HeaderSearchBox placeholder={`${t('translation:default.buttons.search')}...`} />\n        </div>\n      </Col> */}\n    </Row>\n  );\n};\n\nexport default SecondaryMenu;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport PrimaryMenu from \"./PrimaryMenu\";\nimport SecondaryMenu from \"./SecondaryMenu\";\n\nconst AppLayouts = () => {\n  return (\n    <div className=\"main-layout\">\n      <div className=\"menu-header box-shadow border-none \">\n        <PrimaryMenu />\n        <SecondaryMenu />\n      </div>\n      <div className=\"main-content-container\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default AppLayouts;\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgMail","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","value","onChange","editorReady","setEditorReady","useState","_jsx","className","children","Spin","spinning","CKEditor","editor","ClassicEditor","data","String","onReady","event","getData","config","fontFamily","options","toolbar","items","language","image","table","contentToolbar","_path2","_path3","_path4","SvgFullScreen","fillRule","clipRule","_path5","_path6","_path7","_path8","_path9","_path10","_path11","_path12","_path13","SvgLogo","lowest","middle","highest","DynamicFontSize","percent","setPercent","pathname","activeTab","useLocation","namespace","useMemo","routeFileSelector","t","useTranslation","useEffect","p","localStorage","getItem","handleClick","setItem","document","documentElement","style","setProperty","_jsxs","Row","gutter","justify","Col","IconButton","onClick","concat","active","badge","MessageCenterFolders","dispatch","useDispatch","folders","activeFolderId","useSelector","state","messageCenter","_folders$data","success","handleFolderClick","folderID","setMessageCenterActiveFolderId","map","row","FolderButton","folderName","unReadMail","MessageList","_messageList$data2","form","Form","useForm","selectedFolderInfo","selectActiveFolderDetails","messageList","activeMessageId","deleteMessage","searchEmailValue","useWatch","emailDebounced","useDebounce","getMessageListInProgress","folderId","pageIndex","pageSize","SearchValue","undefined","_messageList$data","handleMessageClick","msgID","messageId","setMessageCenterActiveMessageId","isSentItemFolder","checkIsSentItemMessage","FormInput","editMode","placeholder","suffix","SvgConverter","Icon","SearchIcon","color","margin","name","progressing","ContentSpinner","ScrollPagination","loadMore","handleNextPage","hasMore","Math","floor","totalRecords","isLoading","scrollOffset","_Fragment","MessageCard","handleDelete","deleteMessageInProgress","isDeleting","includes","SecondaryLabel","parsedMessage","parse","msgBody","PrimaryLabel","isRead","fromEmail","msgSubject","ellipsis","rows","expandable","tooltip","replace","stopPropagation","Popconfirm","placement","okText","cancelText","overlayClassName","onConfirm","DeleteIcon","_messageDetails$data4","_messageDetails$data5","_messageDetails$data6","_messageDetails$data7","_messageDetails$data8","_messageDetails$data9","handleReply","handleForward","selectedMessageInfo","selectActiveMessageDetails","messageDetails","getMessageDetailsInProgress","msgId","_messageDetails$data","_messageDetails$data2","_messageDetails$data3","messsageId","markAsReadMessageInProgress","messageBody","fromUserName","formateWithMoment","sendingDate","messageSubject","Divider","size","error","message","dangerouslySetInnerHTML","__html","Button","customHeader","open","setOpen","rest","disabled","setDisabled","bounds","setBounds","left","top","bottom","right","draggleRef","useRef","CommonModal","draggable","align","cursor","onMouseOver","onMouseOut","onFocus","onBlur","DotsIcon","modalRender","modal","Draggable","nodeRef","onStart","uiData","_event","_draggleRef$current","clientWidth","clientHeight","window","targetRect","current","getBoundingClientRect","x","y","startingValue","handleFilterChange","searchValue","searchValueDeBounce","MESSAGE_CENTER_EMAIL_FILTER_OPTIONS","val","setFieldValue","handleStartValueChange","initialValues","label","emails","handleSelect","selectedEmails","email","FormCheckBox","checkBoxClass","text","e","checked","Boolean","find","FilterCard","showBorder","_row$text","userName","_composeEmails$data","defaultUserList","handleFilterEmailsApply","handleClose","activeKeys","setActiveKeys","setStartingValue","setSearchValue","setSelectedEmails","composeEmails","groupedEmailListObj","groupBy","keys","_","selectedEmailsLocal","cloneDeep","push","remove","JSON","stringify","EmailFilterCard","isSearch","getComposeEmailIdSearchInProgress","PageIndex","PageSize","StartingSearchValue","ContainSearchValue","sm","handleLoadMoreEmails","CollapsiblePanel","activeKey","handleTabClick","tabs","companyName","header","EmailFilterHeader","content","FilterEmailList","tabKey","EmptyRecords","SelectedEmailList","variant","type","onClose","customFooter","descriptionClassName","contentClassName","EmailsFilterComponent","handleCancel","defaultMessageBody","composeType","MESSAGE_COMPOSE_TYPES","NEW","selectedEmailDetails","handleComposeDone","fileList","setFileList","setMessageBody","emailsFilterModal","setEmailsFilterModal","activeFolderDetails","file","index","indexOf","newFileList","slice","splice","userList","userListData","getFieldValue","forEach","details","_ref3","customerID","emailID","shortName","userID","group","selected","REPLY","FORWARD","onFinish","async","messageAttachmentDetails","blobFiles","Promise","resolve","reject","filesBase64","all","convertBlobToBase64","files","msgAttachmentID","attachmentName","attachmentGUID","attachmentDate","getFormattedTimeString","serviceModuleID","attachmentBase64Value","attachmentExtension","split","console","log","payload","parentMessageID","_ref2","handleDone","sendMessageInProgress","FormSelectBox","allowClear","mode","rules","required","suffixIcon","MailIcon","HiddenFormInput","Upload","multiple","beforeUpload","handleOnUpload","uniqBy","showUploadList","icon","UploadOutlined","TextEditor","buttonType","EmailsFilterModal","_ref4","DraggableModal","destroyOnClose","ComposeMessageForm","MessageCenterModal","composeModal","setComposeModal","messageCenterVisible","setComposeType","setSelectedEmailDetails","afterOpenChange","getMessageDetailsInSuccess","ModalHeader","handleOpenComposeModal","setMessageCenterModalVisible","maskClosable","MessageContent","MessageComposeModal","invertMode","PrimaryMenu","_userThemes$data","_userThemes$data2","_userThemes$data3","_userThemes$data4","_userProfile$data","_userProfile$data2","_userProfile$data3","_userProfile$data4","_userProfile$data5","userData","auth","user","shallowEqual","selectedCompany","companyList","changeCompanySuccess","changeCompany","userProfile","fullScreenStatus","common","isMessageCenterFetching","unreadMessages","userThemes","settings","selectedCompanyItem","setSelectedCompanyItem","getCompanyListInProgress","getUserProfileInProgress","getMessageCenterFoldersInProgress","setSelectedCompany","selectedCompanyId","_companyList$data","findSelectedCompany","filter","item","companyId","addEventListener","handleFullScreenChange","removeEventListener","setFullScreenInstance","Link","to","LogoIcon","topMenuText","Select","loading","showSearch","obj","changeCompanyInProgress","CompanyID","getUserMenuInProgress","filterOption","handleCompanySearch","input","option","_JSON$parse","RegExp","test","company","idx","Option","customerAddr1","Badge","count","primary","overflowCount","toggleFullScreen","doc","docEl","requestFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancelFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","FullScreenIcon","firstName","Skeleton","Avatar","shape","Input","minWidth","Dropdown","arrow","overlay","APP_ROUTES","USER_PROFILE_PERSONAL","handleLogout","initiateLogout","href","Space","src","profileImage","ProfileImage","Typography","Text","lastName","CaretDownOutlined","memo","SecondaryMenu","menus","getUserPreferenceInProgress","setAppLoader","primaryMenus","getPrimaryMenu","getTmsSettingsInProgress","customerKey","getCustomerRoutingSettingsInProgress","Customerkey","xs","paragraph","Menu","rootClassName","menuText","menuName","hasSubMenu","subMenus","API_APP_ROUTES","overflowedIndicator","MenuOutlined","overflowedIndicatorPopupClassName","AppLayouts","Outlet"],"sourceRoot":""}