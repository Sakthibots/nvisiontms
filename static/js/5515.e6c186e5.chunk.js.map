{"version":3,"file":"static/js/5515.e6c186e5.chunk.js","mappings":"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","sources":["assets/icons/user.svg","views/screens/Shipment/components/AddShipment/Tabs/ShipmentDetailsTab.jsx","assets/icons/categories.svg","views/screens/Shipment/components/AddShipment/Tabs/TransportationDetails.jsx","views/screens/Shipment/components/AddShipment/Tabs/ProductDetailsTab.jsx","views/screens/Shipment/components/AddShipment/Tabs/NotesDetails.jsx","views/screens/Shipment/components/AddShipment/Tabs/VendorDetails.jsx","views/screens/Shipment/components/AddShipment/Tabs/BillingDetails.jsx","views/screens/Shipment/components/AddShipment/Tabs/CategoryDetails.jsx","views/screens/Shipment/components/AddShipment/Tabs/AccountingDetails.jsx","views/screens/Shipment/components/AddShipment/Tabs/RateShopDetails.jsx","views/screens/Shipment/components/AddShipment/Tabs/ShipmentDocumentsDetails.jsx","views/screens/Shipment/components/AddShipment/AddShipmentTabs.jsx","views/screens/Shipment/AddShipmentScreen.jsx","views/pages/Shipment/AddShipmentPage.jsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgUser(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 24,\n    viewBox: \"0 0 22 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.478 11.1284C16.0137 10.0084 17.0137 8.19581 17.0137 6.15384C17.0137 2.76061 14.2531 0 10.8599 0C7.46665 0 4.70604 2.76061 4.70604 6.15384C4.70604 8.19581 5.70602 10.0084 7.24174 11.1284C3.42424 12.5892 0.706055 16.2905 0.706055 20.6154C0.706055 22.4817 2.22438 24 4.09066 24H17.6291C19.4954 24 21.0137 22.4817 21.0137 20.6154C21.0137 16.2905 18.2955 12.5892 14.478 11.1284ZM6.55221 6.15384C6.55221 3.77859 8.48463 1.84617 10.8599 1.84617C13.2351 1.84617 15.1676 3.77859 15.1676 6.15384C15.1676 8.52909 13.2351 10.4616 10.8599 10.4616C8.48463 10.4616 6.55221 8.52909 6.55221 6.15384ZM17.6291 22.1538H4.09066C3.24237 22.1538 2.55223 21.4637 2.55223 20.6153C2.55223 16.0344 6.27898 12.3076 10.8599 12.3076C15.4409 12.3076 19.1676 16.0344 19.1676 20.6153C19.1676 21.4637 18.4774 22.1538 17.6291 22.1538Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUser);\nexport default __webpack_public_path__ + \"static/media/user.809833694f979bd2592e7356a5d3948f.svg\";\nexport { ForwardRef as ReactComponent };","import { Col, Form, Row } from \"antd\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormInput from \"../../../../../components/Inputs/FormInput\";\r\nimport HiddenFormInput from \"../../../../../components/Inputs/HiddenFormInput\";\r\nimport FormLabel from \"../../../../../components/Labels/FormLabel\";\r\nimport PrimaryLabel from \"../../../../../components/Labels/PrimaryLabel\";\r\nimport TransportationProviderSelector from \"../../../../../components/Selectors/AsynchSearch/TransportationProviderSelector\";\r\nimport FreeOnBoardSelector from \"../../../../../components/Selectors/FreeOnBoardSelector\";\r\nimport IncotermSelector from \"../../../../../components/Selectors/IncotermSelector\";\r\nimport ShipmentBranchSelector from \"../../../../../components/Selectors/ShipmentBranchSelector\";\r\nimport ShipmentTermsSelector from \"../../../../../components/Selectors/ShipmentTermsSelector\";\r\nimport ShipmentTypeSelector from \"../../../../../components/Selectors/ShipmentTypeSelector\";\r\nimport useShipmentFieldsVisibility from \"../../../../../../redux/hooks/useShipmentFieldsVisibility\";\r\nimport ContentSpinner from \"../../../../../components/Spinners/ContentSpinner\";\r\nimport SecondaryLabel from \"../../../../../components/Labels/SecondaryLabel\";\r\nimport FormSelectBox from \"../../../../../components/Inputs/FormSelectBox\";\r\nimport PaymentTypesSelector from \"../../../../../components/Selectors/PaymentTypesSelector\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { routeFileSelector } from '../../../../../../utilz/i18n';\r\n\r\nconst ShipmentDetailsTab = ({ form, isPartialSave }) => {\r\n  const shipmentStatus = Form.useWatch(\"status\", form);\r\n  const { selectedCompany } = useSelector((state) => state.auth);\r\n  const PONumberIsVisible = useShipmentFieldsVisibility(\"PurchaseOrderNumber\");\r\n  const SONumberIsVisible = useShipmentFieldsVisibility(\"SalesOrderNumber\");\r\n  const paidByVisible = useShipmentFieldsVisibility(\"PaidBy\");\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, 'translation']);\r\n\r\n  return (\r\n    <Row gutter={30}>\r\n      <Col sm={24} md={12} lg={6}>\r\n        <Row>\r\n          <Col sm={24} className={\"mb-20\"}>\r\n            <FormLabel>{t('translation:default.fields.shipmentStatus')}</FormLabel>\r\n            <br />\r\n            <PrimaryLabel className={\"text-success f-14 fw-600\"}>\r\n              <span style={{ display: \"inline-block\", height: 28 }}>\r\n                {shipmentStatus}\r\n              </span>\r\n            </PrimaryLabel>\r\n            <HiddenFormInput\r\n              label={t('translation:default.fields.shipmentStatus')}\r\n              name={\"status\"}\r\n              disabled={true}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <TransportationProviderSelector\r\n              margin='mb-25'\r\n              label={t('translation:default.fields.transportationProvider.label')}\r\n              name={'carrierKey'}\r\n              disabled={false}\r\n              form={form}\r\n              editMode={false}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <FormInput\r\n              margin={PONumberIsVisible === true ? \"mb-15\" : \"mb-0\"}\r\n              label={t('translation:shipmentAdd.shipmentDetails.freightBillProNumber.label')}\r\n              name={\"proNo\"}\r\n              editMode={true}\r\n              maxLength={25}\r\n            />\r\n          </Col>\r\n          {PONumberIsVisible === \"PROGRESSING\" && (\r\n            <Col sm={24} className=\"text-center mb-20\">\r\n              <ContentSpinner />\r\n              <SecondaryLabel className=\"text-info f-16 \">\r\n               {t('translation:shipmentAdd.shipmentDetails.checking')}\r\n              </SecondaryLabel>\r\n            </Col>\r\n          )}\r\n\r\n          {PONumberIsVisible === true && (\r\n            <Col sm={24}>\r\n              <FormInput\r\n                margin='mb-15'\r\n                label={t('translation:shipmentAdd.shipmentDetails.purchaseOrders.label')}\r\n                name={'purchaseOrderNumber'}\r\n                editMode={true}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: t('translation:shipmentAdd.shipmentDetails.purchaseOrders.message'),\r\n                  },\r\n                ]}\r\n                maxLength={25}\r\n              />\r\n            </Col>\r\n          )}\r\n          {SONumberIsVisible === true && (\r\n            <Col sm={24}>\r\n              <FormInput\r\n                margin='mb-0'\r\n                label={t('translation:shipmentAdd.productDetails.salesOrders.label')}\r\n                name={'salesOrderNumber'}\r\n                editMode={true}\r\n              />\r\n            </Col>\r\n          )}\r\n          {paidByVisible === true && (\r\n            <Col sm={24}>\r\n              <div className=\"mt-15\">\r\n                <FormLabel>{t('translation:shipmentAdd.shipmentDetails.paidBy.label')}</FormLabel>\r\n                <Row gutter={15}>\r\n                  <Col sm={24} md={16}>\r\n                    <PaymentTypesSelector\r\n                      label={false}\r\n                      name={\"paymentTerms\"}\r\n                      placeholder={t('translation:shipmentAdd.shipmentDetails.paidBy.placeholder')}\r\n                      margin=\"m-0\"\r\n                      editMode={true}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={24} md={4}>\r\n                    <FormInput\r\n                      editMode={false}\r\n                      label={false}\r\n                      name=\"currency\"\r\n                      margin=\"m-0\"\r\n                      placeholder={t('translation:default.fields.currency.label')}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={24} md={4}>\r\n                    <FormInput\r\n                      editMode={true}\r\n                      label={false}\r\n                      name=\"paidAmount\"\r\n                      margin=\"m-0\"\r\n                      placeholder={t('translation:shipmentAdd.shipmentDetails.amount.label')}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </Col>\r\n      <Col sm={24} md={12} lg={6}>\r\n        <Row>\r\n          <Col sm={24}>\r\n            <ShipmentBranchSelector\r\n              margin=\"mb-15\"\r\n              label={t('translation:default.fields.branch.label')}\r\n              name={\"branchKey\"}\r\n              editMode={true}\r\n              rules={[{ required: true, message: t('translation:default.fields.branch.message') }]}\r\n              customerId={selectedCompany?.companyId}\r\n              disableValidation={isPartialSave}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <ShipmentTypeSelector\r\n              margin=\"mb-15\"\r\n              label={t('translation:default.fields.shipmentType.label')}\r\n              name={\"shipmentType\"}\r\n              editMode={true}\r\n              rules={[\r\n                { required: true, message: t('translation:default.fields.shipmentType.message') },\r\n              ]}\r\n              disableValidation={isPartialSave}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <ShipmentTermsSelector\r\n              margin=\"mb-0\"\r\n              label={t('translation:default.fields.shipmentTerms.label')}\r\n              name={\"shipmentTerms\"}\r\n              editMode={true}\r\n              rules={[\r\n                { required: true, message: t('translation:default.fields.shipmentTerms.message') },\r\n              ]}\r\n              disableValidation={isPartialSave}\r\n            />\r\n          </Col>\r\n          {paidByVisible === true && (\r\n            <Col sm={24}>\r\n              <div className=\"mt-15\">\r\n                <FormLabel>{`${t('translation:shipmentAdd.shipmentDetails.paidPercentage.label')}:`}</FormLabel>\r\n                <Row gutter={15}>\r\n                  <Col sm={24} md={16}>\r\n                    <FormInput\r\n                      inputType={\"number\"}\r\n                      editMode={true}\r\n                      label={false}\r\n                      name=\"paidPercentage\"\r\n                      margin=\"m-0\"\r\n                      placeholder={t('translation:shipmentAdd.shipmentDetails.paidPercentage.placeholder')}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={24} md={4}>\r\n                    <FormInput\r\n                      editMode={false}\r\n                      label={false}\r\n                      name=\"percentOf\"\r\n                      margin=\"m-0\"\r\n                      placeholder={t('translation:shipmentAdd.shipmentDetails.of.placeholder')}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={24} md={4}>\r\n                    <FormInput\r\n                      editMode={false}\r\n                      label={false}\r\n                      name=\"shipmentCost\"\r\n                      margin=\"m-0\"\r\n                      placeholder={t('translation:default.fields.shipmentCost')}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </Col>\r\n      <Col sm={24} md={12} lg={6}>\r\n        <Row>\r\n          <Col sm={24}>\r\n            <FreeOnBoardSelector\r\n              margin=\"mb-15\"\r\n              label={t('translation:shipmentAdd.shipmentDetails.freeOnBoard.label')}\r\n              name={\"fobCode\"}\r\n              editMode={true}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <FormInput\r\n              label={t('translation:shipmentAdd.shipmentDetails.customerAccountNumber.label')}\r\n              editMode={true}\r\n              margin={\"mb-0\"}\r\n              name={\"accountNumber\"}\r\n              maxLength={12}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Col sm={24} md={12} lg={6}>\r\n        <Row>\r\n          <Col sm={24}>\r\n            <IncotermSelector\r\n              margin=\"mb-15\"\r\n              label={t('translation:default.fields.incoTerm.label')}\r\n              name={\"incoCode\"}\r\n              editMode={true}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <FormInput\r\n              margin=\"mb-15\"\r\n              label={t('translation:shipmentAdd.shipmentDetails.incotermNamedPlace.label')}\r\n              name={\"incoPoint\"}\r\n              editMode={true}\r\n              maxLength={30}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <FormInput\r\n              label={t('translation:default.fields.containerNumber.label')}\r\n              editMode={true}\r\n              margin={\"mb-10\"}\r\n              name={\"trailerNumber\"}\r\n              maxLength={25}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <FormInput\r\n              margin=\"mb-15\"\r\n              label={t('translation:shipmentAdd.shipmentDetails.masterBillOfLandingNumber.label')}\r\n              name={\"masterBolNumber\"}\r\n              editMode={true}\r\n              maxLength={25}\r\n            />\r\n          </Col>\r\n          <Col sm={24}>\r\n            <FormInput\r\n              margin=\"mb-15\"\r\n              label={t('translation:default.fields.houseBillOfLandingNumber')}\r\n              name={\"bolNumber\"}\r\n              editMode={true}\r\n              maxLength={25}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ShipmentDetailsTab;\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCategories(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.76923 0H3.30769C2.69588 0.000732857 2.10933 0.244099 1.67672 0.676717C1.2441 1.10933 1.00073 1.69588 1 2.30769V8.76923C1.00073 9.38104 1.2441 9.96759 1.67672 10.4002C2.10933 10.8328 2.69588 11.0762 3.30769 11.0769H9.76923C10.381 11.0762 10.9676 10.8328 11.4002 10.4002C11.8328 9.96759 12.0762 9.38104 12.0769 8.76923V2.30769C12.0762 1.69588 11.8328 1.10933 11.4002 0.676717C10.9676 0.244099 10.381 0.000732857 9.76923 0ZM11.1538 8.76923C11.1538 9.13645 11.008 9.48864 10.7483 9.7483C10.4886 10.008 10.1365 10.1538 9.76923 10.1538H3.30769C2.94047 10.1538 2.58829 10.008 2.32862 9.7483C2.06896 9.48864 1.92308 9.13645 1.92308 8.76923V2.30769C1.92308 1.94047 2.06896 1.58829 2.32862 1.32862C2.58829 1.06896 2.94047 0.923077 3.30769 0.923077H9.76923C10.1365 0.923077 10.4886 1.06896 10.7483 1.32862C11.008 1.58829 11.1538 1.94047 11.1538 2.30769V8.76923ZM22.6923 0H16.2308C15.619 0.000732857 15.0324 0.244099 14.5998 0.676717C14.1672 1.10933 13.9238 1.69588 13.9231 2.30769V8.76923C13.9238 9.38104 14.1672 9.96759 14.5998 10.4002C15.0324 10.8328 15.619 11.0762 16.2308 11.0769H22.6923C23.3041 11.0762 23.8907 10.8328 24.3233 10.4002C24.7559 9.96759 24.9993 9.38104 25 8.76923V2.30769C24.9993 1.69588 24.7559 1.10933 24.3233 0.676717C23.8907 0.244099 23.3041 0.000732857 22.6923 0ZM24.0769 8.76923C24.0769 9.13645 23.931 9.48864 23.6714 9.7483C23.4117 10.008 23.0595 10.1538 22.6923 10.1538H16.2308C15.8635 10.1538 15.5114 10.008 15.2517 9.7483C14.992 9.48864 14.8462 9.13645 14.8462 8.76923V2.30769C14.8462 1.94047 14.992 1.58829 15.2517 1.32862C15.5114 1.06896 15.8635 0.923077 16.2308 0.923077H22.6923C23.0595 0.923077 23.4117 1.06896 23.6714 1.32862C23.931 1.58829 24.0769 1.94047 24.0769 2.30769V8.76923ZM9.76923 12.9231H3.30769C2.69588 12.9238 2.10933 13.1672 1.67672 13.5998C1.2441 14.0324 1.00073 14.619 1 15.2308V21.6923C1.00073 22.3041 1.2441 22.8907 1.67672 23.3233C2.10933 23.7559 2.69588 23.9993 3.30769 24H9.76923C10.381 23.9993 10.9676 23.7559 11.4002 23.3233C11.8328 22.8907 12.0762 22.3041 12.0769 21.6923V15.2308C12.0762 14.619 11.8328 14.0324 11.4002 13.5998C10.9676 13.1672 10.381 12.9238 9.76923 12.9231ZM11.1538 21.6923C11.1538 22.0595 11.008 22.4117 10.7483 22.6714C10.4886 22.931 10.1365 23.0769 9.76923 23.0769H3.30769C2.94047 23.0769 2.58829 22.931 2.32862 22.6714C2.06896 22.4117 1.92308 22.0595 1.92308 21.6923V15.2308C1.92308 14.8635 2.06896 14.5114 2.32862 14.2517C2.58829 13.992 2.94047 13.8462 3.30769 13.8462H9.76923C10.1365 13.8462 10.4886 13.992 10.7483 14.2517C11.008 14.5114 11.1538 14.8635 11.1538 15.2308V21.6923ZM19.4615 12.9231C18.3661 12.9231 17.2953 13.2479 16.3845 13.8565C15.4737 14.465 14.7639 15.33 14.3447 16.3421C13.9255 17.3541 13.8158 18.4677 14.0295 19.542C14.2432 20.6164 14.7707 21.6033 15.5453 22.3778C16.3198 23.1524 17.3067 23.6799 18.381 23.8936C19.4554 24.1073 20.569 23.9976 21.581 23.5784C22.593 23.1592 23.458 22.4493 24.0666 21.5385C24.6752 20.6277 25 19.5569 25 18.4615C24.9984 16.9931 24.4144 15.5853 23.3761 14.547C22.3377 13.5087 20.9299 12.9247 19.4615 12.9231ZM19.4615 23.0769C18.5487 23.0769 17.6564 22.8062 16.8974 22.2991C16.1384 21.7919 15.5468 21.0711 15.1975 20.2278C14.8481 19.3844 14.7567 18.4564 14.9348 17.5611C15.1129 16.6658 15.5525 15.8434 16.198 15.198C16.8434 14.5525 17.6658 14.1129 18.5611 13.9348C19.4564 13.7567 20.3844 13.8481 21.2278 14.1975C22.0711 14.5468 22.7919 15.1384 23.2991 15.8974C23.8062 16.6564 24.0769 17.5487 24.0769 18.4615C24.0756 19.6852 23.5889 20.8584 22.7236 21.7236C21.8584 22.5889 20.6852 23.0756 19.4615 23.0769Z\",\n    fill: \"black\",\n    stroke: \"#131432\",\n    strokeWidth: 0.5\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCategories);\nexport default __webpack_public_path__ + \"static/media/categories.42e235b02f5af25a72ca3770602aa7e1.svg\";\nexport { ForwardRef as ReactComponent };","import { Col, Form, Row } from \"antd\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport SvgConverter from \"../../../../../components/Common/SvgConverter\";\nimport { ReactComponent as CartIcon } from \"../../../../../../assets/icons/cart-black.svg\";\nimport { ReactComponent as DeliveryBoxIcon } from \"../../../../../../assets/icons/delivery-box.svg\";\nimport { ReactComponent as DistanceIcon } from \"../../../../../../assets/icons/distance.svg\";\nimport PrimaryLabel from \"../../../../../components/Labels/PrimaryLabel\";\nimport FormLabel from \"../../../../../components/Labels/FormLabel\";\nimport { NumericFormat } from \"react-number-format\";\nimport {\n  alignStopsByStopNo,\n  calculateSequenceAndDisplaySequence,\n  generateStopsSequence,\n  getShipmentTypeCounts,\n  parseStopsForMilageByStops,\n} from \"../../../../../../utilz/shipmentDataManupulation\";\nimport Button from \"../../../../../components/Buttons/Button\";\nimport _, { cloneDeep, findIndex, orderBy } from \"lodash\";\nimport ShipmentTransportForm from \"../../Tabs/ShipmentDetails/components/ShipmentTransportForm\";\nimport AddressBookModal from \"../../../../common/AddLocation/AddressBookModal\";\nimport { convertTimetoMoment } from \"../../../../../../utilz/dates\";\nimport ShipmentAddressInstantAddPopup from \"../../common/ShipmentAddressInstantAddPopup\";\nimport { checkAddressBookIsExistEffect } from \"../../../../../../redux/shipment/ShipmentEffects\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAppLoader } from \"../../../../../../redux/common/CommonActions\";\nimport {\n  getMilageByStopsInProgress,\n  getMilageByStopsInSuccess,\n  getShipmentBranchAddressInProgress,\n  setShipmentEditStatus,\n} from \"../../../../../../redux/shipment/ShipmentActions\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { routeFileSelector } from \"../../../../../../utilz/i18n\";\nimport useShipmentFieldsVisibility from \"../../../../../../redux/hooks/useShipmentFieldsVisibility\";\nimport useUserPreference from \"../../../../../../redux/hooks/useUserPreference\";\nimport useIs12HoursTimeFormat from \"../../../../../../redux/hooks/useIs12HoursTimeFormat\";\n\nconst defaultStops = [\n  {\n    isNew: true,\n    key: _.uniqueId(),\n    gridOperation: 1,\n    stopType: \"1\",\n    displaySequence: 1,\n  },\n  {\n    isNew: true,\n    key: _.uniqueId(),\n    gridOperation: 1,\n    stopType: \"2\",\n    displaySequence: 2,\n  },\n];\n\nconst TransportationDetails = ({\n  setShipmentDetails,\n  shipmentDetailsForm,\n  isPartialSave,\n}) => {\n  const dispatch = useDispatch();\n  const { selectedCompany } = useSelector((state) => state.auth);\n  const { getMilageByStops, branchAddress } = useSelector(\n    (state) => state.shipment\n  );\n  const [transportationList, setTransportationList] = useState(defaultStops);\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, \"translation\"]);\n\n  const [addressBookModal, setAddressBookModal] = useState(false);\n  const [addressBookModalIndex, setAddressBookModalIndex] = useState(false);\n  const [addressBookInstantAddModal, setAddressBookInstantAddModal] =\n    useState(false);\n\n  const handleNewStop = () => {\n    let transportationListLocal = _.cloneDeep(transportationList);\n    transportationListLocal.push({\n      isNew: true,\n      gridOperation: 1,\n      key: _.uniqueId(),\n      displaySequence: transportationListLocal?.length + 1,\n    });\n    setTransportationList(transportationListLocal);\n  };\n\n  const handleSubmit = async (data, index) => {\n    try {\n      if (data?.searchId) {\n        dispatch(setAppLoader(true));\n        const { data: addressBookData } = await checkAddressBookIsExistEffect({\n          searchId: data?.searchId,\n          customerKey: selectedCompany?.companyId,\n        });\n        dispatch(setAppLoader(false));\n        if (addressBookData?.length === 0) {\n          setAddressBookModalIndex(index);\n          setAddressBookInstantAddModal(true);\n        }\n      } else {\n        setAddressBookModalIndex(index);\n        setAddressBookInstantAddModal(true);\n      }\n\n      let transportationListLocal = _.cloneDeep(transportationList);\n      transportationListLocal[index] = {\n        ...data,\n        isNew: true,\n        transportationType: data.stopType,\n      };\n      // calculateSequenceAndDisplaySequence(transportationListLocal);\n      transportationListLocal[index].isNew = false;\n      transportationListLocal = alignStopsByStopNo(\n        transportationListLocal,\n        index\n      );\n      transportationListLocal = generateStopsSequence(\n        transportationListLocal,\n        index\n      );\n\n      setTransportationList(transportationListLocal);\n      setShipmentDetails((data) => ({\n        ...data,\n        transportationList: transportationListLocal,\n      }));\n    } catch (error) {\n      dispatch(setAppLoader(false));\n      console.log(error);\n    }\n  };\n\n  const handleRemove = (index) => {\n    let transportationListLocal = _.cloneDeep(transportationList);\n    transportationListLocal.splice(index, 1);\n    calculateSequenceAndDisplaySequence(transportationListLocal);\n    transportationListLocal = alignStopsByStopNo(\n      transportationListLocal,\n      index\n    );\n    setTransportationList(transportationListLocal);\n    setShipmentDetails((data) => ({\n      ...data,\n      transportationList: transportationListLocal,\n    }));\n    dispatch(setShipmentEditStatus(false));\n  };\n\n  const onSelectAddressBook = (data) => {\n    let transportationListLocal = cloneDeep(transportationList);\n    const daysOfWeek = data?.daysOfWeek?.split(\"-\");\n    const hoursOfOperation = data?.hoursOfOperation?.split(\"-\");\n    transportationListLocal[addressBookModalIndex] = {\n      ...transportationListLocal[addressBookModalIndex],\n      ...data,\n      address1: data.addr1,\n      fromOperationDay: daysOfWeek?.[0],\n      toOperationDay: daysOfWeek?.[1],\n      fromOperationHours: convertTimetoMoment(hoursOfOperation?.[0]),\n      toOperationHours: convertTimetoMoment(hoursOfOperation?.[1]),\n      zipCode: data?.zip,\n      extension: data?.phoneExt,\n      stateCode: data?.state,\n      city: data?.city,\n      isNew: true,\n      isAddressBook: true,\n    };\n    setTransportationList(transportationListLocal);\n    handleAddressBookModalClose();\n  };\n\n  const handleAddressBookModalClose = () => {\n    setAddressBookModal(false);\n    setAddressBookModalIndex(false);\n  };\n\n  const handleNewLocation = (index) => {\n    setAddressBookModalIndex(index);\n    setAddressBookModal(true);\n  };\n\n  const handleMilage = () => {\n    let payload = {\n      Stops: parseStopsForMilageByStops(transportationList),\n    };\n    dispatch(getMilageByStopsInProgress(payload));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(\n        getMilageByStopsInSuccess({\n          totalMilageInMiles: 0,\n          totalMilageInKm: 0,\n        })\n      );\n    };\n  }, []);\n\n  const branchKey = Form.useWatch(\"branchKey\", shipmentDetailsForm);\n  const shipmentType = Form.useWatch(\"shipmentType\", shipmentDetailsForm);\n  const isBranchDetailsChange = useShipmentFieldsVisibility(\n    \"IsBranchDetailsChange\"\n  );\n  useEffect(() => {\n    if (branchKey && isBranchDetailsChange === true) {\n      dispatch(\n        getShipmentBranchAddressInProgress({\n          branchKey,\n          handleSuccess: generateStopByBranchAddress,\n        })\n      );\n    }\n  }, [branchKey, isBranchDetailsChange]);\n\n  useEffect(() => {\n    if (shipmentType && isBranchDetailsChange === true) {\n      generateStopByBranchAddress();\n    }\n  }, [shipmentType, isBranchDetailsChange]);\n\n  useEffect(() => {\n    generateStopByBranchAddress(false, true);\n  }, [selectedCompany]);\n\n  const generateStopByBranchAddress = (\n    addressDetailsData,\n    isDefault = false\n  ) => {\n    const addressDetails = addressDetailsData\n      ? addressDetailsData\n      : branchAddress?.data;\n    if (addressDetails && [\"I\", \"O\"].includes(shipmentType) && !isDefault) {\n      let stopData = {\n        key: _.uniqueId(),\n        displaySequence: 1,\n        gridOperation: 1,\n        editMode: true,\n        isNew: true,\n        address1: `${addressDetails?.branchAddr1}, ${addressDetails?.branchAddr2}`,\n        city: addressDetails?.branchCity,\n        stateCode: addressDetails?.branchState,\n        countryCode: addressDetails?.countryCode,\n        countryName: addressDetails?.countryName,\n        searchId: addressDetails?.searchId,\n        zipCode: addressDetails?.branchZip,\n        stopType: shipmentType === \"I\" ? \"2\" : \"1\",\n      };\n      let defaultStopsLocal = cloneDeep(defaultStops);\n      defaultStopsLocal[shipmentType === \"I\" ? 1 : 0] = stopData;\n      setTransportationList(defaultStopsLocal);\n    } else {\n      setTransportationList(defaultStops);\n    }\n  };\n\n  const is12HoursFormat = useIs12HoursTimeFormat();\n\n  return (\n    <div>\n      <Row className=\"align-items-center mb-15\" justify=\"space-between\">\n        <Col>\n          <Row gutter={30} className={\"align-items-center\"}>\n            <Col>\n              <Row align={\"middle\"} gutter={4}>\n                <Col className={\"lh-0\"}>\n                  <SvgConverter Icon={CartIcon} />\n                </Col>\n                <Col>\n                  <Row>\n                    <Col sm={24} className={\"lh-12\"}>\n                      <FormLabel className={\"lh-12\"}>\n                        {t(\"translation:default.fields.pickUp\")}\n                      </FormLabel>\n                    </Col>\n                    <Col sm={24}>\n                      <PrimaryLabel normal={true}>\n                        <NumericFormat\n                          value={String(\n                            \"0\" + getShipmentTypeCounts(\"1\", transportationList)\n                          )}\n                          displayType={\"text\"}\n                          isNumericString={true}\n                        />\n                      </PrimaryLabel>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              <Row align={\"middle\"} gutter={4}>\n                <Col className={\"lh-0\"}>\n                  <SvgConverter Icon={DeliveryBoxIcon} />\n                </Col>\n                <Col>\n                  <Row>\n                    <Col sm={24} className={\"lh-12\"}>\n                      <FormLabel className={\"lh-12\"}>\n                        {t(\n                          \"translation:shipmentAdd.transportationDetails.delivery\"\n                        )}\n                      </FormLabel>\n                    </Col>\n                    <Col sm={24}>\n                      <PrimaryLabel normal={true}>\n                        <NumericFormat\n                          value={String(\n                            \"0\" + getShipmentTypeCounts(\"2\", transportationList)\n                          )}\n                          displayType={\"text\"}\n                          isNumericString={true}\n                        />\n                      </PrimaryLabel>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              <Row align={\"middle\"} gutter={4}>\n                <Col className={\"lh-0\"}>\n                  <SvgConverter Icon={DistanceIcon} />\n                </Col>\n                <Col>\n                  <Row>\n                    <Col sm={24} className={\"lh-12\"}>\n                      <FormLabel className={\"lh-12\"}>\n                        {t(\n                          \"translation:shipmentAdd.transportationDetails.totalMiles\"\n                        )}\n                      </FormLabel>\n                    </Col>\n                    <Col sm={24}>\n                      <PrimaryLabel normal={true}>\n                        <NumericFormat\n                          thousandSeparator={true}\n                          thousandsGroupStyle={\"lakh\"}\n                          value={String(getMilageByStops?.totalMilageInMiles)}\n                          displayType={\"text\"}\n                          isNumericString={true}\n                          decimalScale={2}\n                        />\n                      </PrimaryLabel>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row gutter={20} className=\"align-items-center\">\n            <Col>\n              <Button\n                onClick={handleMilage}\n                disabled={transportationList?.length < 2}\n                loading={getMilageByStops?.progressing}\n                id=\"mileage-calculator\"\n              >\n                {t(\"translation:default.fields.milageCalculator\")}\n              </Button>\n            </Col>\n            <Col>\n              <Button id=\"add-stops\" onClick={handleNewStop} disabled={false}>\n                {t(\"translation:shipmentAdd.transportationDetails.addStops\")}\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <AddressBookModal\n        addressBookModal={addressBookModal && addressBookModalIndex !== false}\n        onSelectAddressBook={onSelectAddressBook}\n        handleAddressBookModalClose={handleAddressBookModalClose}\n      />\n\n      {transportationList.map((row, idx) => (\n        <ShipmentTransportForm\n          key={`${row.searchId}-${row.stopType}`}\n          transportationDetails={row}\n          shadowVisible={false}\n          handleSubmit={handleSubmit}\n          index={idx}\n          transportationList={transportationList}\n          disableEditOnSubmit={true}\n          handleRemove={handleRemove}\n          isLastItem={transportationList.length === idx + 1}\n          handleNewLocation={handleNewLocation}\n          hideDelivery={transportationList?.length === 1}\n          totalStops={transportationList?.length}\n          isPartialSave={isPartialSave}\n          is12HoursFormat={is12HoursFormat}\n        />\n      ))}\n\n      <ShipmentAddressInstantAddPopup\n        open={addressBookInstantAddModal}\n        setOpen={setAddressBookInstantAddModal}\n        locationData={transportationList[addressBookModalIndex]}\n      />\n    </div>\n  );\n};\n\nexport default TransportationDetails;\n","import { Col, Form, Popconfirm, Row } from \"antd\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Button from \"../../../../../components/Buttons/Button\";\nimport _, {\n  cloneDeep,\n  filter,\n  findIndex,\n  minBy,\n  orderBy,\n  sortedUniq,\n  sumBy,\n} from \"lodash\";\nimport ProductDetailsCard from \"../../Tabs/ProductDetails/GridView/ProductDetailsCard\";\nimport AddProductModal from \"../../../../common/AddProduct/AddProductModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProductsPackageIdModal from \"../../common/ProductsPackageIdModal/ProductsPackageIdModal\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { routeFileSelector } from \"../../../../../../utilz/i18n\";\nimport {\n  getProductDetailsByCodeEffect,\n  shipmentNmfcCalculateEffect,\n} from \"../../../../../../redux/shipment/ShipmentEffects\";\nimport {\n  setAppLoader,\n  setWarningModal,\n} from \"../../../../../../redux/common/CommonActions\";\nimport {\n  calCulateFreightClass,\n  triggerNotification,\n  trimObjectValues,\n  validateProductForCalculateClass,\n} from \"../../../../../../utilz/utilz\";\nimport ShipmentProductInstantAddPopup from \"../../common/ShipmentProductInstantAddPopup\";\nimport { freightClassCalculator } from \"../../../../../../utilz/shipmentDataManupulation\";\nimport { NOTIFICATION_TYPES } from \"../../../../../../contants/common\";\nimport Paper from \"../../../../../components/Paper/Paper\";\nimport FooterContentCard from \"../../../../common/FooterContentCard\";\nimport VerticalLine from \"../../../../../components/Bars/VerticalLine\";\nimport ProductDetailsCardPreview from \"../../Tabs/ProductDetails/GridView/ProductDetailsCardPreview\";\nimport useShipmentRoutingSettings from \"../../../../../../redux/hooks/useShipmentRoutingSettings\";\n\nconst ProductDetailsTab = ({\n  setShipmentDetails,\n  isPartialSave,\n  shipmentDetails,\n}) => {\n  const dispatch = useDispatch();\n  const [classCalculatorForm] = Form.useForm();\n  const { tmsSettings } = useSelector((state) => state.settings);\n  const { generateShipmentNo } = useSelector((state) => state.shipment);\n  const [productList, setProductList] = useState([]);\n\n  const [selectedPackageId, setSelectedPackageId] = useState(false);\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, \"translation\"]);\n\n  const [addProductModal, setAddProductModal] = useState(false);\n  const [addProductModalIndex, setAddProductModalIndex] = useState(false);\n  const [instanceAddProductData, setInstanceAddProductData] = useState(false);\n  const notificationAPI = useSelector((state) => state.common.notificationAPI);\n\n  const originDestinationDetails = useMemo(() => {\n    let data = { origin: {}, destination: {} };\n    if (shipmentDetails?.transportationList?.length > 1) {\n      let origin = filter(\n        shipmentDetails.transportationList,\n        ({ stopType }) => stopType == 1\n      );\n      origin = orderBy(origin, [\"displaySequence\"], [\"asc\"])[0];\n      let destination = filter(\n        shipmentDetails.transportationList,\n        ({ stopType }) => stopType == 2\n      );\n      destination = orderBy(destination, [\"displaySequence\"], [\"desc\"])[0];\n      data.origin = origin;\n      data.destination = destination;\n    }\n    return data;\n  }, [shipmentDetails?.transportationList]);\n\n  const defaultUoms = useMemo(() => {\n    if (\n      originDestinationDetails?.origin?.countryCode &&\n      originDestinationDetails?.destination?.countryCode\n    ) {\n      if (\n        originDestinationDetails?.origin?.countryCode === \"US\" &&\n        originDestinationDetails?.destination?.countryCode === \"US\"\n      ) {\n        return { weightUom: \"LB\", dimUom: \"N\" };\n      } else {\n        return { weightUom: \"KG\", dimUom: \"C\" };\n      }\n    }\n    return false;\n  }, [originDestinationDetails]);\n\n  useEffect(() => {\n    if (defaultUoms && productList?.length === 1 && productList?.[0]?.isNew) {\n      let data = cloneDeep(productList);\n      data[0] = { ...data[0], ...defaultUoms };\n      setProductList(data);\n    }\n  }, [defaultUoms]);\n\n  useEffect(() => {\n    if (tmsSettings?.success) {\n      const defaultData = {\n        isNew: true,\n        key: _.uniqueId(),\n        gridOperation: 1,\n        productCode: tmsSettings?.data?.shipmentSettings?.defaultProductCode,\n        productDescription:\n          tmsSettings?.data?.shipmentSettings?.defaultProdDesc,\n        length: tmsSettings?.data?.shipmentSettings?.defaultLen,\n        width: tmsSettings?.data?.shipmentSettings?.defaultWidth,\n        height: tmsSettings?.data?.shipmentSettings?.defaultHeight,\n        class: tmsSettings?.data?.shipmentSettings?.defaultFreightClass,\n        palletLoadType: t(\n          \"translation:default.fields.palletLoadType.optionNon\"\n        ),\n        ...(defaultUoms ? defaultUoms : {}),\n      };\n      if (productList?.length > 0 && productList?.[0]?.isNew) {\n        let data = cloneDeep(productList);\n        data[0] = defaultData;\n        setProductList(data);\n      } else if (productList?.length === 0) {\n        setProductList([defaultData]);\n      }\n    }\n  }, [tmsSettings]);\n\n  const handleNewProduct = () => {\n    let productListLocal = _.cloneDeep(productList);\n    productListLocal = [\n      {\n        isNew: true,\n        key: _.uniqueId(),\n        gridOperation: 1,\n        productCode: tmsSettings?.data?.shipmentSettings?.defaultProductCode,\n        productDescription:\n          tmsSettings?.data?.shipmentSettings?.defaultProdDesc,\n        length: tmsSettings?.data?.shipmentSettings?.defaultLen,\n        width: tmsSettings?.data?.shipmentSettings?.defaultWidth,\n        height: tmsSettings?.data?.shipmentSettings?.defaultHeight,\n        class: tmsSettings?.data?.shipmentSettings?.defaultFreightClass,\n        palletLoadType: t(\n          \"translation:default.fields.palletLoadType.optionNon\"\n        ),\n        ...(defaultUoms ? defaultUoms : {}),\n      },\n      ...productListLocal,\n    ];\n    setProductList(productListLocal);\n  };\n\n  const handleCopyLastProduct = () => {\n    let productListLocal = _.cloneDeep(productList);\n    if (productListLocal.length > 0) {\n      productListLocal = [\n        ...productListLocal,\n        {\n          ...productListLocal[0],\n          key: _.uniqueId(),\n        },\n      ];\n      setProductList(productListLocal);\n      setShipmentDetails((data) => ({\n        ...data,\n        productList: productListLocal,\n      }));\n    } else {\n      alert(t(\"translation:default.notification.emptyList\"));\n    }\n  };\n\n  const handleSubmit = async (data, index, isProductCodeValidate) => {\n    try {\n      data = trimObjectValues(data);\n      if (isProductCodeValidate) {\n        dispatch(setAppLoader(true));\n        let { data: productDetailsAsync } = await getProductDetailsByCodeEffect(\n          {\n            ProductCode: data?.productCode,\n          }\n        );\n        productDetailsAsync = trimObjectValues(productDetailsAsync);\n        dispatch(setAppLoader(false));\n\n        if (data?.productCode === productDetailsAsync?.productCode) {\n          handleFinalSubmit(data, index);\n        } else {\n          setInstanceAddProductData({ data, index });\n        }\n      } else {\n        handleFinalSubmit(data, index);\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch(setAppLoader(false));\n      handleFinalSubmit(data, index);\n    }\n  };\n\n  const handleFinalSubmit = (data, index) => {\n    const productListLocal = _.cloneDeep(productList);\n    productListLocal[index] = {\n      ...data,\n      isNew: false,\n      key: _.uniqueId(),\n    };\n    setProductList(productListLocal);\n    setShipmentDetails((data) => ({\n      ...data,\n      productList: productListLocal,\n    }));\n  };\n\n  const handleRemove = (index) => {\n    const productListLocal = _.cloneDeep(productList);\n    productListLocal.splice(index, 1);\n    setProductList(productListLocal);\n    setShipmentDetails((data) => ({\n      ...data,\n      productList: productListLocal,\n    }));\n  };\n\n  const onSelectAddressBook = (data) => {\n    let productListLocal = cloneDeep(productList);\n    productListLocal[addProductModalIndex] = {\n      ...productListLocal[addProductModalIndex],\n      productCode: data.productCode,\n      productDescription: data.productDesc,\n    };\n    setProductList(productListLocal);\n    handleAddProductModalClose();\n  };\n\n  const handleAddProductModalClose = () => {\n    setAddProductModal(false);\n    setAddProductModalIndex(false);\n  };\n\n  const handleNewProductModal = (index) => {\n    setAddProductModalIndex(index);\n    setAddProductModal(true);\n  };\n\n  const handleFreightClassCalculator = async (productList) => {\n    try {\n      dispatch(setAppLoader(true));\n      setProductList(productList.map((row) => ({ ...row, class: \"0\" })));\n      // const productDetails = minBy(\n      //   productList,\n      //   ({ itemSequenceKey }) => itemSequenceKey\n      // );\n      const productDetails = productList[0];\n      if (!productDetails) {\n        throw \"Failed to calculate freight class\";\n      }\n\n      await validateProductForCalculateClass([productDetails]);\n      let nmfcClassValue = 0;\n\n      if (productDetails?.nmfcNumber) {\n        dispatch(setAppLoader(true));\n        let payload = {\n          ShipmentKey: 0,\n          NMFCNumber: productDetails?.nmfcNumber,\n          Weight: productDetails.weight,\n          Length: productDetails.length,\n          Width: productDetails.width,\n          Height: productDetails.height,\n          dimUOM: productDetails.dimUom,\n          WeightUOM: productDetails.weightUom,\n        };\n        const { data: classValue } = await shipmentNmfcCalculateEffect(payload);\n        dispatch(setAppLoader(false));\n        if (classValue) {\n          nmfcClassValue = classValue;\n          triggerNotification(notificationAPI, {\n            type: NOTIFICATION_TYPES.SUCCESS,\n            title: \"NMFC Freight Class Calculated Successfully!\",\n          });\n        } else {\n          dispatch(\n            setWarningModal({\n              open: true,\n              description: \"NMFC Number not found!\",\n            })\n          );\n        }\n      }\n      let freightClass = 0;\n      if (nmfcClassValue > 0) {\n        freightClass = nmfcClassValue;\n      } else {\n        freightClass = calCulateFreightClass(\n          productDetails.length,\n          productDetails.width,\n          productDetails.height,\n          productDetails.weight,\n          productDetails.weightUom,\n          productDetails.billQty,\n          productDetails.billQtyUom,\n          productDetails.dimUom,\n          productDetails.cube\n        );\n        triggerNotification(notificationAPI, {\n          type: NOTIFICATION_TYPES.SUCCESS,\n          title: t(\"translation:shipment.freightClassSuccessfully\"),\n        });\n      }\n\n      let productListLocal = productList.map((row) => ({\n        ...row,\n        class: freightClass,\n      }));\n      setProductList(productListLocal);\n      setShipmentDetails((data) => ({\n        ...data,\n        productList: productListLocal,\n      }));\n      dispatch(setAppLoader(false));\n    } catch (error) {\n      dispatch(setAppLoader(false));\n      dispatch(\n        setWarningModal({\n          open: true,\n          description:\n            typeof error === \"string\"\n              ? error\n              : error?.response?.data\n              ? error?.response?.data\n              : \"Unknown error\",\n        })\n      );\n    }\n  };\n\n  const handleFormProviderSubmit = (submittedForm, { forms }) => {\n    if (forms && submittedForm === \"classCalculatorForm\") {\n      let productListL = cloneDeep(productList);\n      for (const key in forms) {\n        if (Object.hasOwnProperty.call(forms, key)) {\n          if (key !== \"classCalculatorForm\") {\n            const formData = forms[key].getFieldsValue();\n            const originIndex = findIndex(productListL, { key: formData.key });\n            productListL[originIndex] = {\n              ...productListL[originIndex],\n              ...formData,\n            };\n          }\n        }\n      }\n      handleFreightClassCalculator(productListL);\n    }\n  };\n\n  const productFieldsVisibility = useShipmentRoutingSettings(\"isMenuVisible\");\n\n  return (\n    <Form.Provider onFormFinish={handleFormProviderSubmit}>\n      <Form form={classCalculatorForm} name=\"classCalculatorForm\" />\n      <Row className=\"align-items-center mb-15\" justify=\"space-between\">\n        <Col></Col>\n        <Col>\n          <Row justify=\"end\" gutter={16}>\n            <Col>\n              <Button onClick={handleNewProduct} id={\"add-product\"}>\n                {t(\"translation:default.buttons.addProduct\")}\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={handleCopyLastProduct}\n                disabled={productList.length === 0}\n                id={\"copy-last-product\"}\n              >\n                {t(\"translation:shipmentAdd.productDetails.copyLastProduct\")}\n              </Button>\n            </Col>\n            <Col>\n              <Popconfirm\n                placement=\"bottomRight\"\n                title={t(\"translation:default.fields.popconfirmFreightClass\")}\n                onConfirm={() => classCalculatorForm.submit()}\n                okText={t(\"translation:default.options.yes\")}\n                cancelText={t(\"translation:default.options.no\")}\n                overlayClassName=\"delete-popup-container w-auto\"\n              >\n                <Button disabled={productList.length === 0}>\n                  {t(\"translation:shipment.freightClassCalculator\")}\n                </Button>\n              </Popconfirm>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      <AddProductModal\n        addressBookModal={addProductModal && addProductModalIndex !== false}\n        onSelectAddressBook={onSelectAddressBook}\n        handleAddressBookModalClose={handleAddProductModalClose}\n      />\n\n      <div key={JSON.stringify(defaultUoms)}>\n        {productList.map((row, idx) => (\n          <div key={row.key} className=\"mb-15\">\n            <ProductDetailsCardPreview\n              index={idx}\n              productDetails={row}\n              shadowVisible={false}\n              handleSubmit={handleSubmit}\n              remove={handleRemove}\n              isNew={row.isNew}\n              isLastItem={productList.length === idx + 1}\n              handleNewProductModal={handleNewProductModal}\n              setShipmentEditStatus={() => {}}\n              setSelectedPackageId={setSelectedPackageId}\n              showFreightClassCalculator={true}\n              isPartialSave={isPartialSave}\n              productFieldsVisibility={productFieldsVisibility}\n            />\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-15\">\n        <Paper className=\"background-header px-16 py-5\">\n          <Row justify={\"space-around\"}>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                defaultValue={\"0\"}\n                count={sumBy(productList, ({ weight }) => Number(weight))}\n                label={t(\"translation:shipment.totalChargableWeight\")}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                count={sortedUniq(\n                  productList.map(({ weightUOMDesc }) => weightUOMDesc)\n                ).join(\", \")}\n                label={t(\"translation:shipment.weightUnitOfMeasure\")}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                defaultValue={\"0\"}\n                count={sumBy(productList, ({ billQty }) => Number(billQty))}\n                label={t(\"translation:default.fields.billQty\")}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                count={sortedUniq(\n                  productList.map(({ billQtyUOMDesc }) => billQtyUOMDesc)\n                ).join(\", \")}\n                label={\"Package/Billed Quantity Unit Of Measure\"}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                defaultValue={\"0\"}\n                count={sumBy(productList, ({ length }) => Number(length))}\n                label={t(\"translation:default.fields.length\")}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                defaultValue={\"0\"}\n                count={sumBy(productList, ({ width }) => Number(width))}\n                label={t(\"translation:default.fields.width\")}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                defaultValue={\"0\"}\n                count={sumBy(productList, ({ height }) => Number(height))}\n                label={t(\"translation:default.fields.height\")}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                count={sortedUniq(\n                  productList.map(({ dimUOMDesc }) => dimUOMDesc)\n                ).join(\", \")}\n                label={\"DIM Unit Of Measure\"}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n            <Col>\n              <VerticalLine />\n            </Col>\n            <Col>\n              <FooterContentCard\n                reverse={true}\n                align={\"middle\"}\n                defaultValue={\"0\"}\n                count={sumBy(productList, ({ cube }) => Number(cube))}\n                label={t(\"translation:default.fields.cube.label\")}\n                contentClass=\"text-white f-16 fw-600\"\n                labelClass=\"text-light f-14\"\n              />\n            </Col>\n          </Row>\n        </Paper>\n      </div>\n      <ProductsPackageIdModal\n        packageId={selectedPackageId}\n        setSelectedPackageId={setSelectedPackageId}\n        shipmentNumber={generateShipmentNo?.shipmentNo}\n      />\n      <ShipmentProductInstantAddPopup\n        open={Boolean(instanceAddProductData?.data?.productCode)}\n        setOpen={setInstanceAddProductData}\n        productData={instanceAddProductData?.data}\n        index={instanceAddProductData?.index}\n        handlePopupResponse={handleFinalSubmit}\n      />\n    </Form.Provider>\n  );\n};\n\nexport default ProductDetailsTab;\n","import React, { useState, useMemo } from \"react\";\nimport _ from \"lodash\";\nimport NotesCard from \"../../Tabs/Notes/NotesCard\";\nimport { Form } from \"antd\";\nimport { setPageBlocker } from \"../../../../../../redux/common/CommonActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { routeFileSelector } from \"../../../../../../utilz/i18n\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsPageBlockerActive } from \"../../../../../../redux/common/CommonReducer\";\n\nconst NotesDetails = ({ setShipmentDetails, enableAutoFocus = true }) => {\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, \"translation\"]);\n\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const [notesValueForReset, setNotesValueForReset] = useState({\n    shipmentNotes: \"\",\n    detailNotes: \"\",\n  });\n\n  const handleSubmit = (formData) => {\n    setShipmentDetails((data) => ({\n      ...data,\n      ...formData,\n    }));\n    setNotesValueForReset(formData);\n  };\n  const resetNote = (name) => {\n    form.setFieldsValue({\n      ...notesValueForReset,\n      [name]: notesValueForReset[name],\n    });\n  };\n  const isPageBlockerActive = useSelector(selectIsPageBlockerActive);\n\n  return (\n    <div>\n      <Form\n        form={form}\n        onFinish={handleSubmit}\n        onFieldsChange={() => {\n          if (!isPageBlockerActive) {\n            dispatch(setPageBlocker(true));\n          }\n        }}\n      >\n        {/* <Row className=\"align-items-center mb-15\" justify=\"space-between\">\n        <Col></Col>\n        <Col>\n          <Button onClick={handleNewNote}>Add Notes</Button>\n        </Col>\n      </Row> */}\n        <NotesCard\n          form={form}\n          editModes={true}\n          title={t(\"translation:default.fields.shipmentNotes\")}\n          resetNote={resetNote}\n          inputName={\"shipmentNotes\"}\n          shadowVisible={false}\n          enableAutoFocus={enableAutoFocus}\n          hideEditButtons={true}\n          onBlur={() => form.submit()}\n          maxLength={\"2000\"}\n        />\n        <NotesCard\n          form={form}\n          editModes={true}\n          title={t(\"translation:default.fields.internalNotes.label\")}\n          resetNote={resetNote}\n          inputName={\"detailNotes\"}\n          shadowVisible={false}\n          margin={\"\"}\n          enableAutoFocus={enableAutoFocus}\n          hideEditButtons={true}\n          onBlur={() => form.submit()}\n          maxLength={\"2000\"}\n        />\n      </Form>\n    </div>\n  );\n};\n\nexport default NotesDetails;\n","import { Col, Row } from \"antd\";\nimport { cloneDeep, uniqueId } from \"lodash\";\nimport React, { useState, useMemo } from \"react\";\nimport Button from \"../../../../../components/Buttons/Button\";\nimport VendorDetailsCard from \"../../Tabs/VendorDetails/VendorDetailsCard\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport { routeFileSelector } from '../../../../../../utilz/i18n';\n\nconst VendorDetails = ({ setShipmentDetails, isPartialSave }) => {\n  const [vendorList, setVendorList] = useState([\n    { isNew: true, key: uniqueId() },\n  ]);\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, 'translation']);\n\n  const handleNewVendor = () => {\n    setVendorList((data) => [{ isNew: true, key: uniqueId() }, ...data]);\n  };\n\n  const handleDelete = (index) => {\n    let vendorListLocal = cloneDeep(vendorList);\n    vendorListLocal.splice(index, 1);\n    setVendorList(vendorListLocal);\n    setShipmentDetails((data) => ({\n      ...data,\n      shipmentVendorList: vendorListLocal,\n    }));\n  };\n  const handleSubmit = (data, index) => {\n    let vendorListLocal = cloneDeep(vendorList);\n    vendorListLocal[index] = { ...data, isNew: false, key: uniqueId() };\n    setVendorList(vendorListLocal);\n    setShipmentDetails((data) => ({\n      ...data,\n      shipmentVendorList: vendorListLocal,\n    }));\n  };\n  return (\n    <div>\n      <Row className=\"align-items-center mb-15\" justify=\"space-between\">\n        <Col></Col>\n        <Col>\n          <Button onClick={handleNewVendor} id={\"add-vendor\"}>\n             {t('translation:shipmentAdd.vendorDetails.addNewVendor')}\n          </Button>\n        </Col>\n      </Row>\n      {vendorList.map((row, idx) => (\n        <VendorDetailsCard\n          index={idx}\n          key={row.key}\n          vendorDetails={row}\n          handleDelete={handleDelete}\n          shadowVisible={false}\n          handleSubmit={handleSubmit}\n          isLastItem={vendorList.length === idx + 1}\n          isPartialSave={isPartialSave}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default VendorDetails;\n","import { Form } from \"antd\";\nimport React from \"react\";\nimport BillingDetailsForm from \"../../Tabs/BillingDetails/BillingDetailsForm\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsPageBlockerActive } from \"../../../../../../redux/common/CommonReducer\";\nimport { setPageBlocker } from \"../../../../../../redux/common/CommonActions\";\nimport { useDispatch } from \"react-redux\";\n\nconst BillingDetails = ({ form }) => {\n  const dispatch = useDispatch();\n  const isPageBlockerActive = useSelector(selectIsPageBlockerActive);\n  return (\n    <Form\n      onFieldsChange={() => {\n        if (!isPageBlockerActive) {\n          dispatch(setPageBlocker(true));\n          // setIsModified(true);\n        }\n      }}\n      form={form}\n      name={\"billingDetailsForm\"}\n    >\n      <BillingDetailsForm editMode={true} form={form} />\n    </Form>\n  );\n};\n\nexport default BillingDetails;\n","import { Col, Row } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport Button from \"../../../../../components/Buttons/Button\";\nimport CategoryDetailsCard from \"../../Tabs/CategoryDetails/CategoryDetailsCard\";\nimport { cloneDeep, uniqueId } from \"lodash\";\nimport { useLocation } from \"react-router-dom\";\nimport { routeFileSelector } from \"../../../../../../utilz/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nconst CategoryDetails = ({ setShipmentDetails, isPartialSave }) => {\n  const [categoryList, setCategoryList] = useState([\n    { isNew: true, key: uniqueId(), gridOperation: 1 },\n  ]);\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, 'translation']);\n  const handleDelete = (index) => {\n    let categoryListLocal = cloneDeep(categoryList);\n    categoryListLocal.splice(index, 1);\n    setCategoryList(categoryListLocal);\n    setShipmentDetails((data) => ({\n      ...data,\n      shipmentCategoryInformation: categoryListLocal,\n    }));\n  };\n\n  const handleSubmit = (data, index) => {\n    let categoryListLocal = cloneDeep(categoryList);\n    categoryListLocal[index] = { ...data, isNew: false, key: uniqueId() };\n    setCategoryList(categoryListLocal);\n    setShipmentDetails((data) => ({\n      ...data,\n      shipmentCategoryInformation: categoryListLocal,\n    }));\n  };\n\n  return (\n    <div>\n      <Row justify=\"space-between mb-15\" gutter={16} align={\"middle\"}>\n        <Col></Col>\n        <Col>\n          <Button\n            onClick={() =>\n              setCategoryList((data) => [\n                { isNew: true, key: uniqueId(), gridOperation: 1 },\n                ...data,\n              ])\n            }\n          >\n            {t('translation:shipmentAdd.categoryDetails.addNewCategory')}\n          </Button>\n        </Col>\n      </Row>\n      {categoryList.map((row, idx) => (\n        <CategoryDetailsCard\n          key={row.key}\n          categoryDetails={row}\n          handleDelete={handleDelete}\n          index={idx}\n          handleSubmit={handleSubmit}\n          isLastItem={categoryList.length === idx + 1}\n          isPartialSave={isPartialSave}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryDetails;\n","import { Col, Form, Row } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShipmentCustomerAccessorialsInProgress } from \"../../../../../../redux/shipment/ShipmentActions\";\nimport ContentSpinner from \"../../../../../components/Spinners/ContentSpinner\";\nimport AccessorialsDetails from \"../../common/Accessorials/AccessorialsDetails\";\nimport TaxDetails from \"../../common/Accessorials/TaxDetails\";\nimport { setPageBlocker } from \"../../../../../../redux/common/CommonActions\";\nimport { selectIsPageBlockerActive } from \"../../../../../../redux/common/CommonReducer\";\n\nconst AccountingDetails = ({ accountingForm }) => {\n  const dispatch = useDispatch();\n  const { selectedCompany } = useSelector((state) => state.auth);\n  const { shipmentCustomerAccessorials } = useSelector(\n    (state) => state.shipment\n  );\n\n  useEffect(() => {\n    if (selectedCompany?.companyId) {\n      dispatch(\n        getShipmentCustomerAccessorialsInProgress({\n          shipmentKey: 0,\n          customerKey: selectedCompany?.companyId,\n        })\n      );\n    }\n  }, [selectedCompany]);\n\n  const isPageBlockerActive = useSelector(selectIsPageBlockerActive);\n  return (\n    <Form\n      name=\"accountingForm\"\n      form={accountingForm}\n      onFieldsChange={() => {\n        if (!isPageBlockerActive) {\n          dispatch(setPageBlocker(true));\n        }\n      }}\n    >\n      <Row gutter={30}>\n        <Col sm={12}>\n          {shipmentCustomerAccessorials?.progressing ? (\n            <ContentSpinner size=\"large\" />\n          ) : (\n            <AccessorialsDetails\n              form={accountingForm}\n              accessorials={shipmentCustomerAccessorials?.data}\n              customHeight={\"vh-40\"}\n            />\n          )}\n        </Col>\n        <Col sm={12}>\n          <TaxDetails form={accountingForm} customHeight={\"vh-40\"} />\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default AccountingDetails;\n","import { Col, Divider, Form, Row } from \"antd\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getShipmentRateShopListInSuccess } from \"../../../../../../redux/shipment/ShipmentActions\";\r\nimport { exportRateShopDetails } from \"../../../../../../utilz/exportToExcel\";\r\nimport Button from \"../../../../../components/Buttons/Button\";\r\nimport EmptyRecords from \"../../../../../components/Common/EmptyRecords\";\r\nimport PrimaryLabel from \"../../../../../components/Labels/PrimaryLabel\";\r\nimport ContentSpinner from \"../../../../../components/Spinners/ContentSpinner\";\r\nimport RateShopDetailsCard from \"../../Tabs/RateShopDetails/RateShopDetailsCard\";\r\nimport RateShopFilters from \"../../Tabs/RateShopDetails/RateShopFilters\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { routeFileSelector } from \"../../../../../../utilz/i18n\";\r\n\r\nconst RateShopDetails = ({ shipmentTerms }) => {\r\n  const dispatch = useDispatch();\r\n  const [spotBidForm] = Form.useForm();\r\n  const { rateShopList } = useSelector((state) => state.shipment);\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, \"translation\"]);\r\n\r\n  const handleRateSelect = (rateIndex) => {\r\n    let rateShopListLocal = cloneDeep(rateShopList.data);\r\n    rateShopListLocal[rateIndex].isSelected = true;\r\n    dispatch(\r\n      getShipmentRateShopListInSuccess({\r\n        data: rateShopListLocal,\r\n        forceUpdate: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"flex-direction-column flex-nowrap\">\r\n        <div className=\"w-100\">\r\n          <RateShopFilters\r\n            cardLG={6}\r\n            cardClassName={\"w-18\"}\r\n            formClassName={\"\"}\r\n            gutter={15}\r\n            isAddShipment={true}\r\n            showSpotBidButton={true}\r\n            spotBidForm={spotBidForm}\r\n            shipmentTerms={shipmentTerms}\r\n          />\r\n        </div>\r\n        <Divider className=\"ml-n50 vw-100 my-16\" />\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n          <Col>\r\n            <PrimaryLabel className={\"fw-700 f-18\"}>\r\n              {t(\"translation:shipmentAdd.rateShopDetails.rateShopDetails\")}\r\n            </PrimaryLabel>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              onClick={() =>\r\n                exportRateShopDetails(\r\n                  rateShopList?.data?.length > 0 ? rateShopList?.data : []\r\n                )\r\n              }\r\n            >\r\n              {t(\"translation:default.buttons.exportToExcel\")}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Divider className=\"ml-n50 vw-100 my-16\" />\r\n        <div>\r\n          {rateShopList.progressing ? (\r\n            <div className=\"py-40\">\r\n              <ContentSpinner size={\"large\"} />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {rateShopList?.data?.length > 0 ? (\r\n                <div\r\n                  className=\"overflow-hidden d-flex flex-direction-column\"\r\n                  style={{ maxHeight: \"40vh\", heigh: \"100%\" }}\r\n                >\r\n                  <div className=\"flex-1 custom-scroll-bar\">\r\n                    {rateShopList?.data?.map((row, index) => (\r\n                      <RateShopDetailsCard\r\n                        key={index}\r\n                        rateShopDetails={row}\r\n                        handleRateShopSelection={handleRateSelect}\r\n                        index={index}\r\n                        value={row?.isSelected ? index : false}\r\n                        isRateShop={true}\r\n                        isLast={rateShopList?.data?.length === index + 1}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <EmptyRecords\r\n                  descriptionTwo={t(\r\n                    \"translation:default.emptyRecords.descriptionTwo\"\r\n                  )}\r\n                  title={\r\n                    rateShopList.error\r\n                      ? t(\r\n                          \"translation:shipmentAdd.rateShopDetails.emptyRecords.title\"\r\n                        )\r\n                      : undefined\r\n                  }\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Row>\r\n      <Form name=\"spotBidForm\" form={spotBidForm}>\r\n        {/* <Button type=\"primary\" variant=\"primary\" buttonType=\"submit\">\r\n          {t('translation:default.fields.spotBid')}\r\n        </Button> */}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RateShopDetails;\r\n","import { cloneDeep, remove, uniqueId } from \"lodash\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport Button from \"../../../../../components/Buttons/Button\";\r\nimport { Col, Row } from \"antd\";\r\nimport FilesDetailsCard from \"../../Tabs/FilesDetails/FilesDetailsCard\";\r\nimport useDocsExtentions from \"../../../../../../redux/hooks/useDocsExtentions\";\r\nimport { MODULES_ID } from \"../../../../../../contants/common\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { routeFileSelector } from '../../../../../../utilz/i18n';\r\n\r\nconst ShipmentDocumentsDetails = ({ setShipmentDetails, isPartialSave }) => {\r\n  const [documentList, setDocumentList] = useState([\r\n    { renderKey: uniqueId(), isNew: true },\r\n  ]);\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, 'translation']);\r\n  const handleNewFile = () => {\r\n    let data = cloneDeep(documentList);\r\n    data = [{ renderKey: uniqueId(), isNew: true }, ...data];\r\n    setDocumentList(data);\r\n  };\r\n\r\n  const handleDelete = async (index) => {\r\n    let data = cloneDeep(documentList);\r\n    data.splice(index, 1);\r\n    setDocumentList(data);\r\n  };\r\n\r\n  const uploadedDocumentTypes = useMemo(\r\n    () =>\r\n      remove(\r\n        documentList.map(({ fileType }) => (fileType ? fileType : false)),\r\n        (val) => Boolean(val)\r\n      ),\r\n    [documentList]\r\n  );\r\n  const allowedExtentions = useDocsExtentions(MODULES_ID.SHIPMENT);\r\n\r\n  useEffect(() => {\r\n    if (setShipmentDetails) {\r\n      setShipmentDetails((data) => ({ ...data, documentList }));\r\n    }\r\n  }, [documentList, setShipmentDetails]);\r\n\r\n  const handleSave = (data, fileInput, index) => {\r\n    let documentListLocal = cloneDeep(documentList);\r\n    documentListLocal[index] = {\r\n      ...documentListLocal[index],\r\n      ...data,\r\n    };\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(fileInput);\r\n    reader.onload = () => {\r\n      documentListLocal[index].fileBase64 = reader.result;\r\n      setDocumentList(documentListLocal);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex h-100 flex-direction-column\"\r\n      style={{ maxHeight: \"40vh\" }}\r\n    >\r\n      <Row\r\n        className=\"mb-15\"\r\n        justify=\"space-between\"\r\n        gutter={16}\r\n        align={\"middle\"}\r\n      >\r\n        <Col></Col>\r\n        <Col>\r\n          <Button onClick={handleNewFile}>{t('translation:default.documentManager.addNewFile')}</Button>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"flex-1 custom-scroll-bar\">\r\n        {documentList.map((row, index) => (\r\n          <FilesDetailsCard\r\n            key={row.renderKey}\r\n            fileDetails={row}\r\n            handleDelete={handleDelete}\r\n            handleSaveForAddNewScreen={handleSave}\r\n            isNew={row.isNew}\r\n            index={index}\r\n            uploadedDocumentTypes={uploadedDocumentTypes}\r\n            allowedExtentions={allowedExtentions}\r\n            isPartialSave={isPartialSave}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShipmentDocumentsDetails;\r\n","import { Col, Form, Row } from \"antd\";\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport SvgConverter from \"../../../../components/Common/SvgConverter\";\r\nimport ShipmentDetailsTab from \"./Tabs/ShipmentDetailsTab\";\r\nimport { ReactComponent as ShipmentIcon } from \"../../../../../assets/icons/shipment-file.svg\";\r\nimport { ReactComponent as TruckIcon } from \"../../../../../assets/icons/truck.svg\";\r\nimport { ReactComponent as DocsListIcon } from \"../../../../../assets/icons/docs-list.svg\";\r\nimport { ReactComponent as UserIcon } from \"../../../../../assets/icons/user.svg\";\r\nimport { ReactComponent as NotesIcon } from \"../../../../../assets/icons/notes.svg\";\r\nimport { ReactComponent as CategoriesIcon } from \"../../../../../assets/icons/categories.svg\";\r\nimport { ReactComponent as DocsCurrencyIcon } from \"../../../../../assets/icons/docs-currency.svg\";\r\nimport { ReactComponent as FilesIcon } from \"../../../../../assets/icons/files-records.svg\";\r\nimport CollapsiblePanel from \"../../../../components/Tabs/CollapsiblePanel\";\r\nimport TransportationDetails from \"./Tabs/TransportationDetails\";\r\nimport ProductDetailsTab from \"./Tabs/ProductDetailsTab\";\r\nimport NotesDetails from \"./Tabs/NotesDetails\";\r\nimport VendorDetails from \"./Tabs/VendorDetails\";\r\nimport BillingDetails from \"./Tabs/BillingDetails\";\r\nimport CategoryDetails from \"./Tabs/CategoryDetails\";\r\nimport AccountingDetails from \"./Tabs/AccountingDetails\";\r\nimport useShipmentRoutingSettings from \"../../../../../redux/hooks/useShipmentRoutingSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RateShopDetails from \"./Tabs/RateShopDetails\";\r\nimport ShipmentDocumentsDetails from \"./Tabs/ShipmentDocumentsDetails\";\r\nimport { setPageBlocker } from \"../../../../../redux/common/CommonActions\";\r\nimport useShipmentFieldsVisibility from \"../../../../../redux/hooks/useShipmentFieldsVisibility\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { routeFileSelector } from \"../../../../../utilz/i18n\";\r\nimport { selectIsPageBlockerActive } from \"../../../../../redux/common/CommonReducer\";\r\n\r\nconst AddShipmentTabs = ({\r\n  form,\r\n  setShipmentDetails,\r\n  shipmentDetailsForm,\r\n  billingDetailsForm,\r\n  activeKey,\r\n  setActiveKey,\r\n  accountingForm,\r\n  isPartialSave,\r\n  shipmentDetails,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { tmsSettings } = useSelector((state) => state.settings);\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, \"translation\"]);\r\n\r\n  const havingAccessForMenu = useShipmentRoutingSettings(\"isMenuVisible\");\r\n  const GenerateTitle = ({ title, Icon, size = 25 }) => {\r\n    return (\r\n      <Row gutter={10} align={\"middle\"}>\r\n        <Col className=\"lh-0\">\r\n          <SvgConverter width={size} height={size} Icon={Icon} />\r\n        </Col>\r\n        <Col className=\"lh-0\">\r\n          <label className=\"lh-0 text-dark cursor-pointer\">{title}</label>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tmsSettings?.success) {\r\n      shipmentDetailsForm.setFieldsValue({\r\n        branchKey:\r\n          tmsSettings?.data?.shipmentSettings?.defaultBranchKey == 0\r\n            ? undefined\r\n            : Number(tmsSettings?.data?.shipmentSettings?.defaultBranchKey),\r\n        shipmentType: tmsSettings?.data?.shipmentSettings?.defaultShipmentType,\r\n        shipmentTerms:\r\n          tmsSettings?.data?.shipmentSettings?.defaultShipmentTerms,\r\n        incoCode: tmsSettings?.data?.shipmentSettings?.defaultIncoTerm,\r\n      });\r\n    }\r\n  }, [tmsSettings]);\r\n\r\n  const IsCategoryVisible = useShipmentFieldsVisibility(\"IsCategoryVisible\");\r\n  const IsBillToVisible = useShipmentFieldsVisibility(\"IsBillToVisible\");\r\n  const IsVendorVisible = useShipmentFieldsVisibility(\"IsVendorVisible\");\r\n  const isPageBlockerActive = useSelector(selectIsPageBlockerActive);\r\n  const shipmentTerms = Form.useWatch(\"shipmentTerms\", shipmentDetailsForm);\r\n\r\n  return (\r\n    <CollapsiblePanel\r\n      forceRender={true}\r\n      handleTabClick={(keys) => setActiveKey(keys)}\r\n      activeKey={activeKey}\r\n      tabs={[\r\n        {\r\n          tabKey: \"1\",\r\n          content: (\r\n            <Form\r\n              initialValues={{\r\n                status: \"New\",\r\n              }}\r\n              form={shipmentDetailsForm}\r\n              name={\"shipmentDetailsForm\"}\r\n              onFieldsChange={() => {\r\n                if (!isPageBlockerActive) {\r\n                  dispatch(setPageBlocker(true));\r\n                }\r\n              }}\r\n            >\r\n              <ShipmentDetailsTab\r\n                form={shipmentDetailsForm}\r\n                isPartialSave={isPartialSave}\r\n              />\r\n            </Form>\r\n          ),\r\n          header: (\r\n            <GenerateTitle\r\n              title={t(\"translation:shipmentAdd.titles.details\")}\r\n              Icon={ShipmentIcon}\r\n              size={25}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          tabKey: \"2\",\r\n          content: (\r\n            <TransportationDetails\r\n              form={form}\r\n              setShipmentDetails={setShipmentDetails}\r\n              isPartialSave={isPartialSave}\r\n              shipmentDetailsForm={shipmentDetailsForm}\r\n              shipmentDetails={shipmentDetails}\r\n            />\r\n          ),\r\n          header: (\r\n            <GenerateTitle\r\n              title={t(\"translation:shipmentAdd.titles.transportation\")}\r\n              Icon={TruckIcon}\r\n              size={25}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          tabKey: \"3\",\r\n          content: (\r\n            <ProductDetailsTab\r\n              setShipmentDetails={setShipmentDetails}\r\n              isPartialSave={isPartialSave}\r\n              shipmentDetails={shipmentDetails}\r\n            />\r\n          ),\r\n          header: (\r\n            <GenerateTitle\r\n              title={t(\"translation:default.fields.productDetails\")}\r\n              Icon={DocsListIcon}\r\n              size={25}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          tabKey: \"4\",\r\n          content: (\r\n            <RateShopDetails\r\n              setShipmentDetails={setShipmentDetails}\r\n              shipmentTerms={shipmentTerms}\r\n            />\r\n          ),\r\n          header: (\r\n            <GenerateTitle\r\n              title={t(\"translation:default.buttons.rateShop\")}\r\n              Icon={DocsListIcon}\r\n              size={25}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          tabKey: \"5\",\r\n          content: (\r\n            <NotesDetails\r\n              setShipmentDetails={setShipmentDetails}\r\n              enableAutoFocus={false}\r\n            />\r\n          ),\r\n          header: (\r\n            <GenerateTitle\r\n              title={t(\"translation:default.fields.notes\")}\r\n              Icon={NotesIcon}\r\n              size={25}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          tabKey: \"11\",\r\n          content: (\r\n            <ShipmentDocumentsDetails\r\n              setShipmentDetails={setShipmentDetails}\r\n              isPartialSave={isPartialSave}\r\n            />\r\n          ),\r\n          header: (\r\n            <GenerateTitle\r\n              title={t(\"translation:default.documentManager.title\")}\r\n              Icon={FilesIcon}\r\n              size={25}\r\n            />\r\n          ),\r\n        },\r\n        ...(IsVendorVisible\r\n          ? [\r\n              {\r\n                tabKey: \"6\",\r\n                content: (\r\n                  <VendorDetails\r\n                    setShipmentDetails={setShipmentDetails}\r\n                    isPartialSave={isPartialSave}\r\n                  />\r\n                ),\r\n                header: (\r\n                  <GenerateTitle\r\n                    title={t(\"translation:shipmentAdd.titles.vendor\")}\r\n                    Icon={UserIcon}\r\n                    size={25}\r\n                  />\r\n                ),\r\n              },\r\n            ]\r\n          : []),\r\n\r\n        ...(IsBillToVisible\r\n          ? [\r\n              {\r\n                tabKey: \"7\",\r\n                content: <BillingDetails form={billingDetailsForm} />,\r\n                header: (\r\n                  <GenerateTitle\r\n                    title={t(\"translation:shipmentAdd.titles.bill\")}\r\n                    Icon={DocsCurrencyIcon}\r\n                    size={25}\r\n                  />\r\n                ),\r\n              },\r\n            ]\r\n          : []),\r\n\r\n        ...(IsCategoryVisible\r\n          ? [\r\n              {\r\n                tabKey: \"8\",\r\n                content: (\r\n                  <CategoryDetails\r\n                    setShipmentDetails={setShipmentDetails}\r\n                    isPartialSave={isPartialSave}\r\n                  />\r\n                ),\r\n                header: (\r\n                  <GenerateTitle\r\n                    title={t(\"translation:shipmentAdd.titles.category\")}\r\n                    Icon={CategoriesIcon}\r\n                    size={25}\r\n                  />\r\n                ),\r\n              },\r\n            ]\r\n          : []),\r\n\r\n        ...(havingAccessForMenu\r\n          ? [\r\n              {\r\n                tabKey: \"10\",\r\n                content: <AccountingDetails accountingForm={accountingForm} />,\r\n                header: (\r\n                  <GenerateTitle\r\n                    title={t(\"translation:shipmentAdd.titles.accounting\")}\r\n                    Icon={DocsCurrencyIcon}\r\n                    size={25}\r\n                  />\r\n                ),\r\n              },\r\n            ]\r\n          : []),\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddShipmentTabs;\r\n","import { Col, Form, Row } from \"antd\";\r\nimport { cloneDeep, filter, find, orderBy } from \"lodash\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { NOTIFICATION_TYPES } from \"../../../contants/common\";\r\nimport {\r\n  setAppLoader,\r\n  setPageBlocker,\r\n  setShipmentModal,\r\n} from \"../../../redux/common/CommonActions\";\r\nimport {\r\n  createShipmentInProgress,\r\n  generateApprovalNumberInProgress,\r\n  generateApprovalNumberInSuccess,\r\n  generateShipmentNoInProgress,\r\n  generateShipmentNoInSuccess,\r\n  getShipmentRateShopListInProgress,\r\n  resetShipmentRateShopList,\r\n} from \"../../../redux/shipment/ShipmentActions\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { routeFileSelector } from \"../../../utilz/i18n\";\r\nimport { triggerNotification, valueToString } from \"../../../utilz/utilz\";\r\nimport FormInput from \"../../components/Inputs/FormInput\";\r\nimport Paper from \"../../components/Paper/Paper\";\r\nimport AddShipmentTabs from \"./components/AddShipment/AddShipmentTabs\";\r\nimport SaveCancelButtons from \"./components/SaveCancelButtons\";\r\nimport useShipmentFieldsVisibility from \"../../../redux/hooks/useShipmentFieldsVisibility\";\r\nimport ContentSpinner from \"../../components/Spinners/ContentSpinner\";\r\nimport SecondaryLabel from \"../../components/Labels/SecondaryLabel\";\r\nimport HiddenFormInput from \"../../components/Inputs/HiddenFormInput\";\r\nimport FormCheckBox from \"../../components/Inputs/FormCheckBox\";\r\nimport Button from \"../../components/Buttons/Button\";\r\nimport SpotBidDetails from \"./components/Tabs/SpotBid/SpotBidDetails\";\r\nimport CommonModal from \"../../components/Modals/CommonModal\";\r\nimport ToggleSwitch from \"../../components/Switch/ToggleSwitch\";\r\nimport FormLabel from \"../../components/Labels/FormLabel\";\r\nimport FiledCard from \"./components/FiledCard\";\r\nimport { APP_ROUTES } from \"../../../contants/RoutesEnum\";\r\nimport {\r\n  convertRateShopResponseToAPI,\r\n  convertShipmentDetailsLocalToAPI,\r\n  shipmentRateShopLocalToRateEngineAPI,\r\n} from \"../../../utilz/shipmentDataManupulation\";\r\nimport { useRef } from \"react\";\r\nimport ConfirmationModal from \"../../components/Modals/ConfirmationModal\";\r\n\r\nconst AddShipmentScreen = () => {\r\n  const scrollRef = useRef(null);\r\n  const [activeKey, setActiveKey] = useState([\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n    \"10\",\r\n    \"11\",\r\n  ]);\r\n  const {\r\n    generateShipmentNo,\r\n    rateShopList,\r\n    generateApprovalNo,\r\n    createShipment,\r\n  } = useSelector((state) => state.shipment);\r\n  const [parcelExpressRedirectionModal, setParcelExpressRedirectionModal] =\r\n    useState(false);\r\n  const { selectedCompany, user } = useSelector((state) => state.auth);\r\n  const notificationAPI = useSelector((state) => state.common.notificationAPI);\r\n  const [shipmentDetails, setShipmentDetails] = useState({});\r\n  const [spotBidModal, setSpotBidModal] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [shipmentDetailsForm] = Form.useForm();\r\n  const [billingDetailsForm] = Form.useForm();\r\n  const [accountingForm] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { shipmentBranches } = useSelector((state) => state.lookups);\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, \"translation\"]);\r\n\r\n  const approvalNoVisible = useShipmentFieldsVisibility(\"ApprovalNumber\");\r\n  const shipmentNoVisible = useShipmentFieldsVisibility(\"ShipmentNumber\");\r\n  const IsCategoryVisible = useShipmentFieldsVisibility(\"IsCategoryVisible\");\r\n  const IsBillToVisible = useShipmentFieldsVisibility(\"IsBillToVisible\");\r\n  const IsVendorVisible = useShipmentFieldsVisibility(\"IsVendorVisible\");\r\n  const isPartialSaveVisible = useShipmentFieldsVisibility(\"IsPartialSave\");\r\n  const isPartialSave = Form.useWatch(\"isPartialSave\", form);\r\n  const [bolPopup, setBolPopup] = useState(false);\r\n  const [createShipmentData, setCreateShipmentData] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(resetShipmentRateShopList());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (scrollRef?.current) {\r\n      setTimeout(() => {\r\n        if (scrollRef?.current?.scrollTo) scrollRef.current.scrollTo(0, 0);\r\n      }, 500);\r\n    }\r\n  }, [scrollRef]);\r\n\r\n  const handleShipmentCreationDone = () => {\r\n    dispatch(setPageBlocker(false));\r\n    setSpotBidModal(false);\r\n    if (\r\n      find(rateShopList?.data, { isSelected: true })?.cargoType === \"SP\" &&\r\n      shipmentDetails.transportationList.length === 2\r\n    ) {\r\n      setParcelExpressRedirectionModal(true);\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(APP_ROUTES.SHIPMENT);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (isRateShop = false, submittedForm, forms) => {\r\n    let shipmentDetailsLocal = cloneDeep(shipmentDetails);\r\n    shipmentDetailsLocal.masterShipment =\r\n      forms[\"initialForm\"].getFieldValue(\"masterShipment\");\r\n    shipmentDetailsLocal.action = \"1\"; // new shipment\r\n    shipmentDetailsLocal.shipmentKey = 0; // new shipment\r\n    shipmentDetailsLocal.shipmentNo = generateShipmentNo.shipmentNo;\r\n    shipmentDetailsLocal.approvalNumber = generateApprovalNo.approvalNo;\r\n    shipmentDetailsLocal.customerKey = selectedCompany.companyId;\r\n    shipmentDetailsLocal.accessorials = [];\r\n    shipmentDetailsLocal.taxes = [];\r\n\r\n    const shipmentDetailsValidationStatus = await validateFormsByInstance(\r\n      shipmentDetailsForm\r\n    );\r\n\r\n    if (!shipmentDetailsValidationStatus && !isPartialSave) {\r\n      setActiveKey(\"1\");\r\n      return false;\r\n    } else {\r\n      shipmentDetailsLocal[\"additionalDetails\"] = {\r\n        ...shipmentDetailsForm.getFieldsValue(),\r\n        shipmentNotes: shipmentDetailsLocal.shipmentNotes,\r\n        detailNotes: shipmentDetailsLocal.detailNotes,\r\n      };\r\n    }\r\n\r\n    if (\r\n      (!shipmentDetails?.transportationList ||\r\n        shipmentDetails?.transportationList?.length < 2) &&\r\n      !isPartialSave\r\n    ) {\r\n      setActiveKey(\"2\");\r\n      triggerNotification(notificationAPI, {\r\n        type: NOTIFICATION_TYPES.ERROR,\r\n        title: t(\r\n          \"translation:shipmentAdd.notifications.pickupDeliveryLocations\"\r\n        ),\r\n      });\r\n      return false;\r\n    } else {\r\n      if (\r\n        filter(shipmentDetails?.transportationList, { stopType: \"1\" })\r\n          .length === 0 &&\r\n        !isPartialSave\r\n      ) {\r\n        setActiveKey(\"2\");\r\n        triggerNotification(notificationAPI, {\r\n          type: NOTIFICATION_TYPES.ERROR,\r\n          title: t(\"translation:shipmentAdd.notifications.pickupLocation\"),\r\n        });\r\n        return false;\r\n      }\r\n      if (\r\n        filter(shipmentDetails?.transportationList, { stopType: \"2\" })\r\n          .length === 0 &&\r\n        !isPartialSave\r\n      ) {\r\n        setActiveKey(\"2\");\r\n        triggerNotification(notificationAPI, {\r\n          type: NOTIFICATION_TYPES.ERROR,\r\n          title: t(\r\n            \"translation:shipmentAdd.notifications.minimumDeliveryLocation\"\r\n          ),\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      (!shipmentDetails?.productList ||\r\n        shipmentDetails?.productList?.length === 0) &&\r\n      !isPartialSave\r\n    ) {\r\n      setActiveKey(\"3\");\r\n      triggerNotification(notificationAPI, {\r\n        type: NOTIFICATION_TYPES.ERROR,\r\n        title: t(\"translation:shipmentAdd.notifications.productRequired\"),\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (isRateShop === false) {\r\n      const billingDetailsFormValidationStatus = await validateFormsByInstance(\r\n        billingDetailsForm\r\n      );\r\n      if (!billingDetailsFormValidationStatus) {\r\n        setActiveKey(\"7\");\r\n        return false;\r\n      } else {\r\n        if (IsBillToVisible) {\r\n          shipmentDetailsLocal[\"shipmentBillToInfo\"] = {\r\n            ...billingDetailsForm.getFieldsValue(),\r\n          };\r\n        } else {\r\n          shipmentDetailsLocal[\"shipmentBillToInfo\"] = {};\r\n        }\r\n      }\r\n    }\r\n\r\n    const accountingFormValidationStatus = await validateFormsByInstance(\r\n      accountingForm\r\n    );\r\n    if (!accountingFormValidationStatus && !isPartialSave) {\r\n      setActiveKey(\"10\");\r\n      triggerNotification(notificationAPI, {\r\n        type: NOTIFICATION_TYPES.ERROR,\r\n        title: t(\"translation:shipmentAdd.notifications.fixAccountingSection\"),\r\n      });\r\n      return false;\r\n    } else {\r\n      let accessorials = accountingForm.getFieldsValue()?.accessorials;\r\n      shipmentDetailsLocal.accessorials = filter(accessorials, {\r\n        isChecked: true,\r\n      });\r\n      shipmentDetailsLocal.taxes = accountingForm.getFieldsValue()?.taxes;\r\n    }\r\n\r\n    if (isRateShop === false) {\r\n      shipmentDetailsLocal[\"shipmentRateShopInformation\"] =\r\n        convertRateShopResponseToAPI(\r\n          rateShopList?.data,\r\n          shipmentDetails?.data?.customerKey,\r\n          find(rateShopList?.data, { isSelected: true })?.carrierKey\r\n        );\r\n      if (shipmentDetailsLocal.documentList) {\r\n        shipmentDetailsLocal.documentList = filter(\r\n          shipmentDetailsLocal.documentList,\r\n          ({ fileBase64 }) => fileBase64\r\n        );\r\n      }\r\n      let createShipmentData =\r\n        convertShipmentDetailsLocalToAPI(shipmentDetailsLocal);\r\n      dispatch(setAppLoader(true));\r\n\r\n      if (submittedForm === \"spotBidForm\") {\r\n        createShipmentData.handleSuccess = () => {\r\n          setSpotBidModal(true);\r\n        };\r\n      } else {\r\n        createShipmentData.handleSuccess = handleShipmentCreationDone;\r\n      }\r\n      createShipmentData.isPartialSave = Boolean(isPartialSave);\r\n      const rateShopData = forms?.rateShopFilterForm?.getFieldsValue();\r\n      createShipmentData.shipmentInformationRequest.carrierRequirements =\r\n        rateShopData.carrierRequirements;\r\n      createShipmentData.shipmentInformationRequest.requiredCarrierKey =\r\n        rateShopData.requiredCarrierKey;\r\n      createShipmentData.shipmentInformationRequest.trailerKey =\r\n        rateShopData.trailerKey;\r\n      createShipmentData.shipmentInformationRequest.serviceKey =\r\n        rateShopData.serviceKey;\r\n      // createShipmentData.shipmentInformationRequest.cargoType = valueToString(\r\n      //   rateShopData.cargoType\r\n      // );\r\n\r\n      if (\r\n        submittedForm === \"saveButtonForm\" &&\r\n        !isPartialSave &&\r\n        String(\r\n          createShipmentData.shipmentInformationRequest.shipmentTerms\r\n        ).trim() === \"C\" &&\r\n        rateShopData.collectShipmentCarrier\r\n      ) {\r\n        createShipmentData.collectShipmentCarrier =\r\n          rateShopData.collectShipmentCarrier;\r\n        dispatch(setAppLoader(false));\r\n        setCreateShipmentData(createShipmentData);\r\n        setBolPopup(true);\r\n      } else {\r\n        dispatch(createShipmentInProgress(createShipmentData));\r\n      }\r\n    } else {\r\n      return shipmentDetailsLocal;\r\n    }\r\n  };\r\n\r\n  const handleBolPopupResponse = (isCollectBol) => () => {\r\n    dispatch(setAppLoader(true));\r\n    createShipmentData.isCollectBol = isCollectBol;\r\n    if (isCollectBol) {\r\n      createShipmentData.shipmentInformationRequest.requiredCarrierKey =\r\n        createShipmentData.collectShipmentCarrier;\r\n      createShipmentData.shipmentInformationRequest.carrierKey =\r\n        createShipmentData.collectShipmentCarrier;\r\n    }\r\n    delete createShipmentData.collectShipmentCarrier;\r\n    dispatch(createShipmentInProgress(createShipmentData));\r\n  };\r\n\r\n  const validateFormsByInstance = async (instance) => {\r\n    try {\r\n      await instance.validateFields();\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onClickParcelExpressAPIYes = () => {\r\n    setParcelExpressRedirectionModal(false);\r\n    dispatch(setShipmentModal(false));\r\n    navigate(`${APP_ROUTES.SHIPMENT_PARCEL_EXPRESS}/${createShipment?.data}`);\r\n  };\r\n\r\n  const onClickParcelExpressAPINo = () => {\r\n    setParcelExpressRedirectionModal(false);\r\n    navigate(APP_ROUTES.SHIPMENT);\r\n  };\r\n\r\n  const handleFormProviderSubmit = async (\r\n    submittedForm,\r\n    { values: filterData, forms }\r\n  ) => {\r\n    try {\r\n      if (submittedForm === \"rateShopFilterForm\") {\r\n        filterData.cargoType = filterData?.cargoType?.join(\",\");\r\n        const rateShopFiltersData = forms.rateShopFilterForm.getFieldsValue();\r\n        let shipmentDetails = await handleSubmit(\r\n          true,\r\n          \"rateShopFilterForm\",\r\n          forms\r\n        );\r\n        if (shipmentDetails) {\r\n          let accessorials = shipmentDetails?.accessorials\r\n            ? shipmentDetails?.accessorials\r\n            : [];\r\n\r\n          const branchDetails = find(shipmentBranches.data, {\r\n            branchKey: shipmentDetails.additionalDetails.branchKey,\r\n          });\r\n\r\n          const formData = shipmentRateShopLocalToRateEngineAPI(\r\n            accessorials,\r\n            { ...shipmentDetails, ...shipmentDetails.additionalDetails },\r\n            filterData,\r\n            branchDetails?.currencyCode ? branchDetails?.currencyCode : \"**\",\r\n            rateShopFiltersData.isAPIRateShop\r\n          );\r\n\r\n          formData.isAPIRateShop = rateShopFiltersData.isAPIRateShop;\r\n          dispatch(getShipmentRateShopListInProgress(formData));\r\n          setActiveKey(\"4\");\r\n        }\r\n      } else if (\r\n        submittedForm === \"saveButtonForm\" ||\r\n        submittedForm === \"spotBidForm\"\r\n      ) {\r\n        handleSubmit(false, submittedForm, forms);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // generate shipment and approval number\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (selectedCompany && userInfo) {\r\n      if (shipmentNoVisible === true) {\r\n        let payload = {\r\n          CustomerKey: selectedCompany.companyId,\r\n          UserId: userInfo.id,\r\n        };\r\n        dispatch(setAppLoader(true));\r\n        dispatch(generateShipmentNoInProgress(payload));\r\n      }\r\n      if (approvalNoVisible === true) {\r\n        let payload = {\r\n          UserId: userInfo.id,\r\n        };\r\n        dispatch(setAppLoader(true));\r\n        dispatch(generateApprovalNumberInProgress(payload));\r\n      }\r\n    }\r\n    return () => {\r\n      dispatch(\r\n        generateShipmentNoInSuccess({\r\n          shipmentNo: false,\r\n          error: false,\r\n          success: false,\r\n        })\r\n      );\r\n      dispatch(\r\n        generateApprovalNumberInSuccess({\r\n          approvalNo: false,\r\n          error: false,\r\n          success: false,\r\n        })\r\n      );\r\n    };\r\n  }, [selectedCompany, approvalNoVisible, shipmentNoVisible]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (generateShipmentNo?.success || generateShipmentNo?.error) &&\r\n      !generateShipmentNo?.progressing\r\n    ) {\r\n      dispatch(setAppLoader(false));\r\n    }\r\n  }, [generateShipmentNo]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (generateApprovalNo?.success || generateApprovalNo?.error) &&\r\n      !generateApprovalNo?.progressing\r\n    ) {\r\n      dispatch(setAppLoader(false));\r\n    }\r\n  }, [generateApprovalNo]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (generateShipmentNo?.success || generateShipmentNo?.error) &&\r\n      !generateShipmentNo?.progressing\r\n    ) {\r\n      if (generateShipmentNo.shipmentNo && form) {\r\n        form.setFieldsValue({ shipmentNo: generateShipmentNo.shipmentNo });\r\n        setShipmentDetails({\r\n          ...shipmentDetails,\r\n          shipmentNo: generateShipmentNo.shipmentNo,\r\n        });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [generateShipmentNo, form]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (generateApprovalNo?.success || generateApprovalNo?.error) &&\r\n      !generateApprovalNo?.progressing\r\n    ) {\r\n      if (generateApprovalNo.approvalNo && form) {\r\n        form.setFieldsValue({ approvalNumber: generateApprovalNo.approvalNo });\r\n        setShipmentDetails({\r\n          ...shipmentDetails,\r\n          approvalNumber: generateApprovalNo.approvalNo,\r\n        });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [generateApprovalNo, form]);\r\n\r\n  const isMasterShipmentCheckbox = useShipmentFieldsVisibility(\r\n    \"IsMasterShipmentCheckbox\"\r\n  );\r\n\r\n  const masterShipment = Form.useWatch(\"masterShipment\", form);\r\n  const shipmentNo = Form.useWatch(\"shipmentNo\", form);\r\n  const approvalNumber = Form.useWatch(\"approvalNumber\", form);\r\n\r\n  return (\r\n    <>\r\n      <Form.Provider\r\n        className={\"overflow-hidden h-100\"}\r\n        onFormFinish={handleFormProviderSubmit}\r\n      >\r\n        <Row\r\n          className={\"flex-direction-column flex-nowrap overflow-hidden h-100\"}\r\n        >\r\n          <Col className=\"mb-15\">\r\n            <Paper className={\"p-15 border-radius-bottom-none\"}>\r\n              <Row align=\"middle\" justify=\"space-between\">\r\n                <Col>\r\n                  <Form name=\"initialForm\" form={form}>\r\n                    <Row gutter={15}>\r\n                      <Col>\r\n                        {approvalNoVisible === \"PROGRESSING\" ? (\r\n                          <Col sm={24} className=\"text-center\">\r\n                            <ContentSpinner />\r\n                            {/* <SecondaryLabel className=\"text-info f-16 \">\r\n                              {t(\r\n                                \"translation:shipmentAdd.shipmentScreen.checkingApproval\"\r\n                              )}\r\n                            </SecondaryLabel> */}\r\n                          </Col>\r\n                        ) : (\r\n                          <>\r\n                            {shipmentNoVisible && (\r\n                              <Col>\r\n                                <FormLabel>\r\n                                  {t(\"translation:default.fields.shipmentNo\")}{\" \"}\r\n                                </FormLabel>\r\n                                <SecondaryLabel className=\"f-14 fw-600\">\r\n                                  {shipmentNo}\r\n                                </SecondaryLabel>\r\n                              </Col>\r\n                            )}\r\n                            {approvalNoVisible && (\r\n                              <Col>\r\n                                <FormLabel>\r\n                                  {t(\r\n                                    \"translation:shipmentAdd.shipmentScreen.approvalNumber\"\r\n                                  )}{\" \"}\r\n                                </FormLabel>\r\n                                <SecondaryLabel className=\"f-14 fw-600\">\r\n                                  {approvalNumber}\r\n                                </SecondaryLabel>\r\n                              </Col>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        <HiddenFormInput name=\"shipmentNo\" />\r\n                        <HiddenFormInput name=\"approvalNumber\" />\r\n                      </Col>\r\n                      {isMasterShipmentCheckbox === true && (\r\n                        <Col>\r\n                          <FormLabel className=\"mr-5\">\r\n                            {t(\r\n                              \"translation:shipmentAdd.shipmentScreen.masterShipment\"\r\n                            )}\r\n                          </FormLabel>\r\n                          <ToggleSwitch\r\n                            checked={masterShipment}\r\n                            checkedChildren={t(\r\n                              \"translation:default.options.yes\"\r\n                            )}\r\n                            unCheckedChildren={t(\r\n                              \"translation:default.options.no\"\r\n                            )}\r\n                            onClick={() =>\r\n                              form.setFieldValue(\r\n                                \"masterShipment\",\r\n                                !masterShipment\r\n                              )\r\n                            }\r\n                          />\r\n                          <HiddenFormInput name={\"masterShipment\"} />\r\n                        </Col>\r\n                      )}\r\n                    </Row>\r\n                    <HiddenFormInput name={\"isPartialSave\"} />\r\n                  </Form>\r\n                </Col>\r\n                <Col>\r\n                  <Row align={\"middle\"} gutter={15}>\r\n                    {isPartialSaveVisible === \"PROGRESSING\" ? (\r\n                      <Col>\r\n                        <ContentSpinner />\r\n                      </Col>\r\n                    ) : (\r\n                      <>\r\n                        {isPartialSaveVisible ? (\r\n                          <Col>\r\n                            <FormLabel className=\"mr-5\">\r\n                              {`${t(\"translation:shipment.saveAsPartial\")}:`}\r\n                            </FormLabel>\r\n                            <ToggleSwitch\r\n                              checked={isPartialSave}\r\n                              checkedChildren={t(\r\n                                \"translation:default.options.yes\"\r\n                              )}\r\n                              unCheckedChildren={t(\r\n                                \"translation:default.options.no\"\r\n                              )}\r\n                              onClick={() =>\r\n                                form.setFieldValue(\r\n                                  \"isPartialSave\",\r\n                                  !isPartialSave\r\n                                )\r\n                              }\r\n                            />\r\n                          </Col>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </>\r\n                    )}\r\n\r\n                    <Col>\r\n                      <Form name=\"saveButtonForm\">\r\n                        <SaveCancelButtons\r\n                          onCancel={() => navigate(-1)}\r\n                          idSuffix={\"shipment\"}\r\n                        />\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Paper>\r\n          </Col>\r\n          <Col className=\"flex-1 custom-scroll-bar\" ref={scrollRef}>\r\n            <AddShipmentTabs\r\n              form={form}\r\n              setShipmentDetails={setShipmentDetails}\r\n              shipmentDetailsForm={shipmentDetailsForm}\r\n              billingDetailsForm={billingDetailsForm}\r\n              activeKey={activeKey}\r\n              setActiveKey={setActiveKey}\r\n              accountingForm={accountingForm}\r\n              isPartialSave={Boolean(isPartialSave)}\r\n              shipmentDetails={shipmentDetails}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Form.Provider>\r\n      <CommonModal\r\n        title={\r\n          <span className=\"ml-10\">\r\n            {t(\"translation:default.fields.spotBid\")}\r\n          </span>\r\n        }\r\n        open={spotBidModal}\r\n        className={\"w-80\"}\r\n        contentClassName=\"p-30\"\r\n        customFooter={<></>}\r\n        onClose={() => setSpotBidModal(false)}\r\n      >\r\n        <SpotBidDetails\r\n          handleSpotBidSuccess={handleShipmentCreationDone}\r\n          submitSpotBidButtonContainerClassName={\"pb-15\"}\r\n        />\r\n      </CommonModal>\r\n      <ConfirmationModal\r\n        onOk={handleBolPopupResponse(1)}\r\n        onCancel={handleBolPopupResponse(0)}\r\n        onClose={() => setBolPopup(false)}\r\n        open={bolPopup}\r\n        description={\r\n          \"You have been selected Collect shipment terms for a Carrier without any cost! Would you like to proceed with closing this shipment?\"\r\n        }\r\n        title={t(\"translation:default.fields.alert\")}\r\n        okText={\"Yes\"}\r\n        cancelText={\"No\"}\r\n      />\r\n      <CommonModal\r\n        className=\"w-auto h-auto\"\r\n        open={parcelExpressRedirectionModal}\r\n        title={\"Parcel API Rate\"}\r\n        okText={\"Yes\"}\r\n        cancelText={\"No\"}\r\n        onCancel={onClickParcelExpressAPINo}\r\n        onClose={onClickParcelExpressAPINo}\r\n        onOk={onClickParcelExpressAPIYes}\r\n        contentClassName=\"py-10 px-20\"\r\n      >\r\n        <SecondaryLabel className=\"f-18 \">\r\n          You have selected a parcel transportation provider. <br />\r\n          Do you want to rate this shipment against the provider's API?\r\n        </SecondaryLabel>\r\n      </CommonModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddShipmentScreen;\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport WithFilter from '../../screens/common/WithFilter';\r\nimport AddShipmentScreen from '../../screens/Shipment/AddShipmentScreen';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { routeFileSelector } from '../../../utilz/i18n';\r\n\r\nconst AddShipmentPage = () => {\r\n  const { pathname: activeTab} = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, 'translation']);\r\n\r\n  const {\r\n    auth: {},\r\n    shipment: {},\r\n  } = useSelector((state) => state);\r\n\r\n  return <WithFilter contentElement={<AddShipmentScreen />} />;\r\n};\r\n\r\nexport default AddShipmentPage;\r\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgUser","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","form","isPartialSave","shipmentStatus","Form","useWatch","selectedCompany","useSelector","state","auth","PONumberIsVisible","useShipmentFieldsVisibility","SONumberIsVisible","paidByVisible","pathname","activeTab","useLocation","namespace","useMemo","routeFileSelector","t","useTranslation","_jsxs","Row","gutter","children","_jsx","Col","sm","md","lg","className","FormLabel","PrimaryLabel","style","display","HiddenFormInput","label","name","disabled","TransportationProviderSelector","margin","editMode","FormInput","maxLength","ContentSpinner","SecondaryLabel","rules","required","message","PaymentTypesSelector","placeholder","ShipmentBranchSelector","customerId","companyId","disableValidation","ShipmentTypeSelector","ShipmentTermsSelector","concat","inputType","FreeOnBoardSelector","IncotermSelector","SvgCategories","stroke","strokeWidth","defaultStops","isNew","_","gridOperation","stopType","displaySequence","setShipmentDetails","shipmentDetailsForm","dispatch","useDispatch","getMilageByStops","branchAddress","shipment","transportationList","setTransportationList","useState","addressBookModal","setAddressBookModal","addressBookModalIndex","setAddressBookModalIndex","addressBookInstantAddModal","setAddressBookInstantAddModal","handleSubmit","async","data","index","searchId","setAppLoader","addressBookData","checkAddressBookIsExistEffect","customerKey","transportationListLocal","transportationType","alignStopsByStopNo","generateStopsSequence","error","console","log","handleRemove","splice","calculateSequenceAndDisplaySequence","setShipmentEditStatus","handleAddressBookModalClose","handleNewLocation","useEffect","getMilageByStopsInSuccess","totalMilageInMiles","totalMilageInKm","branchKey","shipmentType","isBranchDetailsChange","getShipmentBranchAddressInProgress","handleSuccess","generateStopByBranchAddress","addressDetailsData","isDefault","undefined","addressDetails","includes","stopData","address1","branchAddr1","branchAddr2","city","branchCity","stateCode","branchState","countryCode","countryName","zipCode","branchZip","defaultStopsLocal","cloneDeep","is12HoursFormat","useIs12HoursTimeFormat","justify","align","SvgConverter","Icon","CartIcon","normal","NumericFormat","value","String","getShipmentTypeCounts","displayType","isNumericString","DeliveryBoxIcon","DistanceIcon","thousandSeparator","thousandsGroupStyle","decimalScale","Button","onClick","handleMilage","payload","Stops","parseStopsForMilageByStops","getMilageByStopsInProgress","loading","progressing","handleNewStop","push","AddressBookModal","onSelectAddressBook","_data$daysOfWeek","_data$hoursOfOperatio","daysOfWeek","split","hoursOfOperation","addr1","fromOperationDay","toOperationDay","fromOperationHours","convertTimetoMoment","toOperationHours","zip","extension","phoneExt","isAddressBook","map","row","idx","ShipmentTransportForm","transportationDetails","shadowVisible","disableEditOnSubmit","isLastItem","hideDelivery","totalStops","ShipmentAddressInstantAddPopup","open","setOpen","locationData","_instanceAddProductDa","shipmentDetails","classCalculatorForm","useForm","tmsSettings","settings","generateShipmentNo","productList","setProductList","selectedPackageId","setSelectedPackageId","addProductModal","setAddProductModal","addProductModalIndex","setAddProductModalIndex","instanceAddProductData","setInstanceAddProductData","notificationAPI","common","originDestinationDetails","_shipmentDetails$tran","origin","destination","filter","_ref2","orderBy","_ref3","defaultUoms","_originDestinationDet","_originDestinationDet2","_originDestinationDet3","_originDestinationDet4","weightUom","dimUom","_productList$","success","_tmsSettings$data","_tmsSettings$data$shi","_tmsSettings$data2","_tmsSettings$data2$sh","_tmsSettings$data3","_tmsSettings$data3$sh","_tmsSettings$data4","_tmsSettings$data4$sh","_tmsSettings$data5","_tmsSettings$data5$sh","_tmsSettings$data6","_tmsSettings$data6$sh","_productList$2","defaultData","productCode","shipmentSettings","defaultProductCode","productDescription","defaultProdDesc","defaultLen","defaultWidth","defaultHeight","class","defaultFreightClass","palletLoadType","isProductCodeValidate","trimObjectValues","_data","_data2","_productDetailsAsync","productDetailsAsync","getProductDetailsByCodeEffect","ProductCode","handleFinalSubmit","productListLocal","handleAddProductModalClose","handleNewProductModal","productFieldsVisibility","useShipmentRoutingSettings","Provider","onFormFinish","handleFormProviderSubmit","submittedForm","_ref4","forms","productListL","formData","getFieldsValue","originIndex","findIndex","productDetails","validateProductForCalculateClass","nmfcClassValue","nmfcNumber","ShipmentKey","NMFCNumber","Weight","weight","Length","Width","Height","dimUOM","WeightUOM","classValue","shipmentNmfcCalculateEffect","triggerNotification","type","NOTIFICATION_TYPES","SUCCESS","setWarningModal","description","freightClass","calCulateFreightClass","billQty","billQtyUom","cube","_error$response","_error$response2","response","handleFreightClassCalculator","handleNewProduct","_tmsSettings$data7","_tmsSettings$data7$sh","_tmsSettings$data8","_tmsSettings$data8$sh","_tmsSettings$data9","_tmsSettings$data9$sh","_tmsSettings$data10","_tmsSettings$data10$s","_tmsSettings$data11","_tmsSettings$data11$s","_tmsSettings$data12","_tmsSettings$data12$s","handleCopyLastProduct","alert","Popconfirm","placement","onConfirm","submit","okText","cancelText","overlayClassName","AddProductModal","productDesc","ProductDetailsCardPreview","remove","showFreightClassCalculator","JSON","stringify","Paper","FooterContentCard","reverse","defaultValue","count","sumBy","_ref5","Number","contentClass","labelClass","VerticalLine","sortedUniq","_ref6","weightUOMDesc","join","_ref7","_ref8","billQtyUOMDesc","_ref9","_ref10","_ref11","_ref12","dimUOMDesc","_ref13","ProductsPackageIdModal","packageId","shipmentNumber","shipmentNo","ShipmentProductInstantAddPopup","Boolean","productData","handlePopupResponse","enableAutoFocus","notesValueForReset","setNotesValueForReset","shipmentNotes","detailNotes","resetNote","setFieldsValue","isPageBlockerActive","selectIsPageBlockerActive","onFinish","onFieldsChange","setPageBlocker","NotesCard","editModes","inputName","hideEditButtons","onBlur","vendorList","setVendorList","uniqueId","handleDelete","vendorListLocal","shipmentVendorList","handleNewVendor","VendorDetailsCard","vendorDetails","BillingDetailsForm","categoryList","setCategoryList","categoryListLocal","shipmentCategoryInformation","CategoryDetailsCard","categoryDetails","accountingForm","shipmentCustomerAccessorials","getShipmentCustomerAccessorialsInProgress","shipmentKey","size","AccessorialsDetails","accessorials","customHeight","TaxDetails","_rateShopList$data2","_rateShopList$data3","shipmentTerms","spotBidForm","rateShopList","handleRateSelect","rateIndex","rateShopListLocal","isSelected","getShipmentRateShopListInSuccess","forceUpdate","_Fragment","RateShopFilters","cardLG","cardClassName","formClassName","isAddShipment","showSpotBidButton","Divider","_rateShopList$data","exportRateShopDetails","maxHeight","heigh","_rateShopList$data4","RateShopDetailsCard","rateShopDetails","handleRateShopSelection","isRateShop","isLast","EmptyRecords","descriptionTwo","documentList","setDocumentList","renderKey","uploadedDocumentTypes","fileType","val","allowedExtentions","useDocsExtentions","MODULES_ID","SHIPMENT","handleSave","fileInput","documentListLocal","reader","FileReader","readAsDataURL","onload","fileBase64","result","handleNewFile","FilesDetailsCard","fileDetails","handleSaveForAddNewScreen","billingDetailsForm","activeKey","setActiveKey","havingAccessForMenu","GenerateTitle","defaultBranchKey","defaultShipmentType","defaultShipmentTerms","incoCode","defaultIncoTerm","IsCategoryVisible","IsBillToVisible","IsVendorVisible","CollapsiblePanel","forceRender","handleTabClick","keys","tabs","tabKey","content","initialValues","status","ShipmentDetailsTab","header","ShipmentIcon","TransportationDetails","TruckIcon","ProductDetailsTab","DocsListIcon","RateShopDetails","NotesDetails","NotesIcon","ShipmentDocumentsDetails","FilesIcon","VendorDetails","UserIcon","BillingDetails","DocsCurrencyIcon","CategoryDetails","CategoriesIcon","AccountingDetails","AddShipmentScreen","scrollRef","useRef","generateApprovalNo","createShipment","parcelExpressRedirectionModal","setParcelExpressRedirectionModal","user","spotBidModal","setSpotBidModal","navigate","useNavigate","shipmentBranches","lookups","approvalNoVisible","shipmentNoVisible","isPartialSaveVisible","bolPopup","setBolPopup","createShipmentData","setCreateShipmentData","resetShipmentRateShopList","current","setTimeout","_scrollRef$current","scrollTo","handleShipmentCreationDone","_find","find","cargoType","APP_ROUTES","_shipmentDetails$prod","shipmentDetailsLocal","masterShipment","getFieldValue","action","approvalNumber","approvalNo","taxes","validateFormsByInstance","ERROR","_accountingForm$getFi","_accountingForm$getFi2","isChecked","_shipmentDetails$data","_find2","_forms$rateShopFilter","convertRateShopResponseToAPI","carrierKey","convertShipmentDetailsLocalToAPI","rateShopData","rateShopFilterForm","shipmentInformationRequest","carrierRequirements","requiredCarrierKey","trailerKey","serviceKey","trim","collectShipmentCarrier","createShipmentInProgress","handleBolPopupResponse","isCollectBol","instance","validateFields","onClickParcelExpressAPINo","userInfo","parse","localStorage","getItem","CustomerKey","UserId","generateShipmentNoInProgress","generateApprovalNumberInProgress","generateShipmentNoInSuccess","generateApprovalNumberInSuccess","isMasterShipmentCheckbox","values","filterData","_filterData$cargoType","rateShopFiltersData","branchDetails","additionalDetails","shipmentRateShopLocalToRateEngineAPI","currencyCode","isAPIRateShop","getShipmentRateShopListInProgress","ToggleSwitch","checked","checkedChildren","unCheckedChildren","setFieldValue","SaveCancelButtons","onCancel","idSuffix","AddShipmentTabs","CommonModal","contentClassName","customFooter","onClose","SpotBidDetails","handleSpotBidSuccess","submitSpotBidButtonContainerClassName","ConfirmationModal","onOk","onClickParcelExpressAPIYes","setShipmentModal","SHIPMENT_PARCEL_EXPRESS","AddShipmentPage","WithFilter","contentElement"],"sourceRoot":""}