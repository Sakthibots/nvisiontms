{"version":3,"file":"static/js/1167.e8f96cff.chunk.js","mappings":"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","sources":["assets/icons/location-plus.svg","redux/hooks/useShipmentAppointmentList.js","views/components/Selectors/AppointmentSelector.jsx","views/components/Selectors/CountryCallingCodeSelector.jsx","views/screens/common/AddLocation/AddLocationForm.jsx","views/screens/common/AddLocation/AddressBookCard.jsx","views/screens/common/AddLocation/AddressBookModal.jsx"],"sourcesContent":["var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLocationPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_6418_110669)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.70039 11.6C9.80039 11.6 11.6004 9.90002 11.6004 7.70002C11.6004 5.50002 9.90039 3.90002 7.70039 3.90002C5.50039 3.90002 3.90039 5.60002 3.90039 7.70002C3.90039 9.80002 5.60039 11.6 7.70039 11.6ZM7.70039 5.20002C9.10039 5.20002 10.3004 6.40002 10.3004 7.80002C10.3004 9.20002 9.10039 10.4 7.70039 10.4C6.30039 10.4 5.10039 9.20002 5.10039 7.80002C5.20039 6.30002 6.30039 5.20002 7.70039 5.20002Z\",\n    fill: \"#006697\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 24V18H24V16H18V10H16V16H10V18H16V24H18Z\",\n    fill: \"#006697\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 20V19.8C7.9 19.9 7.8 20 7.7 20.2C6.2 18.1 4.3 15.6 3 13.1C1.8 11 1.3 9.3 1.3 7.7C1.3 4.1 4.2 1.3 7.7 1.3C11.3 1.3 14.1 4.2 14.1 7.7C14.1 7.8 14.1 7.9 14.1 8H15.4C15.4 7.9 15.4 7.8 15.4 7.7C15.5 3.5 12 0 7.7 0C3.5 0 0 3.5 0 7.7C0 9.4 0.6 11.4 1.9 13.7C3.5 16.6 5.7 19.4 7.2 21.7C7.3 21.9 7.5 22 7.7 22C7.9 22 8.1 21.9 8.2 21.7C8.6 21.2 9 20.6 9.5 20H8Z\",\n    fill: \"#006697\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_6418_110669\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLocationPlus);\nexport default __webpack_public_path__ + \"static/media/location-plus.0e39107e10075ef5dc4606378c9f6803.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setShipmentAppointmentTypes } from \"../common/CommonActions\";\nimport { getShipmentAppointmentTypes } from \"../shipment/ShipmentEffects\";\n\nconst useShipmentAppointmentList = () => {\n  const [list, setList] = useState(undefined);\n  const { shipmentAppointmentTypes } = useSelector((state) => state.common);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (shipmentAppointmentTypes.success) {\n      setList(shipmentAppointmentTypes.data);\n    } else {\n      getList();\n    }\n  }, [shipmentAppointmentTypes]);\n\n  const getList = async () => {\n    try {\n      dispatch(setShipmentAppointmentTypes({ success: true, data: [] }));\n      const { data } = await getShipmentAppointmentTypes();\n      setList(data);\n      dispatch(setShipmentAppointmentTypes({ success: true, data }));\n    } catch (error) {\n      console.log(error);\n      setList([]);\n    }\n  };\n\n  return list;\n};\n\nexport default useShipmentAppointmentList;\n","import React, { useEffect, useState } from \"react\";\nimport { getShipmentAppointmentTypes } from \"../../../redux/shipment/ShipmentEffects\";\nimport FormSelectBox from \"../Inputs/FormSelectBox\";\nimport i18n from \"i18next\";\nimport useShipmentAppointmentList from \"../../../redux/hooks/useShipmentAppointmentList\";\n\nconst AppointmentSelector = ({\n  placeholder = i18n.t(\n    \"translation:default.fields.appointmentType.placeholder\"\n  ),\n  label = i18n.t(\"translation:default.fields.appointmentType.label\"),\n  rules = [],\n  name,\n  editMode,\n  margin = \"mb-0\",\n  onChange = false,\n}) => {\n  const [options, setOptions] = useState([]);\n  const countryList = useShipmentAppointmentList();\n\n  useEffect(() => {\n    if (countryList?.length >= 0) {\n      let options = countryList.map((row) => ({\n        label: row.text,\n        value: row.value,\n      }));\n      setOptions(options);\n    } else {\n      setOptions([]);\n    }\n  }, [countryList]);\n\n  return (\n    <FormSelectBox\n      loading={countryList === undefined}\n      options={options}\n      placeholder={placeholder}\n      label={label}\n      margin={margin}\n      rules={rules}\n      name={name}\n      editMode={editMode}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default AppointmentSelector;\n","import React, { useEffect, useState } from 'react';\r\nimport { getAllCountriesEffect } from '../../../redux/common/CommonEffects';\r\nimport FormAutoComplete from '../Inputs/FormAutoComplete';\r\nimport i18n from 'i18next';\r\n\r\nconst CountryCallingCodeSelector = ({\r\n  placeholder = i18n.t('translation:default.fields.country.placeholder'),\r\n  label = i18n.t('translation:default.fields.country.label'),\r\n  rules = [],\r\n  name,\r\n  editMode,\r\n  margin,\r\n  onChange,\r\n  value = '',\r\n  popupClassName = '',\r\n}) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getStatusList();\r\n  }, []);\r\n\r\n  const getStatusList = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await getAllCountriesEffect();\r\n      let options = data.map((row) => ({\r\n        ...row,\r\n        label: `${row.countryName}( +${row.countryCallingCode} )`,\r\n        value: `+${row.countryCallingCode}`,\r\n      }));\r\n      setOptions(options);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setOptions([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormAutoComplete\r\n      loading={loading}\r\n      options={options}\r\n      placeholder={placeholder}\r\n      label={label}\r\n      margin={margin}\r\n      rules={rules}\r\n      name={name}\r\n      editMode={editMode}\r\n      onChange={onChange}\r\n      value={value}\r\n      popupClassName={popupClassName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CountryCallingCodeSelector;\r\n","import { Col, Form, Row } from \"antd\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WEEKS_DAYS } from \"../../../../contants/common\";\r\nimport { saveShipmentAddressBookInProgress } from \"../../../../redux/shipment/ShipmentActions\";\r\nimport { formateWithMoment } from \"../../../../utilz/dates\";\r\nimport { valueToString } from \"../../../../utilz/utilz\";\r\nimport Button from \"../../../components/Buttons/Button\";\r\nimport FormInput from \"../../../components/Inputs/FormInput\";\r\nimport FormSelectBox from \"../../../components/Inputs/FormSelectBox\";\r\nimport FormTextArea from \"../../../components/Inputs/FormTextArea\";\r\nimport FormTimePicker from \"../../../components/Inputs/FormTimePicker\";\r\nimport HiddenFormInput from \"../../../components/Inputs/HiddenFormInput\";\r\nimport FormLabel from \"../../../components/Labels/FormLabel\";\r\nimport AppointmentSelector from \"../../../components/Selectors/AppointmentSelector\";\r\nimport CountryCallingCodeSelector from \"../../../components/Selectors/CountryCallingCodeSelector\";\r\nimport CountrySelector from \"../../../components/Selectors/CountrySelector\";\r\nimport PostalCodeInput from \"../../../components/Selectors/PostalCodeInput\";\r\nimport StateSelector from \"../../../components/Selectors/StateSelector\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { routeFileSelector } from \"../../../../utilz/i18n\";\r\n\r\nconst AddLocationForm = ({\r\n  formInstance = false,\r\n  handleSuccess,\r\n  handleOnClickSearch = () => {},\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { selectedCompany, user } = useSelector((state) => state.auth);\r\n  let [form] = Form.useForm();\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, \"translation\"]);\r\n\r\n  if (formInstance) {\r\n    form = formInstance;\r\n  }\r\n\r\n  const handleZipDetails = (data) => {\r\n    form.setFieldValue(\"city\", data?.city);\r\n    form.setFieldValue(\"state\", data?.state);\r\n  };\r\n\r\n  const handleSubmit = ({\r\n    fromOperationDay,\r\n    toOperationDay,\r\n    fromOperationHours,\r\n    toOperationHours,\r\n    countryCallingCode,\r\n    phone,\r\n    ...data\r\n  }) => {\r\n    let payload = {\r\n      ...data,\r\n      customerKey: selectedCompany?.companyId,\r\n      createdBy: user?.data?.id,\r\n      daysOfWeek: `${valueToString(fromOperationDay)}-${valueToString(\r\n        toOperationDay\r\n      )}`,\r\n      hoursOfOperation: `${formateWithMoment(\r\n        fromOperationHours,\r\n        \"hh:mm A\"\r\n      )}-${formateWithMoment(toOperationHours, \"hh:mm A\")}`,\r\n      phone: `${valueToString(countryCallingCode)}-${valueToString(phone)}`,\r\n      callback: handleCallback,\r\n    };\r\n    dispatch(saveShipmentAddressBookInProgress(payload));\r\n  };\r\n\r\n  const handleCallback = (data) => {\r\n    form.resetFields();\r\n    if (handleSuccess) {\r\n      handleSuccess(data);\r\n    }\r\n  };\r\n\r\n  const handleCountryChange = (data) => {\r\n    if (data?.countryCallingCode)\r\n      form.setFieldValue(\"countryCallingCode\", `+${data?.countryCallingCode}`);\r\n    form.setFieldValue(\"zip\", undefined);\r\n    form.setFieldValue(\"state\", undefined);\r\n    form.setFieldValue(\"city\", undefined);\r\n  };\r\n\r\n  const countryCode = Form.useWatch(\"countryCode\", form);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onFinish={handleSubmit}\r\n      initialValues={{ locationId: 0, addr2: \" \" }}\r\n    >\r\n      <Row gutter={30}>\r\n        <Col className=\"w-20\">\r\n          <FormInput\r\n            name=\"name\"\r\n            label={t(\"translation:default.fields.companyName.label\")}\r\n            editMode={true}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"translation:default.fields.companyName.message\"),\r\n              },\r\n            ]}\r\n            margin={\"mb-20\"}\r\n          />\r\n          <FormTextArea\r\n            name=\"addr1\"\r\n            label={t(\"translation:default.fields.companyAddress.label\")}\r\n            editMode={true}\r\n            rows={4}\r\n            margin={\"mb-0\"}\r\n          />\r\n        </Col>\r\n        <Col className=\"w-20\">\r\n          <FormInput\r\n            name=\"searchId\"\r\n            label={t(\"translation:default.fields.location.label\")}\r\n            editMode={true}\r\n            margin={\"mb-15\"}\r\n            // rules={[\r\n            //   { required: true, message: t('translation:default.fields.location.message') },\r\n            //   { type: 'string', message: '' },\r\n            //   {\r\n            //     max: 13,\r\n            //     message: t('translation:default.fields.location.messageMax'),\r\n            //   },\r\n            // ]}\r\n          />\r\n          <CountrySelector\r\n            name=\"countryCode\"\r\n            label={t(\"translation:default.fields.country.label\")}\r\n            editMode={true}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"translation:default.fields.country.message\"),\r\n              },\r\n            ]}\r\n            onChange={handleCountryChange}\r\n            margin={\"mb-15\"}\r\n          />\r\n          <PostalCodeInput\r\n            name={\"zip\"}\r\n            editMode={true}\r\n            countryCode={countryCode}\r\n            handleZipDetails={handleZipDetails}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"translation:default.fields.postalCode.message\"),\r\n              },\r\n            ]}\r\n            margin={\"mb-0\"}\r\n          />\r\n        </Col>\r\n        <Col className=\"w-20\">\r\n          <StateSelector\r\n            name={\"state\"}\r\n            countryCode={countryCode}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"translation:default.fields.state.message\"),\r\n              },\r\n            ]}\r\n            margin={\"mb-12\"}\r\n          />\r\n          <FormInput\r\n            name=\"city\"\r\n            label={t(\"translation:default.fields.city.label\")}\r\n            editMode={true}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"translation:default.fields.city.message\"),\r\n              },\r\n            ]}\r\n            margin={\"mb-15\"}\r\n          />\r\n          <AppointmentSelector\r\n            label={t(\"translation:default.fields.appointmentType.label\")}\r\n            name={\"appointmentType\"}\r\n            margin={\"mb-0\"}\r\n          />\r\n        </Col>\r\n        <Col className=\"w-20\">\r\n          <FormInput\r\n            name=\"contactName\"\r\n            label={t(\"translation:default.fields.contactName.label\")}\r\n            editMode={true}\r\n            margin={\"mb-15\"}\r\n          />\r\n          <div className=\" mb-15\">\r\n            <FormLabel>\r\n              {t(\"translation:default.fields.contactNumber\")}\r\n            </FormLabel>\r\n            <Row gutter={10} className=\"mt-2\">\r\n              <Col sm={6}>\r\n                <CountryCallingCodeSelector\r\n                  margin=\"mb-0\"\r\n                  editMode={true}\r\n                  name={\"countryCallingCode\"}\r\n                  placeholder={t(\"translation:default.fields.code\")}\r\n                  label={false}\r\n                />\r\n              </Col>\r\n              <Col sm={13}>\r\n                <FormInput\r\n                  margin=\"mb-0\"\r\n                  editMode={true}\r\n                  name={\"phone\"}\r\n                  placeholder={t(\"translation:default.fields.number\")}\r\n                  label={false}\r\n                  inputType={\"number\"}\r\n                />\r\n              </Col>\r\n              <Col sm={5}>\r\n                <FormInput\r\n                  placeholder={t(\"translation:parcelExpress.locationForm.ext\")}\r\n                  margin=\"mb-0\"\r\n                  editMode={true}\r\n                  name={\"phoneExt\"}\r\n                  label={false}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <FormInput\r\n            name=\"contactEmail\"\r\n            label={t(\"translation:default.fields.contactEmailAddress.label\")}\r\n            editMode={true}\r\n            margin={\"mb-0\"}\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: t(\"translation:default.notification.email\"),\r\n              },\r\n            ]}\r\n          />\r\n        </Col>\r\n        <Col className=\"w-20\">\r\n          <Row gutter={10} className={\"w-100 mb-2 mb-15\"}>\r\n            <Col sm={24} className={\"mb-1\"}>\r\n              <FormLabel className=\"form-input-label\">\r\n                {t(\"translation:default.fields.daysOfWeek\")}\r\n              </FormLabel>\r\n            </Col>\r\n            <Col sm={12}>\r\n              <FormSelectBox\r\n                options={WEEKS_DAYS}\r\n                editMode={true}\r\n                singleLineMode={true}\r\n                label={t(\"translation:default.fields.from.label\")}\r\n                colon={true}\r\n                name={\"fromOperationDay\"}\r\n                margin={\"mb-0\"}\r\n                placeholder={t(\"translation:default.fields.from.placeholder\")}\r\n              />\r\n            </Col>\r\n            <Col sm={12}>\r\n              <FormSelectBox\r\n                options={WEEKS_DAYS}\r\n                editMode={true}\r\n                singleLineMode={true}\r\n                label={t(\"translation:default.fields.to.label\")}\r\n                colon={true}\r\n                name={\"toOperationDay\"}\r\n                placeholder={t(\"translation:default.fields.to.placeholder\")}\r\n                margin={\"mb-0\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={10} className={\"w-100 mb-15\"}>\r\n            <Col sm={24} className={\"mb-2\"}>\r\n              <FormLabel className=\"form-input-label\">\r\n                {t(\"translation:default.fields.hoursOfOperations\")}\r\n              </FormLabel>\r\n            </Col>\r\n            <Col sm={12}>\r\n              <FormTimePicker\r\n                label={t(\"translation:default.fields.from.label\")}\r\n                colon={true}\r\n                editMode={true}\r\n                singleLineMode={true}\r\n                name={\"fromOperationHours\"}\r\n                margin={\"mb-15\"}\r\n              />\r\n            </Col>\r\n            <Col sm={12}>\r\n              <FormTimePicker\r\n                label={t(\"translation:default.fields.to.label\")}\r\n                colon={true}\r\n                editMode={true}\r\n                singleLineMode={true}\r\n                name={\"toOperationHours\"}\r\n                margin={\"mb-15\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <div className=\"pr-10\">\r\n            <Row className=\"flex-nowrap\" justify={\"space-between\"}>\r\n              <Col>\r\n                <Button buttonType=\"submit\">\r\n                  {t(\"translation:default.buttons.add\")}\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={handleOnClickSearch}>\r\n                  {t(\"translation:default.buttons.search\")}\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button type=\"default\" onClick={() => form.resetFields()}>\r\n                  {t(\"translation:default.fields.reset\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <HiddenFormInput name=\"locationId\" />\r\n      <HiddenFormInput name=\"addr2\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddLocationForm;\r\n","import { Col, Form, Row } from \"antd\";\nimport React, {useMemo} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { WEEKS_DAYS } from \"../../../../contants/common\";\nimport { saveShipmentAddressBookInProgress } from \"../../../../redux/shipment/ShipmentActions\";\nimport { formateWithMoment } from \"../../../../utilz/dates\";\nimport { valueToString } from \"../../../../utilz/utilz\";\nimport Button from \"../../../components/Buttons/Button\";\nimport FilterCard from \"../../../components/Cards/FilterCard\";\nimport FormInput from \"../../../components/Inputs/FormInput\";\nimport FormSelectBox from \"../../../components/Inputs/FormSelectBox\";\nimport FormTextArea from \"../../../components/Inputs/FormTextArea\";\nimport FormTimePicker from \"../../../components/Inputs/FormTimePicker\";\nimport HiddenFormInput from \"../../../components/Inputs/HiddenFormInput\";\nimport FormLabel from \"../../../components/Labels/FormLabel\";\nimport AppointmentSelector from \"../../../components/Selectors/AppointmentSelector\";\nimport CountryCallingCodeSelector from \"../../../components/Selectors/CountryCallingCodeSelector\";\nimport CountrySelector from \"../../../components/Selectors/CountrySelector\";\nimport PostalCodeInput from \"../../../components/Selectors/PostalCodeInput\";\nimport StateSelector from \"../../../components/Selectors/StateSelector\";\nimport SaveCancelButtons from \"../../Shipment/components/SaveCancelButtons\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport { routeFileSelector } from '../../../../utilz/i18n';\n\nconst AddressBookCard = ({\n  defaultDetails = {},\n  onSelectAddressBook = () => {},\n  customerKey,\n  currentUserId,\n  index,\n  handleDelete,\n}) => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  let editMode = Form.useWatch(\"editMode\", form);\n  editMode = Boolean(editMode);\n  const { pathname: activeTab } = useLocation();\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\n  const { t } = useTranslation([namespace, 'translation']);\n\n  const setEditMode = (val) => {\n    form.setFieldValue(\"editMode\", val);\n  };\n\n  const handleCountryChange = (data) => {\n    form.setFieldValue(\"countryCallingCode\", `+${data?.countryCallingCode}`);\n  };\n  const countryCode = Form.useWatch(\"countryCode\", form);\n  const handleZipDetails = (data) => {\n    form.setFieldValue(\"city\", data?.city);\n    form.setFieldValue(\"state\", data?.state);\n  };\n\n  const handleSubmit = ({\n    fromOperationDay,\n    toOperationDay,\n    fromOperationHours,\n    toOperationHours,\n    countryCallingCode,\n    phone,\n    ...data\n  }) => {\n    let payload = {\n      ...data,\n      customerKey: customerKey,\n      createdBy: currentUserId,\n      daysOfWeek: `${valueToString(fromOperationDay)}-${valueToString(\n        toOperationDay\n      )}`,\n      hoursOfOperation: `${formateWithMoment(\n        fromOperationHours,\n        \"hh:mm A\"\n      )}-${formateWithMoment(toOperationHours, \"hh:mm A\")}`,\n      phone: `${valueToString(countryCallingCode)}-${valueToString(phone)}`,\n      callback: () => setEditMode(false),\n    };\n\n    dispatch(saveShipmentAddressBookInProgress(payload));\n  };\n\n  const handleCancel = () => {\n    form.setFieldsValue({ ...defaultDetails, editMode: false });\n  };\n\n  return (\n    <Form\n      className=\"mb-15\"\n      form={form}\n      initialValues={{ ...defaultDetails }}\n      onFinish={handleSubmit}\n    >\n      <FilterCard\n        shadow={false}\n        showBorder={true}\n        customHeader={\n          <div className=\"w-100\">\n            <Row className=\"flex-nowrap\" align={\"middle\"} gutter={30}>\n              <Col sm={6}>\n                <FormInput\n                  name=\"name\"\n                  singleLineMode={true}\n                  colon={true}\n                  editMode={editMode}\n                  label={t('translation:default.fields.companyName.label')}\n                  margin={\"m-0\"}\n                />\n              </Col>\n              <Col sm={6}>\n                <FormInput\n                  name=\"searchId\"\n                  singleLineMode={true}\n                  colon={true}\n                  editMode={editMode}\n                  label={t('translation:default.fields.location.label')}\n                  margin={\"m-0\"}\n                  rules={[\n                    { required: true, message: t('translation:default.fields.location.message') },\n                    { type: \"string\", message: \"\" },\n                    {\n                      max: 13,\n                      message: t('translation:default.fields.location.messageMax'),\n                    },\n                  ]}\n                  maxLength={13}\n                />\n              </Col>\n              <Col sm={6}></Col>\n              <Col sm={6}>\n                <Row align={\"middle\"} justify={\"end\"}>\n                  <Col>\n                    <Row gutter={30} align={\"middle\"}>\n                      <Col>\n                        <Button\n                          disabled={editMode}\n                          variant={\"success\"}\n                          onClick={() => onSelectAddressBook(defaultDetails)}\n                        >\n                         {t('translation:default.buttons.select')}\n                        </Button>\n                      </Col>\n                      <Col>\n                        <SaveCancelButtons\n                          editMode={editMode}\n                          setEditMode={setEditMode}\n                          onCancel={handleCancel}\n                          handleRemove={() =>\n                            handleDelete(defaultDetails, index)\n                          }\n                        />\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        }\n      >\n        <div className={`px-15 pt-15 ${editMode ? \"pb-15\" : \"pb-8\"}`}>\n          <Row gutter={30}>\n            <Col sm={6}>\n              <FormTextArea\n                name=\"addr1\"\n                label={t('translation:default.fields.companyAddress.label')}\n                editMode={editMode}\n                rows={editMode ? 5 : 4}\n                margin={editMode ? \"mb-12\" : \"mb-5\"}\n                maxLength={100}\n              />\n              <CountrySelector\n                name=\"countryCode\"\n                label={t('translation:default.fields.country.label')}\n                editMode={editMode}\n                rules={[{ required: true, message: t('translation:default.fields.country.message') }]}\n                onChange={handleCountryChange}\n                margin={\"m-0\"}\n              />\n            </Col>\n            <Col sm={6}>\n              <PostalCodeInput\n                name={\"zip\"}\n                editMode={editMode}\n                countryCode={countryCode}\n                handleZipDetails={handleZipDetails}\n                rules={[\n                  { required: true, message: t('translation:default.fields.postalCode.message') },\n                ]}\n                margin={\"mb-15\"}\n              />\n              <StateSelector\n                name={\"state\"}\n                countryCode={countryCode}\n                rules={[{ required: true, message: t('translation:default.fields.state.message') }]}\n                margin={\"mb-12\"}\n                editMode={editMode}\n              />\n              <FormInput\n                name=\"city\"\n                label={t('translation:default.fields.city.label')}\n                editMode={editMode}\n                rules={[{ required: true, message: t('translation:default.fields.city.message') }]}\n                margin={\"m-0\"}\n              />\n            </Col>\n            <Col sm={6}>\n              <FormInput\n                name=\"contactName\"\n                label={t('translation:default.fields.contactName.label')}\n                editMode={editMode}\n                margin={\"mb-15\"}\n                maxLength={50}\n              />\n              <div className=\" mb-15\">\n                <FormLabel>{t('translation:default.fields.contactNumber')}</FormLabel>\n                <Row gutter={10} className=\"mt-2\">\n                  <Col sm={6}>\n                    <CountryCallingCodeSelector\n                      margin=\"mb-0\"\n                      editMode={editMode}\n                      name={\"countryCallingCode\"}\n                      placeholder={t('translation:default.fields.code')}\n                      label={false}\n                    />\n                  </Col>\n                  <Col sm={13}>\n                    <FormInput\n                      margin=\"mb-0\"\n                      editMode={editMode}\n                      name={\"phone\"}\n                      placeholder={t('translation:default.fields.number')}\n                      label={false}\n                      inputType={\"number\"}\n                      maxLength={15}\n                    />\n                  </Col>\n                  <Col sm={5}>\n                    <FormInput\n                      placeholder={t('translation:parcelExpress.locationForm.ext')}\n                      margin=\"mb-0\"\n                      editMode={editMode}\n                      name={\"phoneExt\"}\n                      label={false}\n                      maxLength={10}\n                    />\n                  </Col>\n                </Row>\n              </div>\n              <FormInput\n                name=\"contactEmail\"\n                label={t('translation:default.fields.contactEmailAddress.label')}\n                editMode={editMode}\n                margin={\"m-0\"}\n                rules={[{ type: \"email\", message: t('translation:default.notification.email') }]}\n                maxLength={150}\n              />\n            </Col>\n            <Col sm={6}>\n              <AppointmentSelector\n                label={t('translation:default.fields.appointmentType.label')}\n                name={\"appointmentType\"}\n                margin={`${editMode ? \"mb-12\" : \"mb-13\"}`}\n                editMode={editMode}\n              />\n              <Row\n                gutter={10}\n                className={`w-100 mb-2 ${editMode ? \"mb-12\" : \"mb-8\"}`}\n              >\n                <Col sm={24} className={editMode ? \"mb-2\" : \"\"}>\n                  <FormLabel className=\"form-input-label\">\n                    {t('translation:default.fields.daysOfWeek')}\n                  </FormLabel>\n                </Col>\n                <Col sm={12}>\n                  <FormSelectBox\n                    options={WEEKS_DAYS}\n                    editMode={editMode}\n                    singleLineMode={true}\n                    label={t('translation:default.fields.from.label')}\n                    colon={true}\n                    name={\"fromOperationDay\"}\n                    margin={\"mb-0\"}\n                    placeholder={t('translation:default.fields.from.placeholder')}\n                  />\n                </Col>\n                <Col sm={12}>\n                  <FormSelectBox\n                    options={WEEKS_DAYS}\n                    editMode={editMode}\n                    singleLineMode={true}\n                    label={t('translation:default.fields.to.label')}\n                    colon={true}\n                    name={\"toOperationDay\"}\n                    placeholder={t('translation:default.fields.to.placeholder')}\n                    margin={\"mb-0\"}\n                  />\n                </Col>\n              </Row>\n              <Row gutter={10} className={\"w-100\"}>\n                <Col sm={24} className={editMode ? \"mb-2\" : \"\"}>\n                  <FormLabel className=\"form-input-label\">\n                    {t('translation:default.fields.hoursOfOperations')}\n                  </FormLabel>\n                </Col>\n                <Col sm={12}>\n                  <FormTimePicker\n                    label={t('translation:default.fields.from.label')}\n                    colon={true}\n                    editMode={editMode}\n                    singleLineMode={true}\n                    name={\"fromOperationHours\"}\n                    margin={\"m-0\"}\n                  />\n                </Col>\n                <Col sm={12}>\n                  <FormTimePicker\n                    label={t('translation:default.fields.to.label')}\n                    colon={true}\n                    editMode={editMode}\n                    singleLineMode={true}\n                    name={\"toOperationHours\"}\n                    margin={\"m-0\"}\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n      </FilterCard>\n      <HiddenFormInput name=\"editMode\" />\n      <HiddenFormInput name=\"locationId\" />\n    </Form>\n  );\n};\n\nexport default AddressBookCard;\n","import { Divider, Form, Spin } from \"antd\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport React, { useEffect, useState, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteShipmentAddressBookInProgress,\r\n  searchCustomerAddressBookInProgress,\r\n  searchCustomerAddressBookInSuccess,\r\n  setCustomerAddressBookInError,\r\n  setShipmentAddressBookFilter,\r\n} from \"../../../../redux/shipment/ShipmentActions\";\r\nimport { valueToString } from \"../../../../utilz/utilz\";\r\nimport EmptyRecords from \"../../../components/Common/EmptyRecords\";\r\nimport CommonModal from \"../../../components/Modals/CommonModal\";\r\nimport ScrollPagination from \"../../../components/Paginations/ScrollPagination\";\r\nimport AddLocationForm from \"./AddLocationForm\";\r\nimport AddressBookCard from \"./AddressBookCard\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { routeFileSelector } from \"../../../../utilz/i18n\";\r\n\r\nconst AddressBookModal = ({\r\n  addressBookModal,\r\n  handleAddressBookModalClose,\r\n  onSelectAddressBook,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const saveAddressBookProgressing = useSelector(\r\n    (state) => state.shipment.saveAddressBook.progressing,\r\n    shallowEqual\r\n  );\r\n  const addressBookFilters = useSelector(\r\n    (state) => state.shipment.addressBookFilters,\r\n    shallowEqual\r\n  );\r\n  const customerAddressBooks = useSelector(\r\n    (state) => state.shipment.customerAddressBooks,\r\n    shallowEqual\r\n  );\r\n  const deleteAddressBookProgressing = useSelector(\r\n    (state) => state.shipment.deleteAddressBook.progressing,\r\n    shallowEqual\r\n  );\r\n  const userId = useSelector((state) => state.auth.user.data.id, shallowEqual);\r\n  const selectedCompany = useSelector(\r\n    (state) => state.auth.selectedCompany,\r\n    shallowEqual\r\n  );\r\n\r\n  const [isSearchShow, setIsSearchShow] = useState(false);\r\n  const { pathname: activeTab } = useLocation();\r\n  const namespace = useMemo(() => routeFileSelector(activeTab), [activeTab]);\r\n  const { t } = useTranslation([namespace, \"translation\"]);\r\n\r\n  const handleOnClickSearch = () => {\r\n    const formData = form.getFieldsValue();\r\n    const filterData = {\r\n      customerKey: valueToString(selectedCompany?.companyId),\r\n      searchId: valueToString(formData?.searchId),\r\n      name: valueToString(formData?.name),\r\n      address: valueToString(formData?.addr1),\r\n      state: valueToString(formData?.state),\r\n      countryCode: valueToString(formData?.countryCode),\r\n      city: valueToString(formData?.city),\r\n      zip: valueToString(formData?.zip),\r\n      pageSize: 10,\r\n      pageNumber: 1,\r\n      dataReset: true,\r\n    };\r\n    dispatch(setShipmentAddressBookFilter(filterData));\r\n    dispatch(searchCustomerAddressBookInProgress());\r\n    setIsSearchShow(true);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (addressBookFilters) {\r\n  //     const valuesArray = Object.values(addressBookFilters);\r\n  //     if (!valuesArray.includes(undefined)) {\r\n  //       dispatch(searchCustomerAddressBookInProgress());\r\n  //     }\r\n  //   }\r\n  // }, [addressBookFilters]);\r\n\r\n  const handleDeleteSuccess = (index) => {\r\n    let items = cloneDeep(customerAddressBooks?.data);\r\n    items.splice(index, 1);\r\n    dispatch(setCustomerAddressBookInError({ data: items }));\r\n  };\r\n\r\n  const handleDelete = (data, index) => {\r\n    let formData = {\r\n      id: data?.locationId,\r\n      callBackSuccess: () => handleDeleteSuccess(index),\r\n    };\r\n    dispatch(deleteShipmentAddressBookInProgress(formData));\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    dispatch(\r\n      setShipmentAddressBookFilter({\r\n        ...addressBookFilters,\r\n        pageNumber: Number(addressBookFilters?.pageNumber) + 1,\r\n      })\r\n    );\r\n    dispatch(searchCustomerAddressBookInProgress());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addressBookModal) {\r\n      form.resetFields();\r\n      dispatch(searchCustomerAddressBookInSuccess({ data: [] }));\r\n      setIsSearchShow(false);\r\n    }\r\n  }, [addressBookModal]);\r\n\r\n  return (\r\n    <CommonModal\r\n      title={t(\"translation:default.fields.addressBook\")}\r\n      open={addressBookModal}\r\n      className={`w-80 ${isSearchShow ? \"vh-85\" : \"h-auto\"}`}\r\n      okText={t(\"translation:default.buttons.add\")}\r\n      cancelText={t(\"translation:default.buttons.cancel\")}\r\n      onOk={() => form.submit()}\r\n      onClose={handleAddressBookModalClose}\r\n      onCancel={handleAddressBookModalClose}\r\n      okLoading={saveAddressBookProgressing}\r\n      customFooter={<></>}\r\n      descriptionClassName={\"mb-5 d-flex flex-direction-column\"}\r\n      contentClassName={\"p-0\"}\r\n    >\r\n      <div className=\"d-flex flex-direction-column flex-1 overflow-hidden\">\r\n        <div className=\"p-15\">\r\n          <AddLocationForm\r\n            formInstance={form}\r\n            handleSuccess={onSelectAddressBook}\r\n            handleOnClickSearch={handleOnClickSearch}\r\n          />\r\n        </div>\r\n        {isSearchShow && (\r\n          <>\r\n            <Divider className=\"m-0 border-top-border\" />\r\n            <div className=\"flex-1 overflow-hidden \">\r\n              <div className=\"py-15 h-100\">\r\n                <div className=\"position-relative h-100 overflow-hidden\">\r\n                  <ScrollPagination\r\n                    className=\"h-100 px-15\"\r\n                    loadMore={handleNextPage}\r\n                    isLoading={customerAddressBooks?.progressing}\r\n                    hasMore={\r\n                      customerAddressBooks?.progressing\r\n                        ? false\r\n                        : addressBookFilters.pageNumber <\r\n                          Math.ceil(\r\n                            customerAddressBooks?.totalRecords /\r\n                              addressBookFilters.pageSize\r\n                          )\r\n                    }\r\n                    scrollOffset={50}\r\n                  >\r\n                    {customerAddressBooks?.data?.length > 0 ? (\r\n                      <>\r\n                        {customerAddressBooks?.data.map((row, index) => (\r\n                          <AddressBookCard\r\n                            key={row?.locationId}\r\n                            index={index}\r\n                            defaultDetails={row}\r\n                            onSelectAddressBook={onSelectAddressBook}\r\n                            customerKey={selectedCompany?.companyId}\r\n                            currentUserId={userId}\r\n                            handleDelete={handleDelete}\r\n                          />\r\n                        ))}\r\n                      </>\r\n                    ) : (\r\n                      !customerAddressBooks?.progressing &&\r\n                      (customerAddressBooks?.success ||\r\n                        customerAddressBooks?.error) && <EmptyRecords />\r\n                    )}\r\n                  </ScrollPagination>\r\n\r\n                  {(saveAddressBookProgressing ||\r\n                    deleteAddressBookProgressing) && (\r\n                    <div className=\"absolute-spinner\">\r\n                      <Spin spinning={true} size=\"large\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </CommonModal>\r\n  );\r\n};\r\n\r\nexport default AddressBookModal;\r\n"],"names":["_g","_defs","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLocationPlus","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","clipPath","d","ForwardRef","useShipmentAppointmentList","list","setList","useState","undefined","shipmentAppointmentTypes","useSelector","state","common","dispatch","useDispatch","useEffect","success","data","getList","async","setShipmentAppointmentTypes","getShipmentAppointmentTypes","error","console","log","placeholder","i18n","label","rules","name","editMode","margin","onChange","options","setOptions","countryList","map","row","text","value","_jsx","FormSelectBox","loading","popupClassName","setLoading","getStatusList","getAllCountriesEffect","concat","countryName","countryCallingCode","FormAutoComplete","formInstance","handleSuccess","handleOnClickSearch","selectedCompany","user","auth","form","Form","useForm","pathname","activeTab","useLocation","namespace","useMemo","routeFileSelector","t","useTranslation","handleCallback","resetFields","countryCode","useWatch","_jsxs","onFinish","_ref2","_user$data","fromOperationDay","toOperationDay","fromOperationHours","toOperationHours","phone","payload","customerKey","companyId","createdBy","daysOfWeek","valueToString","hoursOfOperation","formateWithMoment","callback","saveShipmentAddressBookInProgress","initialValues","locationId","addr2","children","Row","gutter","Col","className","FormInput","required","message","FormTextArea","rows","CountrySelector","setFieldValue","PostalCodeInput","handleZipDetails","city","StateSelector","AppointmentSelector","FormLabel","sm","CountryCallingCodeSelector","inputType","type","WEEKS_DAYS","singleLineMode","colon","FormTimePicker","justify","Button","buttonType","onClick","HiddenFormInput","defaultDetails","onSelectAddressBook","currentUserId","index","handleDelete","Boolean","setEditMode","val","FilterCard","shadow","showBorder","customHeader","align","max","maxLength","disabled","variant","SaveCancelButtons","onCancel","handleCancel","setFieldsValue","handleRemove","_customerAddressBooks","addressBookModal","handleAddressBookModalClose","saveAddressBookProgressing","shipment","saveAddressBook","progressing","shallowEqual","addressBookFilters","customerAddressBooks","deleteAddressBookProgressing","deleteAddressBook","userId","isSearchShow","setIsSearchShow","formData","callBackSuccess","items","cloneDeep","splice","setCustomerAddressBookInError","handleDeleteSuccess","deleteShipmentAddressBookInProgress","searchCustomerAddressBookInSuccess","CommonModal","open","okText","cancelText","onOk","submit","onClose","okLoading","customFooter","_Fragment","descriptionClassName","contentClassName","AddLocationForm","getFieldsValue","filterData","searchId","address","addr1","zip","pageSize","pageNumber","dataReset","setShipmentAddressBookFilter","searchCustomerAddressBookInProgress","Divider","ScrollPagination","loadMore","handleNextPage","Number","isLoading","hasMore","Math","ceil","totalRecords","scrollOffset","AddressBookCard","EmptyRecords","Spin","spinning","size"],"sourceRoot":""}