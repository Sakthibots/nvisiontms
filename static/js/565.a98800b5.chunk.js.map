{"version":3,"file":"static/js/565.a98800b5.chunk.js","mappings":"uNAyDA,QA/CA,WACE,IAAIA,GAAWC,EAAAA,EAAAA,MACf,MAAMC,GAAWC,EAAAA,EAAAA,MA2CjB,OAzCAC,EAAAA,EAAAA,YAAU,KACR,IACIC,EADcC,OAAOC,SAASC,OACWC,QAAQ,MAAO,OAC5D,MAAMC,EAAe,IAAIC,gBAAgBN,GACzC,GAAIK,EAAaE,IAAI,SAAU,CAC7B,IAAIC,EAAaH,EAAaI,IAAI,SAClCD,EAAaA,EAAWJ,QAAQ,OAAQ,KACxCM,aAAaC,QAAQ,QAASH,GACPI,WAErB,IACI,IAAI,KAAEC,SAAeC,EAAAA,EAAAA,MACjBC,EAAW,CACbC,GAAQ,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,OACVC,UAAe,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMK,UACjBC,SAAc,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMM,SAChBC,MAAW,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MACbC,SAAc,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,SAChBC,MAAOd,EACPe,aAAkB,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aACpBC,gBAAqB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMW,gBACvBC,kBAAkB,GAEpB9B,GAAS+B,EAAAA,EAAAA,IAAwB,CAACb,KAAKA,KACvClB,GACEgC,EAAAA,EAAAA,IAAgB,CACdd,KAAME,KAGVL,aAAaC,QAAQ,WAAYiB,KAAKC,UAAUd,IAChDlB,EAAS,IAAK,CAAEO,SAAS,GAC7B,CAAE,MAAO0B,GACLjC,EAAS,IAAK,CAAEO,SAAS,GAC7B,GAIF2B,EACF,IACC,KAEIC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAM,SAAUC,MAAO,CAAEC,OAAQ,KAChD,C","sources":["views/pages/AuthPages/AuthPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getUserProfileInSuccess,\n  setLoginSuccess,\n} from \"../../../redux/auth/AuthActions\";\nimport { getUserProfileEffect } from \"../../../redux/auth/AuthEffects\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Spin } from \"antd\";\n\nfunction AuthPage() {\n  let dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    var queryString = window.location.search;\n    var queryStringWithPlaceholder = queryString.replace(/\\+/g, \"%2B\");\n    const searchParams = new URLSearchParams(queryStringWithPlaceholder);\n    if (searchParams.has(\"Token\")) {\n      var paramValue = searchParams.get(\"Token\");\n      paramValue = paramValue.replace(/%2B/g, \"+\");\n      localStorage.setItem(\"token\", paramValue);\n      const getProfileInfo = async () => {\n        \n        try {\n            let { data } = await getUserProfileEffect();\n            let response = {\n              id: data?.userId,\n              firstName: data?.firstName,\n              lastName: data?.lastName,\n              email: data?.email,\n              userType: data?.userType,\n              token: paramValue,\n              profileImage: data?.profileImage,\n              selectedCompany: data?.selectedCompany,\n              twoFactorEnabled: false,\n            };\n            dispatch(getUserProfileInSuccess({data:data}));\n            dispatch(\n              setLoginSuccess({\n                data: response,\n              })\n            );\n            localStorage.setItem(\"userInfo\", JSON.stringify(response));\n            navigate(\"/\", { replace: true });\n        } catch (error) {\n            navigate(\"/\", { replace: true });\n        }\n       \n      };\n\n      getProfileInfo();\n    }\n  }, []);\n\n  return <Spin size={\"medium\"} style={{ height: 20 }} />;\n}\nexport default AuthPage;\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useEffect","queryStringWithPlaceholder","window","location","search","replace","searchParams","URLSearchParams","has","paramValue","get","localStorage","setItem","async","data","getUserProfileEffect","response","id","userId","firstName","lastName","email","userType","token","profileImage","selectedCompany","twoFactorEnabled","getUserProfileInSuccess","setLoginSuccess","JSON","stringify","error","getProfileInfo","_jsx","Spin","size","style","height"],"sourceRoot":""}